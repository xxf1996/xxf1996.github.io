<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>利用3D transform实现视差滚动</title>
    <url>/post/3d-transform-parallax-scrolling/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>最近在网页中运用『视差滚动』比较流行，能让网页<strong>有一种立体层次感</strong>。</p>
<blockquote>
<p>视差滚动（Parallax Scrolling）是指让多层背景以不同的速度移动，形成立体的运动效果，带来非常出色的视觉体验。作为网页设计的热点趋势，越来越多的网站应用了这项技术。<br><br />
——百度百科</p>
</blockquote>
<p>说白了，『视差滚动』就是让同一页面的不同元素在滚动的时候，滚动速度各不相同，从而让人觉得页面有层次。然而<code>css3</code>新增的<code>3D transform</code>特性本身就可以为元素增加立体感，所以很适合用来实现『视差滚动』。</p>
<span id="more"></span>
<h2 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h2>
<p>相当于在<font color=red><strong>同一三维坐标系</strong></font>中，为不同层次的元素设置不同的<code>z</code>坐标，就自然形成了不同的立体层面，滚动的时候不同<code>z</code>坐标的元素拥有不同的滚动速度（从结果上来说是这样的），且<code>z</code>坐标越小（即离屏幕平面向内越远）的平面，滚动速度<strong>看起来越慢</strong>。</p>
<ol>
<li>利用<code>perspective</code>属性构造一个相机（观察者）容器，然后设置<code>perspective-origin</code>（消失点？相机焦点？）；</li>
<li>利用<code>transform-style</code>属性构造一个<code>3d</code>容器：</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br></pre></td></tr></table></figure>
<p>也就是其内的元素呈现方式为<code>3d</code>，相当于构建了一个三维坐标系；</p>
<ol start="3">
<li>在<code>3d</code>容器内利用<code>transform: translateZ()</code>设置不同的<code>z</code>坐标，体现层次；不过只设置<code>z</code>坐标，元素在投影到屏幕平面时，尺寸就不是原来的尺寸了，需要使用<code>scale()</code>进行缩放：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">缩放系数 = （z坐标 - perspective设置值）/ perspective设置值</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>光有<code>z</code>坐标并不会自动按照<code>z</code>的大小进行层次覆盖，而是按照<code>html</code>的先后顺序进行覆盖，所以还需要按照层级手动添加<code>z-index</code>属性；</li>
</ol>
<p><img src="https://pic.xiexuefeng.cc/markdown/180924/mfFkC1L81B.png?imageslim" alt="mark" /></p>
<center>实际上不同层面处于不同的z平面</center>
<p><img src="https://pic.xiexuefeng.cc/markdown/180924/eC3eCcJh1D.png?imageslim" alt="mark" /></p>
<center>表面上看起来就是层叠</center>
<h2 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h2>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#view</span>&#123;<span class="comment">/* 相机容器 */</span></span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">perspective</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">perspective-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow-x</span>: hidden;</span><br><span class="line">    <span class="attribute">overflow-y</span>: scroll;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.layer</span>&#123;<span class="comment">/* 3d容器 */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.l1</span>&#123;<span class="comment">/* 第一层级 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.l2</span>&#123;<span class="comment">/* 第二层级 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">300px</span>) <span class="built_in">scale</span>(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;view&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;layer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l1&quot;</span>&gt;</span>Layer 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l1&quot;</span>&gt;</span>Layer 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l1&quot;</span>&gt;</span>Layer 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l1&quot;</span>&gt;</span>Layer 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l1&quot;</span>&gt;</span>Layer 1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;layer&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l2&quot;</span>&gt;</span>Layer 2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l2&quot;</span>&gt;</span>Layer 2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;l2&quot;</span>&gt;</span>Layer 2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="https://php.xiexuefeng.cc/code/css_test/parallax-scrolling1.html">查看demo</a></p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://dumengjie.github.io/2017/07/24/%E8%AF%91-%E9%AB%98%E6%80%A7%E8%83%BD%E8%A7%86%E5%B7%AE%E6%BB%9A%E5%8A%A8/">[译]高性能视差滚动｜DuMengjie’s blog</a></li>
<li><a href="https://keithclark.co.uk/articles/pure-css-parallax-websites/demo3/">A grouped pure CSS parallax demo by Keith Clark</a></li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title>一个可行的全路由骨架屏生成方案</title>
    <url>/post/a-skeleton-generation-method/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>网上找了一圈关于<code>vue</code>骨架屏生成框架，但是目前最成熟的就是饿了么团队的<a href="https://github.com/ElemeFE/page-skeleton-webpack-plugin/blob/master/docs/i18n/zh_cn.md">page-skeleton-webpack-plugin</a>，但是由于该插件只能支持<code>history</code>模式，所以比较受限；</p>
<span id="more"></span>
<h2 id="改造"><a class="markdownIt-Anchor" href="#改造"></a> 改造</h2>
<p>比较理想的自然就是同微信开发者工具给小程序提供的一键生成骨架屏的方案，不过好在确实有一个相近的骨架屏生成插件：<a href="https://github.com/famanoder/dps">famanoder/dps: a way to make skeleton screen, 一种自动生成网页骨架屏的方式</a>；该插件的原理就是通过无头浏览器<code>puppeteer</code>来抓取预渲染的页面，然后根据一套规则对相应<code>DOM</code>结点生成对应的骨架图，最后生成一个<code>HTML</code>文件；不过该插件有以下几个不足：</p>
<ul>
<li>只能对单个页面进行骨架屏生成</li>
<li>生成的<code>HTML</code>文件比较粗糙</li>
</ul>
<p>但是，该插件只需要经过一些改动，就完全具备全路由页面的批量骨架屏生成；</p>
<ul>
<li>
<p>利用<code>node</code>环境变量来控制当前生成骨架屏的页面信息，然后用<code>node</code>脚本批量执行命令即可；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201031182909.png?imageslim" alt="img" /><br />
<img src="https://pic.xiexuefeng.cc/markdown/20201031182920.png?imageslim" alt="img" /><br />
<img src="https://pic.xiexuefeng.cc/markdown/20201031182932.png?imageslim" alt="img" /></p>
</li>
<li>
<p>该插件开放了一些样式修改及DOM结构修改的函数，可自行修改结构，最重要的是可以利用node函数将骨架屏文件作为一个vue文件进行写入，然后在路由页引用；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201031182954.png?imageslim" alt="img" /><br />
<img src="https://pic.xiexuefeng.cc/markdown/20201031183013.png?imageslim" alt="img" /></p>
</li>
</ul>
<h2 id="基本效果"><a class="markdownIt-Anchor" href="#基本效果"></a> 基本效果</h2>
<h3 id="原始页面"><a class="markdownIt-Anchor" href="#原始页面"></a> 原始页面</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201031183028.png?imageslim" alt="img" /></p>
<h3 id="对应的骨架屏页面"><a class="markdownIt-Anchor" href="#对应的骨架屏页面"></a> 对应的骨架屏页面</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201031183040.png?imageslim" alt="img" /></p>
<h2 id="结论"><a class="markdownIt-Anchor" href="#结论"></a> 结论</h2>
<ul>
<li>根据路由页面自动生成对应结构的骨架屏是完全可行的</li>
<li>要是想提高可控性，完全可以自己利用<code>puppeteerjs</code>替代上述提到的插件，自己解析就好了</li>
</ul>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://github.com/Jocs/jocs.github.io/issues/22">一种自动化生成骨架屏的方案 · Issue #22 · Jocs/jocs.github.io · GitHub</a>：有很多关于骨架屏生成的细节</li>
<li><a href="https://juejin.im/post/6844903893525069838">网页骨架屏自动生成方案（dps）</a></li>
<li><a href="https://github.com/lavas-project/vue-skeleton-webpack-plugin">GitHub - lavas-project/vue-skeleton-webpack-plugin: Lavas webpack plugin: skeleton solution for PWA webshell</a></li>
<li><a href="https://github.com/ElemeFE/page-skeleton-webpack-plugin">ElemeFE/page-skeleton-webpack-plugin: Webpack plugin to generate the skeleton page automatically</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/35505062">基于vue-cli实现自动生成Skeleton Page，多页skeleton - 知乎</a></li>
</ul>
]]></content>
      <categories>
        <category>业务</category>
      </categories>
      <tags>
        <tag>H5</tag>
      </tags>
  </entry>
  <entry>
    <title>关于挤压动画的一种尝试</title>
    <url>/post/a-squish-animation-test/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>前不久在<a href="https://codepen.io/aaroniker/pen/ExVrEPy">codepen</a>看到一个点击按钮出现挤压动画的<code>demo</code>，看起来很流畅，也比较简洁；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607164536.gif?imageslim" alt="img" /></p>
<p>然后一看源码，使用的是<code>GSAP</code>这个动画库加上<code>svg</code>路径结合的，看起来<code>SVG</code>的路径有点复杂。然后心里想着能不能用更简单的代码或者思路来还原这种效果，看了一些资料后，心里大概出现了几种思路：</p>
<ul>
<li>方法1：尝试利用<code>clip-path</code> + <code>animation</code>来实现</li>
<li>方法2：尝试利用<code>clip-path</code> + <code>SVG clipPath animation</code></li>
<li>方法3：尝试利用<code>transform</code>的<code>matrix()</code>进行矩阵变换 + <code>animation</code></li>
</ul>
<span id="more"></span>
<h2 id="尝试"><a class="markdownIt-Anchor" href="#尝试"></a> 尝试</h2>
<h3 id="方法一clip-path-animation"><a class="markdownIt-Anchor" href="#方法一clip-path-animation"></a> 方法一：clip-path + animation</h3>
<p><code>clip-path</code>属性用于设置裁剪区域，使得元素只有裁剪区域的部分才会显示，最关键的是<code>clip-path</code>支持动画！但是经过一番尝试，<code>clip-path</code>目前支持的裁剪形状并不能满足挤压动画的需求，即<strong>凹曲线</strong>；目前<code>clip-path</code>支持的形状有：</p>
<ul>
<li><code>inset()</code>：矩形；</li>
<li><code>circle()</code>：圆形；</li>
<li><code>ellipse()</code>：椭圆；</li>
<li><code>polygon()</code>：多边形；</li>
<li><code>url()</code>：引用<code>SVG</code>形状；</li>
<li>几何框盒；</li>
</ul>
<p>事实上，<code>clip-path</code>有个很强大的形状来源，即<code>path()</code>方法，该方法可以使用<code>SVG Path</code>语法来构建形状，但是该方法目前很多浏览器并不支持在<code>clip-path</code>属性中使用，所以就比较遗憾了；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607165810.png?imageslim" alt="img" /></p>
<h3 id="方法二clip-path-svg-clippath-aimation"><a class="markdownIt-Anchor" href="#方法二clip-path-svg-clippath-aimation"></a> 方法二：clip-path + SVG clipPath aimation</h3>
<p>没错，由于<code>clip-path</code>中可以使用<code>url()</code>方法来引用<code>SVG</code>图形，因此我们也可以借助<code>SVG</code>这条思路来实现挤压所需要的形状，毕竟<code>SVG path</code>语法是十分的强大，还支持贝塞尔曲线，几乎任何形状都可以绘制出来；</p>
<p>而具体到<code>SVG</code>中就是使用<code>clipPath</code>元素来声明一个裁剪区域，然后使用<code>url(#name)</code>来引用即可；这看名字就知道<code>clip-path</code>属性就是借鉴的<code>SVG clipPath</code>了，基本用法如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">id</span>=<span class="string">&quot;mask&quot;</span> <span class="attr">width</span>=<span class="string">&quot;0&quot;</span> <span class="attr">height</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">clipPath</span> <span class="attr">id</span>=<span class="string">&quot;m1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M0 200 L200 200 Q181 131 144 144 Q113 156 69 150 Q25 144 0 200&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">clipPath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">url</span>(<span class="string">&quot;#m1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在<code>clipPath</code>元素内定义的形状就是裁剪区域，除了可以使用<code>path</code>，还可以使用<code>SVG</code>内其他用来定义形状的元素，如：<code>&lt;rect&gt;</code>，<code>&lt;circle&gt;</code>等；不仅如此，还可以使用<code>SVG animation</code>语法，对形状进行动画处理；但是经实践，<code>path</code>的<code>d</code>属性开启动画后，被引用时并没有预想中那样有插值关键帧过渡的效果，而是直接跳到最后一帧，也就是说<code>clipPath</code>内的动画对于<code>path</code>没有效果：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">id</span>=<span class="string">&quot;mask&quot;</span> <span class="attr">width</span>=<span class="string">&quot;0&quot;</span> <span class="attr">height</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">clipPath</span> <span class="attr">id</span>=<span class="string">&quot;m1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M0 200 L200 200 Q181 131 144 144 Q113 156 69 150 Q25 144 0 200&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">animate</span></span></span><br><span class="line"><span class="tag">        <span class="attr">attributeType</span>=<span class="string">&quot;XML&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">attributeName</span>=<span class="string">&quot;d&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">from</span>=<span class="string">&quot;M0 200 L200 200 Q181 131 144 144 Q113 156 69 150 Q25 144 0 200&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">to</span>=<span class="string">&quot;M0 200 L200 200 Q188 100 119 150 Q88 175 44 181 Q13 188 0 200&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">dur</span>=<span class="string">&quot;2s&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">repeatCount</span>=<span class="string">&quot;indefinite&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">clipPath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">url</span>(<span class="string">&quot;#m1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>像上面这种利用<code>animate</code>改变<code>&lt;path&gt;</code>元素的<code>d</code>属性，在<code>clipPath</code>并没有看到效果；不知道是不是用法不对，反正利用<code>SVG animation</code>来改变贝塞尔曲线实现挤压动画的尝试失败了……</p>
<h3 id="方法三matrixmatrix3d"><a class="markdownIt-Anchor" href="#方法三matrixmatrix3d"></a> 方法三：matrix()/matrix3d()</h3>
<p>突然想起<code>transform</code>属性中可以使用<code>matrix()/matrix3d()</code>这种方法，也就是说还有矩阵变换这条路可以走；于是乎去网上找了下有没有类似挤压动画这种的扭曲变换，没想到还真找到一个比较相似的，叫做“柱面投影变换”；原理很简单，就是通过把<strong>矩形区域投影到一个圆柱体外侧面或内侧面</strong>上，从而得到一个挤压或拉伸的图形：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607165828.png?imageslim" alt="img" /></p>
<p>如果投影平面是<strong>圆柱体的外侧</strong>，那么就能得到跟挤压效果类似的<strong>凹曲线</strong>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607165839.png?imageslim" alt="img" /></p>
<p>然而，很明显这种变换是<strong>非线性变换</strong>，而<code>matrix()/matrix3d()</code><font color=red><strong>只能接受常数</strong></font>作为矩阵元素，也就没办法实现非线性变换了！</p>
<h2 id="改变思路思考原理"><a class="markdownIt-Anchor" href="#改变思路思考原理"></a> 改变思路：思考原理</h2>
<p>上面尝试的三种方法都失败了，可能是把问题想的太简单了，想通过已有的属性直接插值形成动画，而不想增加任何额外的计算；事实上，由于<code>clip-path</code>属性中有个<code>polygan()</code>方法可以绘制任意形状的多边形，而且支持动画（也就是可以关键帧自动插值），然而在图形学中，所有的<font color=#39f><strong>曲线本质上就是通过对曲线的插值绘制出线段得到</strong></font>的；也就是说我们可以通过插值得到一个近似挤压动画需要的多边形形状，只要能够找出描述那个挤压曲线的公式即可，实践证明这是可行的，而且最终代码还不怎么复杂且可控；</p>
<h3 id="挤压曲线的插值点坐标求解"><a class="markdownIt-Anchor" href="#挤压曲线的插值点坐标求解"></a> 挤压曲线的插值点坐标求解</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607165853.png?imageslim" alt="img" /></p>
<p>如图所示，以<strong>矩形区域左下角为原点</strong>，假设挤压曲线为<strong>一段圆弧</strong>，挤压曲线距离原底边最高处的高度（波峰高度）为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>，圆弧所处圆的半径为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>，再设圆弧对应的弦长度的一半为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>，于是就能得到：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>r</mi><mn>2</mn></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><mi>r</mi><mo>−</mo><mi>a</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><msup><mi>c</mi><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>⇒</mo><mi>r</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>c</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><mi>a</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}r^2 &amp;= (r - a)^2 + c^2 \\[1em]
\Rightarrow r &amp;= \frac{a^2 + c^2}{2a}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.001216000000001em;vertical-align:-2.250608000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.750608em;"><span style="top:-5.377608em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.2264999999999993em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.250608000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.750608em;"><span style="top:-5.377608em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.2264999999999993em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">a</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.250608000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>根据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>及圆心坐标就可以得到圆的轨迹方程：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>c</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mi>a</mi><mo>+</mo><mi>r</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><msup><mi>r</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">(x - c)^2 + (y - a + r)^2 = r^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>根据圆的轨迹方程又可以得到<font color=#39f><strong>挤压曲线（圆弧）部分</strong></font><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>的求解：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>−</mo><mi>a</mi><mo>+</mo><mi>r</mi><mo>=</mo><mo>±</mo><msqrt><mrow><msup><mi>r</mi><mn>2</mn></msup><mo>−</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>c</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt><mspace linebreak="newline" height="1em"></mspace><mo>∵</mo><mi>y</mi><mo>⩾</mo><mn>0</mn><mspace width="1em"/><mo>∧</mo><mspace width="1em"/><mi>r</mi><mo>−</mo><mi>a</mi><mo>&gt;</mo><mn>0</mn><mspace linebreak="newline" height="1em"></mspace><mo>∴</mo><mi>y</mi><mo>−</mo><mi>a</mi><mo>+</mo><mi>r</mi><mo>=</mo><msqrt><mrow><msup><mi>r</mi><mn>2</mn></msup><mo>−</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>c</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt><mspace linebreak="newline" height="1em"></mspace><mspace linebreak="newline" height="1em"></mspace><mo>⇒</mo><mi>y</mi><mo>=</mo><msqrt><mrow><msup><mi>r</mi><mn>2</mn></msup><mo>−</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>c</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt><mo>+</mo><mi>a</mi><mo>−</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">y - a + r = \pm \sqrt{r^2 - (x - c)^2} \\[1em]
\because y \geqslant 0 \quad \land \quad r - a &gt; 0 \\[1em]
\therefore y - a + r = \sqrt{r^2 - (x - c)^2} \\[1em] \\[1em]
\Rightarrow y = \sqrt{r^2 - (x - c)^2} + a - r
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.25612499999999994em;"></span><span class="mord">±</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.983875em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">c</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.9438750000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25612499999999994em;"><span></span></span></span></span></span></span><span class="mspace newline" style="margin-top:1em;"></span><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83111em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">⩾</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span><span class="mspace newline" style="margin-top:1em;"></span><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.25612499999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.983875em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">c</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.9438750000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25612499999999994em;"><span></span></span></span></span></span></span><span class="mspace newline" style="margin-top:1em;"></span><span class="mspace newline" style="margin-top:1em;"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.25612499999999994em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.983875em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">c</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.9438750000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25612499999999994em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span></span></p>
<p>由于<code>a</code>和<code>c</code>是已知的，然后就能得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>；因此，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>确定后，就能得到对应的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>值了；所以挤压曲线上每个点的坐标都可以求出，也就能够进行插值化处理了！</p>
<h3 id="插值化处理"><a class="markdownIt-Anchor" href="#插值化处理"></a> 插值化处理</h3>
<p>在底边上等间距选取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>个点，根据这些点的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>坐标和已确定的波峰高度就能够得到对应位置的挤压曲线上的坐标点位置（其实主要是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>值，以水平方向挤压曲线为例），然后按顺序连接这些插值得到的挤压曲线上的点，就可以得到近似挤压曲线的线段，这些线段闭合后就符合挤压动画所需的挤压效果了；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607165905.png?imageslim" alt="img" /></p>
<p>可以设计函数来根据参数（如插值点个数，波峰高度等）自动生成符合<code>polygan()</code>方法接受的路径格式；如下所示：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取弦上一点对应圆弧的高度差</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; x 圆弧对应的弦偏移位置</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; length 挤压圆弧对应的弦长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; crest 挤压圆弧波峰高度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSquishOffset</span> (<span class="params">x, length, crest</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> half = length / <span class="number">2</span></span><br><span class="line">  <span class="keyword">const</span> half_2 = half * half</span><br><span class="line">  <span class="keyword">const</span> crest_2 = crest * crest</span><br><span class="line">  <span class="keyword">const</span> r = (half_2 + crest_2) / (<span class="number">2</span> * crest)</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(</span><br><span class="line">    r * r - <span class="title class_">Math</span>.<span class="title function_">pow</span>(x - half, <span class="number">2</span>)</span><br><span class="line">  ) + crest - r</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据配置获取相应元素的挤压动画关键帧参数，拼接形式为多边形（polygan）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@member</span> &#123;<span class="type">number</span>&#125; width 元素宽度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@member</span> &#123;<span class="type">number</span>&#125; height 元素高度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@member</span> &#123;<span class="type">number</span>&#125; crestX 水平挤压曲线波峰高度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@member</span> &#123;<span class="type">number</span>&#125; crestY 垂直挤压曲线波峰高度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@member</span> &#123;<span class="type">number</span>&#125; pointX 水平方向插点个数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@member</span> &#123;<span class="type">number</span>&#125; pointY 垂直方向插点个数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getSquishPath</span> (<span class="params">&#123;width, height, crestX = <span class="number">3</span>, crestY = <span class="number">3</span>, pointX = <span class="number">11</span>, pointY = <span class="number">11</span>&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> fromTop = [] <span class="comment">// 上 + 右</span></span><br><span class="line">  <span class="keyword">let</span> fromBottom = [] <span class="comment">// 下 + 左</span></span><br><span class="line">  <span class="keyword">let</span> toTop = []</span><br><span class="line">  <span class="keyword">let</span> toBottom = []</span><br><span class="line">  <span class="keyword">const</span> perX = <span class="number">100</span> / (pointX - <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">const</span> perY = <span class="number">100</span> / (pointY - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; pointX; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> curX = <span class="title class_">Number</span>((i * perX).<span class="title function_">toFixed</span>(<span class="number">2</span>)) <span class="comment">// 当前水平位置百分比</span></span><br><span class="line">    <span class="keyword">const</span> offset = <span class="title class_">Number</span>(<span class="title function_">getSquishOffset</span>(width * curX / <span class="number">100</span>, width, crestX).<span class="title function_">toFixed</span>(<span class="number">2</span>))</span><br><span class="line">    fromTop.<span class="title function_">push</span>(<span class="string">`<span class="subst">$&#123;curX&#125;</span>% 0%`</span>)</span><br><span class="line">    fromBottom.<span class="title function_">unshift</span>(<span class="string">`<span class="subst">$&#123;curX&#125;</span>% 100%`</span>)</span><br><span class="line">    toTop.<span class="title function_">push</span>(<span class="string">`<span class="subst">$&#123;curX&#125;</span>% <span class="subst">$&#123;offset&#125;</span>px`</span>)</span><br><span class="line">    toBottom.<span class="title function_">unshift</span>(<span class="string">`<span class="subst">$&#123;curX&#125;</span>% calc(100% - <span class="subst">$&#123;offset&#125;</span>px)`</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; pointY - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> curY = <span class="title class_">Number</span>((i * perY).<span class="title function_">toFixed</span>(<span class="number">2</span>)) <span class="comment">// 当前垂直位置百分比</span></span><br><span class="line">    <span class="keyword">const</span> reverseY = <span class="title class_">Number</span>((<span class="number">100</span> - i * perY).<span class="title function_">toFixed</span>(<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">const</span> offset = <span class="title class_">Number</span>(<span class="title function_">getSquishOffset</span>(height * curY / <span class="number">100</span>, height, crestY).<span class="title function_">toFixed</span>(<span class="number">2</span>))</span><br><span class="line">    fromTop.<span class="title function_">push</span>(<span class="string">`100% <span class="subst">$&#123;curY&#125;</span>%`</span>)</span><br><span class="line">    fromBottom.<span class="title function_">push</span>(<span class="string">`0% <span class="subst">$&#123;reverseY&#125;</span>%`</span>)</span><br><span class="line">    toTop.<span class="title function_">push</span>(<span class="string">`calc(100% - <span class="subst">$&#123;offset&#125;</span>px) <span class="subst">$&#123;curY&#125;</span>%`</span>)</span><br><span class="line">    toBottom.<span class="title function_">push</span>(<span class="string">`<span class="subst">$&#123;offset&#125;</span>px <span class="subst">$&#123;reverseY&#125;</span>%`</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>([fromTop.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>), fromBottom.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>)].<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>))</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>([toTop.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>), toBottom.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>)].<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>))</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">from</span>: [fromTop.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>), fromBottom.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>)].<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>), <span class="comment">// 初始帧（实际上就是矩形）</span></span><br><span class="line">    <span class="attr">to</span>: [toTop.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>), toBottom.<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>)].<span class="title function_">join</span>(<span class="string">&#x27;, &#x27;</span>) <span class="comment">// 挤压最后帧（挤压圆弧插值）</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="其他注意事项"><a class="markdownIt-Anchor" href="#其他注意事项"></a> 其他注意事项</h2>
<h3 id="动态修改挤压效果"><a class="markdownIt-Anchor" href="#动态修改挤压效果"></a> 动态修改挤压效果</h3>
<p>如果想要动态修改动画效果，即修改<code>@keyframes</code>里面的内容；有一种思路就是利用原生的<code>CSS</code>变量，用<code>CSS</code>变量来存储关键帧中<code>clip-path</code>属性的值，然后利用<code>:root</code>（即根文档节点）元素的<code>style</code>来设置变量值，如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> root = <span class="variable language_">document</span>.<span class="property">documentElement</span> <span class="comment">// 获取根文档节点</span></span><br><span class="line"><span class="comment">// 设置css变量用于传递动画参数</span></span><br><span class="line">root.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&#x27;--test-from&#x27;</span>, <span class="string">`polygon(<span class="subst">$&#123;info.<span class="keyword">from</span>&#125;</span>)`</span>)</span><br><span class="line">root.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&#x27;--test-to&#x27;</span>, <span class="string">`polygon(<span class="subst">$&#123;info.to&#125;</span>)`</span>)</span><br><span class="line">root.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&#x27;--test-duration&#x27;</span>, config.<span class="property">duration</span> + <span class="string">&#x27;s&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>然后在关键帧动画相应的位置引用变量即可，这样动态修改变量值后，对应的动画效果也会改变；如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> test &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">var</span>(--test-from);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">var</span>(--test-to);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">var</span>(--test-from);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="如何在每次点击的时候触发动画"><a class="markdownIt-Anchor" href="#如何在每次点击的时候触发动画"></a> 如何在每次点击的时候触发动画</h3>
<p>简单粗暴的通过点击事件添加动画，动画完成后移除动画这种方式我没试过是否可行；我使用的是另一种思路：将动画播放次数设置为<strong>无限次数</strong>，但是默认的<code>animation-play-state</code>为<code>paused</code>（即暂停状态），点击后将动画的播放状态设置为<code>running</code>（即播放状态），每次动画结束后自动切换为暂停状态。</p>
<p>顺便说一下，监听动画每一次结束的时机可以使用<code>animationiteration</code>这个事件（该事件本质是在每次动画开始前触发，但不包括第一次，因此可用来当作动画每次播放结束的触发点）；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">demo.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  demo.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;play&#x27;</span>) <span class="comment">// 点击播放动画</span></span><br><span class="line">&#125;)</span><br><span class="line">demo.<span class="title function_">addEventListener</span>(<span class="string">&#x27;animationiteration&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  demo.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;play&#x27;</span>) <span class="comment">// 动画一次结束后暂停</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>我承认这种方法有点“硬核”，包含一些数学公式的推导，但实际上用到的知识只是高中数学里面的，过程并不复杂，只不过很久没用有点生疏了；而且第一次推导的时候还弄错了，有点尴尬，不过推导成功还是挺舒服的，最后得到的代码也并不复杂，最重要的是理解了本质问题，又加以应用，还是收获很大的；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607165916.png?imageslim" alt="img" /></p>
<p>上面就是推导过程的草稿，好久没写过数学推导了，还是挺有意思的；最后写了一个交互的<code>demo</code>，效果看起来还比较满意，可能动画参数还需要打磨一下；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607165929.gif?imageslim" alt="img" /></p>
<p>这个交互<code>demo</code>还可以随时调整一些挤压动画的参数，然后查看改变后的效果；<code>demo</code>地址为：<a href="https://codepen.io/xxf1996/pen/BajNzRb">A squish animation demo</a></p>
<h2 id="扩展资料关于柱面投影变换的思路"><a class="markdownIt-Anchor" href="#扩展资料关于柱面投影变换的思路"></a> 扩展资料：关于柱面投影变换的思路</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/92473178">28. 图像扭曲 - 知乎</a></li>
<li><a href="https://blog.csdn.net/yang6464158/article/details/41805165">2D射影儿何和变换——柱面投影，图像拼接柱面投影_yang6464158的专栏-CSDN博客</a></li>
<li><a href="https://stackoverflow.com/questions/12017790/warp-image-to-appear-in-cylindrical-projection?lq=1">3d - Warp Image to Appear in Cylindrical Projection - Stack Overflow</a>：有详细的原理推导和代码示例</li>
<li><a href="https://www.jianshu.com/p/305b323e9103">css3动画的更深层次的探究（矩阵变换） - 简书</a></li>
</ul>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://css-tricks.com/animating-with-clip-path/">Animating with Clip-Path | CSS-Tricks  Flywheel logo</a></li>
<li><a href="https://stackoverflow.com/questions/8191300/svg-animate-paths-d-attribute">javascript - SVG animate path’s d attribute - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/58496167/how-to-animate-clipping-paths-defined-in-svg-elements">html - How to animate clipping paths defined in SVG elements? - Stack Overflow</a></li>
<li><a href="https://www.sollrei.me/post/frontend/2018-09-29">使用JavaScript修改CSS变量</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/basic-shape"><basic-shape> - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/CSSStylesheet">CSSStyleSheet - Web API 接口参考 | MDN</a></li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>动效</tag>
      </tags>
  </entry>
  <entry>
    <title>Alova的简单使用心得</title>
    <url>/post/alova-simple-usage-experience/</url>
    <content><![CDATA[<h1 id="传统请求库的痛点"><a class="markdownIt-Anchor" href="#传统请求库的痛点"></a> 传统请求库的痛点</h1>
<p>传统请求库（如 <code>axios</code>或浏览器的 <code>fetch API</code>）专注于请求本身，这一点上它们的职责其实很专注，在请求这一功能上已经做得挺不错了；不过实际业务和项目中跟请求相关的一些常用的功能，这种请求库通常不会提供，虽说我们可以根据自身业务需求自己抽象出一些常用的功能，形成自己的请求策略库或者类似的工具，但偷懒是人之本性🙈（其实也是为了避免重复造轮子）。</p>
<span id="more"></span>
<h1 id="常见的一些请求策略"><a class="markdownIt-Anchor" href="#常见的一些请求策略"></a> 常见的一些请求策略</h1>
<p>仔细回想一下我们在项目中围绕着请求这一动作本身，会衍生出哪些常见的需求？</p>
<h2 id="loading状态"><a class="markdownIt-Anchor" href="#loading状态"></a> Loading状态</h2>
<p>在诸如获取列表，提交表单这种业务场景下，页面中基本上都需要一个提示用户正在进行的 <code>loading</code>状态，这种 <code>loading</code>状态就是跟请求这一动作强相关的；虽然实际业务代码中，这么一种 <code>loading</code>状态的修改就是一两行代码的事情，比如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line">loading.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line"><span class="keyword">await</span> <span class="title function_">someRequest</span>()</span><br><span class="line">loading.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure>
<h2 id="中止请求"><a class="markdownIt-Anchor" href="#中止请求"></a> 中止请求</h2>
<p>在某些业务场景中，不可避免的会出现频繁触发请求的情况，而通常只需要对最后一次请求进行有效响应，因此就需要对之前已经发出的请求进行手动中止；传统的请求库一般都是需要手动创建一个<a href="https://developer.mozilla.org/en-US/docs/Web/API/AbortController">AbortController</a>，给到具体的请求，然后基于 <code>AbortController</code>进行中止操作，如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> controller = <span class="keyword">new</span> <span class="title class_">AbortController</span>();</span><br><span class="line"></span><br><span class="line">axios.<span class="title function_">get</span>(<span class="string">&#x27;/foo/bar&#x27;</span>, &#123;</span><br><span class="line">   <span class="attr">signal</span>: controller.<span class="property">signal</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">response</span>) &#123;</span><br><span class="line">   <span class="comment">//...</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// cancel the request</span></span><br><span class="line">controller.<span class="title function_">abort</span>()</span><br></pre></td></tr></table></figure>
<h2 id="超时重试请求"><a class="markdownIt-Anchor" href="#超时重试请求"></a> 超时重试请求</h2>
<p>顾名思义，在某些业务场景下需要对一些超时的接口进行多次的重试，以便提高业务可靠性；这种需求一般可以通过在请求的错误回调中识别出是超时来发起重试，其实axios也有相关的 <code>retry</code>插件——<a href="https://www.npmjs.com/package/axios-retry">axios-retry - npm</a>；</p>
<h2 id="请求结果缓存"><a class="markdownIt-Anchor" href="#请求结果缓存"></a> 请求结果缓存</h2>
<p>对于某些不太变化的接口数据，或者有可能在一定时间内对同一接口发起相同参数的请求时，我们可能希望能够缓存接口数据，以便减少不必要的请求；这种缓存请求结果的需求通常根据<strong>粒度</strong>不同，实现的复杂程度也不太一样，不过肯定比上面提到的需求是要复杂的。</p>
<h1 id="alova"><a class="markdownIt-Anchor" href="#alova"></a> Alova</h1>
<p>虽然上面提到的一些跟请求相关的需求都比较简单，几行代码就能搞定，不过一想到每个请求都要写一遍<strong>重复繁琐</strong>的代码，我就觉得不能忍。</p>
<p><a href="https://alova.js.org/zh-CN/">Alova</a>就是针对这些看似简单但其实挺繁琐的请求相关的业务处理进行提取，所形成的一个<strong>请求策略库</strong>，对于很多与请求相关的业务逻辑都提供了开箱即用的功能，简单的配置一下就能使用。对我个人来说，我挺喜欢他们官网上写的那句 <code>slogan</code>——”一行代码完成各种复杂场景的网络请求，别再花时间在请求这件小事上了，交给我们“</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240319113325.png?imageslim" alt="image.png" /></p>
<p>关于 <code>Alova</code>的具体使用，就不多说了，建议参考他们的<a href="https://alova.js.org/zh-CN/tutorial/getting-started">官方文档</a>，特别详细；我觉得只要想到了一些跟请求相关的需求，如果想偷懒的话去文档里面看看有没有相关的业务场景，说不定就有呢😁。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240319113838.png?imageslim" alt="image.png" /></p>
<h2 id="优点"><a class="markdownIt-Anchor" href="#优点"></a> 优点</h2>
<ul>
<li><code>API</code>为 <code>hooks</code>风格，跟目前主流前端框架风格匹配</li>
<li>数据可以跟前端框架匹配，如框架选择 <code>Vue</code>可以返回 <code>Ref</code>类型数据</li>
<li>进可攻，退可守：<code>Alova</code>的用法可以完全退化成传统请求库那种用法——即单纯的请求处理；因为后续的请求策略都是通过 <code>hooks</code>对接口实例进行包裹而得到的，所以不必担心使用了它之后就没法针对单个接口进行自定义的逻辑处理。</li>
</ul>
<h2 id="槽点"><a class="markdownIt-Anchor" href="#槽点"></a> 槽点</h2>
<ul>
<li><code>useRequest</code>执行时<strong>默认会执行一次发送请求</strong><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>：这个设计个人觉得略微欠缺考虑，因为只有请求列表的一些接口才会需要立即执行，如果考虑到实际业务中通常需要对页面筛选数据加载完再进行列表的请求，那么这个立即执行的需求就更低了；且更要命的是默<code>&lt;font color=#f00&gt;</code>认执行的请求并不会带请求参数<code>&lt;/font&gt;</code>，所以这个功能就更鸡肋了。因此在实际使用中，经常需要对 <code>useRequest</code>手动增加 <code>&#123;immediate: false&#125;</code>的配置，就挺繁琐的。</li>
<li><code>useRequest</code>返回的请求函数<code>&lt;font color=#f00&gt;</code>丢失了参数类型<code>&lt;/font&gt;</code>：我不知道为啥不按照传入的请求函数返回参数类型，而是直接使用 <code>any[]</code>，从技术上简单的使用 <code>TS</code>的类型推断就能做到，这种毫无必要的类型丢失会损害写 <code>TS</code>的开发体验。<br />
<img src="https://pic.xiexuefeng.cc/markdown/20240319121959.png?imageslim" alt="image.png" /></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://alova.js.org/zh-CN/api/core-hooks#userequest">https://alova.js.org/zh-CN/api/core-hooks#userequest</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>请求</tag>
      </tags>
  </entry>
  <entry>
    <title>关于carverry</title>
    <url>/post/about-carverry/</url>
    <content><![CDATA[<h2 id="整体设计"><a class="markdownIt-Anchor" href="#整体设计"></a> 整体设计</h2>
<p>这是一套比较<font color=#f00>激进</font>的可视化搭建方案（激进体现在适用场景和技术栈的选择上），核心思想就是<font color=#f00>极致的内聚</font>；因此可以看到除了必要的组件配置，其他所有相关的配置都砍掉了，理由就是这些配置完全可以通过内聚使其成为内部参数，而减少不必要的<strong>参数暴露</strong>（这一点可以参照现有的一些比较流行的可视化搭建方案，它们都尽可能实现对组件框架的所有语法的完全映射，以便达到最大的自由度）；从可视化搭建业务的角度来说，一般就是封装的程度越高，其自由度越低，而搭建效率就越高<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>；而这套设计就是为了提高业务搭建效率，所以自然就倾向于内聚；</p>
<h3 id="预期适用场景"><a class="markdownIt-Anchor" href="#预期适用场景"></a> 预期适用场景</h3>
<ul>
<li><strong>面向人群</strong>：前端编程人员；</li>
<li><strong>预期解决的问题</strong>：减少花在拼接组件的过程中写胶水代码的时间，更加直接直观地去搭积木；</li>
<li><strong>内聚</strong>：业务和组件/代码区块的内聚程度越高，复用和可视化搭建的效率也就越高；</li>
<li><strong>面向项目</strong>：<code>Vue3</code>（<code>≥3.2</code>，用于支持<code>setup</code>模式） +  <code>TS</code>；</li>
</ul>
<span id="more"></span>
<h3 id="数据模型"><a class="markdownIt-Anchor" href="#数据模型"></a> 数据模型</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220217184413785.png" alt="image-20220217184413785" /></p>
<p>从数据模型就不难发现所谓的激进之处在哪，差不多砍掉了大部分的语法映射，只保留组件最最核心的部分（即没法通过内聚合并参数来解决）；为何可以做到只保留这些属性就可以实现完全的映射？因为其他诸如生命周期，指令等在形成业务逻辑时，完全不必要暴露出来，直接在内部进行处理，而仅仅需要注入<font color=#f00>完全需要外部数据</font>的部分；</p>
<h4 id="关于变量的注入"><a class="markdownIt-Anchor" href="#关于变量的注入"></a> 关于变量的注入</h4>
<p>可以看到，变量的配置分为两个部分：</p>
<ul>
<li><strong>位置</strong>：这里的位置就是指文件的位置，可以是本地文件路径，也可以是其他位置（诸如仓库地址，包等等）；这样就可以不局限于从本地获取；</li>
<li><strong>标识符</strong>：不管是何种类型的变量，始终都是通过标识符进行暴露和定位的；</li>
</ul>
<p>因此，通过这两部分信息理论上可以从任何地方获取变量（数据）；</p>
<h3 id="技术栈的选择"><a class="markdownIt-Anchor" href="#技术栈的选择"></a> 技术栈的选择</h3>
<p>技术栈的选择则又是激进的另一部分，很多都是全新的，不太考虑向下兼容性（因为不存在历史包袱）；</p>
<h4 id="carverrycore"><a class="markdownIt-Anchor" href="#carverrycore"></a> @carverry/core</h4>
<ul>
<li><a href="https://typestrong.org/ts-node/">ts-node</a>：这是一个<code>node</code>端的<code>TS</code>执行器，可以达到用<code>TS</code>写<code>node</code>代码而不<strong>预先编译</strong>就执行的目的；</li>
<li><a href="https://github.com/farrow-js/farrow">farrow</a>：这是一个基于<code>TS</code>编写、类型友好、开箱即用，轻量简单的<code>node</code>服务端框架；配合<code>ts-node/TS</code>使用良好；</li>
<li>命令行相关工具：<code>inquirer</code>、<code>commander</code>、<code>chalk</code>；</li>
<li><a href="https://github.com/typicode/lowdb">lowdb</a>：基于<code>JSON</code>文件做数据管理的轻量级数据库工具；</li>
<li><a href="https://github.com/websockets/ws">ws</a>：简单轻便的<code>node</code>端<code>websocket</code>服务搭建工具；</li>
</ul>
<h4 id="carverryapp"><a class="markdownIt-Anchor" href="#carverryapp"></a> @carverry/app</h4>
<p>可视化搭建应用的技术栈选择可以说是无关紧要了，毕竟只要最后的输出产物可以运行即可……所以采用了目前最顺手的一套：</p>
<ul>
<li><code>Vue3</code></li>
<li><code>TS</code></li>
<li><code>element-plus</code></li>
<li><code>vite</code></li>
</ul>
<h3 id="规范设计"><a class="markdownIt-Anchor" href="#规范设计"></a> 规范设计</h3>
<h4 id="物料项目"><a class="markdownIt-Anchor" href="#物料项目"></a> 物料项目</h4>
<p>所谓的物料项目，实际上就是给可视化搭建平台提供组件原料的组件库；而为了快速生产满足可视化搭建使用要求的物料，则需要对物料设计一些规范：</p>
<ul>
<li><strong>项目无需编译打包</strong>：为了避免重复依赖引入，项目所有的<code>dependencies</code>都放到<code>peerDependencies</code>里面，并且<font color=#f00>指定包的版本兼容范围</font>；这样做的好处就是把依赖安装全部集中到使用项目本身，避免一些相同包的不同版本出现重复打包；虽说无需编译，但是一些额外的元数据还是需要进行预编译比较好，以便在使用这些物料时无需再额外生成元数据，而这个编译命令都集中在<code>@carverry/core</code>的<code>cli</code>里了，所以没啥负担；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220428151453354.png?imageslim" alt="image-20220428151453354" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220428151736633.png?imageslim" alt="image-20220428151736633" /></p>
<ul>
<li><strong>项目结构</strong>：为了方便统一的编译和有明确模式的引入（即在对应项目按照某种模式自动化的引入物料），所以确定一个统一的项目结构是比较明智的；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220428152932460.png?imageslim" alt="image-20220428152932460" /></p>
<p>​	实际上就是限定了所有源码放在<code>src</code>，其中物料源码都放在<code>materials</code>里面，而<code>materials</code>里面的每个子目录都代表一个具体的组件，至于<code>src</code>里面其他的文件夹则完全不需要硬性的约束了。具体到单个物料的目录，也有一定的规范：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220428153950811.png?imageslim" alt="image-20220428153950811" /></p>
<p>​	至于<code>carverry.material.json</code>文件的作用，其实就是补充物料的一些无法自动获取的元数据及一些配置，目前满足如下的<code>JSON schema</code>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220428154228024.png?imageslim" alt="image-20220428154228024" /></p>
<ul>
<li><strong>单元测试</strong>：对于公共组件，自然少不了单测，否则无法维持一个可信任、可持续迭代、健壮的组件库；这里选用了<a href="https://github.com/vitest-dev/vitest">vitest</a>作为单测框架，无他，<code>vite</code>生态的最佳选择；</li>
<li><strong>组件文档</strong>：采用<code>storybook</code>，可以考虑直接部署文档；</li>
</ul>
<h4 id="命令行设计"><a class="markdownIt-Anchor" href="#命令行设计"></a> 命令行设计</h4>
<p>为了提升物料相关的开发效率及启动可视化搭建等功能，<code>@carverry/core</code>提供了一系列<code>cli</code>命令：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220428160201164.png?imageslim" alt="image-20220428160201164" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220428160314884.png?imageslim" alt="image-20220428160314884" /></p>
<h2 id="细节"><a class="markdownIt-Anchor" href="#细节"></a> 细节</h2>
<h3 id="基于workspaces的开发"><a class="markdownIt-Anchor" href="#基于workspaces的开发"></a> 基于workspaces的开发</h3>
<p>由于<code>carverry</code>相关的包有一定的关联性，所以一开始就打算放在一个项目里面进行开发，采用目前流行的分包开发模式，而分包开发目前主要有一种模式：</p>
<ul>
<li><strong>monorepo</strong>：“Monorepo 是管理项目代码的一个方式，指在一个项目仓库 (repo) 中管理多个模块/包 (package)，不同于常见的每个模块建一个 repo。”<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></li>
</ul>
<p>而<code>yarn workspaces</code>本身提供了一种比较便捷的<code>monorepo</code>开发方式，仅需要增加一些<code>yarn</code>的配置即可；而其他的包管理器（<code>pnpm/npm</code>）本身也有类似的配置。</p>
<p>不过由于一开始并不了解<code>monorepo</code>的管理机制，所以在<code>git</code>提交上面犯了错误，导致不同包之间的<code>git</code>提交混合在了一起，所以生成的<code>changelog</code>版本号十分奇怪……这里就推荐一个最佳实践<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>；</p>
<h3 id="基于ts-node的开发"><a class="markdownIt-Anchor" href="#基于ts-node的开发"></a> 基于ts-node的开发</h3>
<p>其实一开始基于<code>ts-node/TS</code>开发倒也没发现太多的限制，但是由于项目中使用了<code>lowdb</code>这个较为特殊的库，这个库的最新版本（<code>3.0+</code>）全面采用<code>ESM</code>模块，不兼容<code>CommonJS</code>模块，导致使用该库的项目也必须采用<code>ESM</code>模块；而目前<code>node</code>的<code>LTS</code>版本（16）还不全面支持<code>ESM</code>模块，只是把这个功能放到实验特性里面（作为加载器使用，好在<code>ts-node</code>完全提供了<code>ESM</code>模块的加载器）；所以基于<code>TS</code>开发的<code>node</code>代码索性全部采用更为激进的<code>ESM</code>模块，不过不需要太担心，<code>ESM</code>是<code>node</code>的未来主流，且已知在下一个<code>LTS</code>版本（18）可以原生全面支持<code>ESM</code><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>；</p>
<h4 id="目前esm的限制"><a class="markdownIt-Anchor" href="#目前esm的限制"></a> 目前ESM的限制</h4>
<ul>
<li>最明显的就是用<code>import</code>替代<code>require</code>；</li>
<li>一些内置的系统变量不能直接使用，如：<code>__dirname</code>；</li>
<li>无法再像之前的<code>CommonJS</code>模块一样，直接导入<code>json</code>文件；解决方法可以参考这个——<a href="https://www.stefanjudis.com/snippets/how-to-import-json-files-in-es-modules-node-js/">How to import JSON files in ES modules (Node.js) | Stefan Judis Web Development</a>，而后续<code>LTS</code>版本应该会支持在<code>ESM</code>模块直接导入<code>json</code>文件；</li>
</ul>
<p>关于更多的写法不同，可以参考<code>ts-node</code>官方给出的指南——<a href="https://github.com/TypeStrong/ts-node/issues/1007">ESM support: soliciting feedback · Issue #1007 · TypeStrong/ts-node</a>；</p>
<h4 id="esm-shebang-执行"><a class="markdownIt-Anchor" href="#esm-shebang-执行"></a> ESM Shebang 执行</h4>
<blockquote>
<p>在计算领域中，Shebang（也称为Hashbang）是一个由井号和叹号构成的字符序列#!，其出现在文本文件的第一行的前两个字符。 在文件中存在Shebang的情况下，类Unix操作系统的程序加载器会分析Shebang后的内容，将这些内容作为解释器指令，并调用该指令，并将载有Shebang的文件路径作为该解释器的参数。<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
</blockquote>
<p><code>Shebang</code>的作用实际上可以让<code>node</code>执行<code>bin</code>文件时，可以按照<code>Shebang</code>指令指定的解释器和参数运行命令，丰富了脚本的使用场景；而具体到<code>ts-node</code>，<code>ts-node</code>完全支持作为<code>Shebang</code>的解释器来执行<code>TS</code>文件作为脚本<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup>；且<code>ts-node</code>也完全提供了<code>ESM</code>模块的解释器，因此也可以直接执行<code>ESM</code>模块的<code>TS</code>文件作为脚本：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env ts-node-esm</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 剩下的就是正常的TS代码</span></span><br></pre></td></tr></table></figure>
<p>不过有一点需要注意的是，如果要让这个<code>bin</code>文件可以在<strong>任意命令行</strong>都可以执行，那么就需要<font color=#f00>全局安装</font><code>ts-node</code>；</p>
<h3 id="关于拖拽的交互"><a class="markdownIt-Anchor" href="#关于拖拽的交互"></a> 关于拖拽的交互</h3>
<p>如果将一个组件拖拽放入可视化界面中，如何推测用户要插入的精准位置？这里有一个有意思的思路<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup>，那就是根据用户插入组件时其鼠标位置命中的最近的一个物料组件（即对应一个配置节点），然后根据距离该组件<code>DOMRect</code>的边距来得到一个距离最近的边距，得出插入位置的推断：</p>
<ul>
<li><code>left/top</code>：插入该组件之前；</li>
<li><code>right/bottom</code>：插入该组件之后；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220505103801689.png?imageslim" alt="image-20220505103801689" /></p>
<p>当然，得出这种推断的前提是该容器内布局为<strong>正常文档流</strong>（从左往右，从上至下）；</p>
<h3 id="不同应用上下文之间的事件通信"><a class="markdownIt-Anchor" href="#不同应用上下文之间的事件通信"></a> 不同应用上下文之间的事件通信</h3>
<p>由于直接使用了本地项目的上下文环境作为可视化预览页面（这样做的好处就是可以直接复用当前项目的<code>vite</code>配置，无需额外再配置），而可视化搭建应用属于另一个独立的应用，可视化搭建应用通过<code>iframe</code>来引入这个预览页面，因此势必造成了<code>iframe</code>跨域的问题；</p>
<p>由于现代浏览器的同源策略，<code>iframe</code>的跨域会导致很多的限制，除了熟知的网络请求限制，更多的是控制的限制，父级文档无法控制子<code>iframe</code>文档<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup>，导致很多交互（<code>DOM</code>层面）不能在两个上下文之间流通；比如从搭建应用拖拽一个组件原料放入到<code>iframe</code>中的页面时，正常情况下完全不可能<sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup>，因为跨域限制了父级事件流通到<code>iframe</code>的<code>DOM</code>里面，所以只能另找门路；</p>
<h4 id="事件机制"><a class="markdownIt-Anchor" href="#事件机制"></a> 事件机制</h4>
<p><code>DOM</code>的事件机制提供了一套可以主动触发事件及构造自定义/原生事件的<code>API</code>：</p>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/dispatchEvent">EventTarget.dispatchEvent - Web API 接口参考 | MDN</a>：在指定<code>DOM</code>开始触发指定事件</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent">CustomEvent() - Web APIs | MDN</a>：构造自定义事件</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/DragEvent/DragEvent">DragEvent() - Web APIs | MDN</a>：可以构造拖拽相关事件，其他的原生事件只要找到相应的构造函数一样都可以进行构造</li>
</ul>
<p>因此，有了这套事件机制，只要事件触发端把相应的事件信息发送到要传递的浏览上下文，然后在接收端进行相应事件的构造并触发，就完全可以绕过<code>iframe</code>跨域的限制，完成事件通信/流转；</p>
<p>那么剩下的就是如何完成两个跨域浏览上下文之间的信息传递了；</p>
<h4 id="信息传递"><a class="markdownIt-Anchor" href="#信息传递"></a> 信息传递</h4>
<p>其实完成不同浏览上下文之间的信息传递的方法不止一种：</p>
<ul>
<li><code>websocket</code>：在不同上下文之间建立<code>socket</code>连接，就可以很自然地进行双向通信了；所以一开始我很天真的想到了这种办法，而忽视了<code>DOM</code>本身的机制；</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage">window.postMessage()</a>：为不同上下文进行安全通信而生的<code>DOM API</code>，其实就是不二选择；</li>
</ul>
<h4 id="hit-testing"><a class="markdownIt-Anchor" href="#hit-testing"></a> Hit Testing</h4>
<p><code>Hit Testing</code>，即<strong>命中测试</strong>，是图形学中的一个专业术语，一般用于描述用户鼠标位置击中当前图形交互界面（<code>GUI</code>）中的哪个图元（图形物体）；而具体到前端，可以理解为用户鼠标位置命中的是哪个<code>DOM</code>元素（<code>DOM</code>元素的图形本质就是一个矩形区域）；</p>
<p>为啥要做命中测试？因为从父级上下文传递事件的时候，<strong>并不知道触发事件对应的是子级上下文的哪个元素</strong>，因此需要在子级上下文构造事件的同时对当前浏览上下文做一次命中测试，以便精准地从相应的<code>DOM</code>元素触发事件；巧的是<code>DOM</code>刚好提供了命中测试相关的<code>API</code>：</p>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/elementFromPoint">Document.elementFromPoint() - Web APIs | MDN</a></li>
</ul>
<p>在使用鼠标位置进行命中测试一定要确保这个鼠标位置是相对于当前<code>document</code>对象而言的，即确保坐标原点是当前<code>document</code>对象的左上角；</p>
<h4 id="过程图解"><a class="markdownIt-Anchor" href="#过程图解"></a> 过程图解</h4>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220429153436462.png" alt="image-20220429153436462" /></p>
<h4 id="iframe的事件穿透"><a class="markdownIt-Anchor" href="#iframe的事件穿透"></a> iframe的事件穿透</h4>
<p>// TODO</p>
<h3 id="dataset的使用"><a class="markdownIt-Anchor" href="#dataset的使用"></a> <code>dataset</code>的使用</h3>
<p>为了更精准地进行事件交互，比如弄清组件插入位置所属的配置节点，那么最好给相应的<code>DOM</code>节点标注上所需的信息，以便更好的处理交互；而要给<code>DOM</code>标记自定义属性，那么<code>dataset</code>自然是最佳也是最符合规范的选择。</p>
<h4 id="在-dom-tree-的基础上构建配置树"><a class="markdownIt-Anchor" href="#在-dom-tree-的基础上构建配置树"></a> 在 DOM tree 的基础上构建配置树</h4>
<blockquote>
<p><strong>注</strong>：在设计中，一个配置节点就等同于一个物料组件；</p>
</blockquote>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220501120033666.png?imageslim" alt="image-20220501120033666" /></p>
<h3 id="胶水代码的输出"><a class="markdownIt-Anchor" href="#胶水代码的输出"></a> 胶水代码的输出</h3>
<p>在通过可视化搭建得到了相应配置树结构，以及通过填充数据补充变量等细节配置后，如何将配置树转化为对应的<code>Vue</code>代码？其实很简单，每个配置节点就是一个<code>Vue</code>组件，只需要将配置转为<code>Vue</code>组件源码，然后递归处理子级即可；</p>
<p>那么，关键就在于如何将一个配置节点转化为等价的<code>Vue</code>组件；其实有了<code>setup</code>模式（需要<code>vue3.2+</code>）的加持，对组件数据的组装变得<font color=#39f>异常简单</font>了起来，因为<code>setup</code>模式的核心就是导入即可使用，无需像以前<code>option</code>模式或者早期<code>Vue3</code>的<code>composition API</code>那样需要专门分配到对应类型的选项里面，如需要分辨导入变量是方法、单纯的变量还是组件等；而<code>setup</code>模式只需要将变量导入，<code>Vue</code>框架会根据变量类型自动分配到对应的选项里去，所以说<code>setup</code>模式就是高级的语法糖，进一步减少了胶水代码，自动帮你进行<code>composition</code>的处理；</p>
<p>可以说正是有了<code>setup</code>模式，我才会水到渠成地想到这整套数据模型；那么基于<code>setup</code>模式，将配置节点输出为<code>Vue</code>组件源码可以分为两个部分：</p>
<ul>
<li><code>script</code>部分：只需要将配置节点使用到的变量全部引入即可，然后判断是否有子配置节点，如有则<font color=#f00>递归处理</font>得到子配置节点的源码并引入；</li>
<li><code>template</code>部分：负责将数据进行填充即可，包括使用子组件；</li>
</ul>
<p>将<code>script</code>部分和<code>template</code>部分进行合并就得到了配置节点对应的<code>Vue</code>组件源码了，那么最外层的组件自然就是整个配置树的入口了；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220501122906554.png?imageslim" alt="image-20220501122906554" /></p>
<h3 id="第三方-ui-库元数据的转换"><a class="markdownIt-Anchor" href="#第三方-ui-库元数据的转换"></a> 第三方 UI 库元数据的转换</h3>
<blockquote>
<p><strong>注</strong>：我个人是<strong>很不赞成</strong>在需要高内聚的可视化搭建系统直接使用通用组件的，诚然，通用组件可以使得搭建更灵活，但往往只能支撑很简单的业务场景，在复杂业务场景下通用组件的使用效率就很低了；当然，抱着可行性的态度我还是去尝试了一下，毕竟至少可以作为某种回退操作（更广的兼容性）；</p>
</blockquote>
<p>虽说是第三方<code>UI</code>库，但跟上述提到的物料库项目一样，不过事实上我们并不需要构造源码文件，因为可以直接引入第三方库，所以针对第三方库，我们只需要提取其组件元数据即可，而在引入的时候做一个路径转换即可；</p>
<p>一般来说，只要一个组件库的项目结构是规范的，那么其组件源码一定是按照某个固定结构进行排列的，因此只需要找到这个结构然后就可以批量进行元数据提取了；这里以<code>element-plus</code>为例，他们的组件源码放在<code>packages/components</code>里面，其中里面的每个文件夹都是一个相对独立的组件，而组件的入口文件通常为<code>[component-name]/src/[component-name].vue</code>：</p>
<img src="http://pic.xiexuefeng.cc/markdown/image-20220501131703736.png?imageslim" alt="image-20220501131703736" style="zoom:67%;" />
<p>因此根据这一特征就可以批量的从其源码文件提取对应组件的元数据，不过需要注意的是第三方库可能由于内部高度模块化，而导致一般的从<code>AST</code>（抽象语法树）解析得到的组件元数据并不完整（如<code>vue-docgen-api</code>这个插件），这时可以配合编译后的组件数据进行补充，一般来说组件库都会提供编译后的版本，即<code>ES</code>版本（通常是把组件源码同构地编译为<code>ES5/ES6</code>这种<code>js</code>代码），一般这种<code>js</code>代码就是导出了组件的构造方法，因此引入该构造方法即可完全得到相应的组件<strong>运行时</strong>数据，这里可以得到完整的组件元数据，只不过<font color=#f00>类型粒度很粗</font>；</p>
<h3 id="node-代码调试"><a class="markdownIt-Anchor" href="#node-代码调试"></a> node 代码调试</h3>
<p>如果想要调试<code>node</code>的代码，实际上<code>VSCode</code>直接提供了工具，可以参考——<a href="https://code.visualstudio.com/docs/nodejs/nodejs-debugging">Debug Node.js Apps using Visual Studio Code</a>；</p>
<h3 id="本地包调试存在的坑"><a class="markdownIt-Anchor" href="#本地包调试存在的坑"></a> <s>本地包调试存在的坑</s></h3>
<p><s>想不起来了……</s></p>
<h2 id="夭折的方案"><a class="markdownIt-Anchor" href="#夭折的方案"></a> 夭折的方案</h2>
<h3 id="异步渲染的坑"><a class="markdownIt-Anchor" href="#异步渲染的坑"></a> 异步渲染的坑</h3>
<p>在最初的时候，我曾想过直接使用<code>Vue</code>里面的异步组件<sup class="footnote-ref"><a href="#fn10" id="fnref10">[10]</a></sup>来进行预览，一个配置节点对应一个异步组件，而异步组件的内容则借由<code>vite</code>插件机制来完成；实际上就是用<code>vite plugin</code>作为<code>dev server</code>，根据不同的自定义后缀以及挂载参数来相应返回不同的文件源码，然后借由异步组件动态加载，其子配置节点也是递归处理的；</p>
<img src="http://pic.xiexuefeng.cc/markdown/image-20220502121044079.png?imageslim" alt="image-20220502121044079" style="zoom: 50%;" />
<p>这样做的好处就是可以不必自行搭建<code>dev server</code>，而是直接借助<code>vite plugin</code>来实现<code>dev server</code>的功能，且异步组件用于挂载节点组件的事件恰好不过，方便管理；但实际上这种方案有太多的问题：</p>
<ul>
<li>由于<code>vite</code>加载本地模块采用的是<code>get</code>请求，因此携带的参数长度受限，当页面模块较多时，配置<code>JSON</code>形成的参数很快就会超过最大长度，即便采用字符压缩也改善不了多少；</li>
<li>异步组件层级过多，数量较多时性能极其差；</li>
<li>异步组件跟<code>Promise</code>的机制类似，一旦判断为加载完成，本身加载状态无法再改变，即无法刷新自身状态，这样就无法充分利用热更新了，只能从父级容器进行控制；</li>
<li>综上，一旦要刷新预览状态，这里的请求量和异步状态就会爆表，主线程阻塞过于显著；</li>
</ul>
<h3 id="直接运行app"><a class="markdownIt-Anchor" href="#直接运行app"></a> 直接运行APP</h3>
<p>一开始还想着不打包可视化搭建应用，直接以开发模式运行应用来着，事实证明这是脑残操作😅；</p>
<h2 id="方案可能存在的问题"><a class="markdownIt-Anchor" href="#方案可能存在的问题"></a> 方案可能存在的问题</h2>
<p>假设这套方案可以完全达到预期设计目标的功能使用，那么会有什么问题？</p>
<ul>
<li>如果组件内聚不够，或粒度太细，导致暴露参数较多（或者说需要处理的参数过多），那么开发模式显然就变成了<font color=#f00>无尽地填充变量</font>，以及提供这些变量和变量之间副作用处理的逻辑；显然，这还是内聚的问题，如果没有一个<strong>足够内聚</strong>（高度模块化）的业务场景，使用这套方案带来的收益显然是不够的；</li>
<li>如果业务自由度较大，经常变动，且变动的粒度很细，那么很显然<strong>没必要</strong>使用这个方案；</li>
<li>一开始使用这种可视化搭建可能有些不适，因为这里把逻辑和视图完全分开了，视图的部分使用可视化搭建来拼接，逻辑则是采用配置进行注入的；但是如果真的熟悉<code>Vue</code>这种<strong>数据驱动</strong>渲染框架的话，那么就很快会适应的，尤其是<code>Vue3</code>推出的<code>composition</code>思想，<code>composition</code>本身就提倡<strong>逻辑与视图上下文解耦</strong>的，因此数据也好逻辑也罢，可以完全只考虑数据与数据之间的副作用关系即可，视图无非只是使用这些数据，至于怎么去使用这些注入的数据，那是组件内部的事情；</li>
</ul>
<h2 id="roadmap"><a class="markdownIt-Anchor" href="#roadmap"></a> Roadmap</h2>
<p>现阶段这些功能对于整体使用来说可能够用，但是需要一些补充功能来优化使用体验；</p>
<h3 id="精准类型推导与类型匹配"><a class="markdownIt-Anchor" href="#精准类型推导与类型匹配"></a> 精准类型推导与类型匹配</h3>
<p>这里主要指的是在提取元数据的时候，可以得到组件和变量的精准类型，就像<code>language server</code>得到的类型一样；这样做的好处主要有：</p>
<ul>
<li>在使用变量的时候可以进行类型的精准匹配，即完全匹配变量和组件入参的类型；一个是可以<strong>减少非正确类型</strong>变量的干扰，另一个是提前进行<strong>严格的类型校验</strong>；</li>
<li>在获取到精准类型后（主要是<strong>联合字面量类型</strong>这种，可以提供选项支持），可以提供相应<strong>字面量类型</strong>的直接数据支持；目前来说，如果是只想给定一个固定字面量作为参数，也需要手动暴露一个参数来注入，这样确实多有不便；</li>
</ul>
<h3 id="逻辑复用"><a class="markdownIt-Anchor" href="#逻辑复用"></a> 逻辑复用</h3>
<p>如果逻辑本身也能通过可视化来进行复用，也是一样是有意思的事情，只不过类似的，我不看好实行完全语法映射的逻辑可视化（或者粒度很细的）；目前利用逻辑可视化进行逻辑的复用，实际上也早就有人进行尝试了<sup class="footnote-ref"><a href="#fn11" id="fnref11">[11]</a></sup><sup class="footnote-ref"><a href="#fn12" id="fnref12">[12]</a></sup>。</p>
<h2 id="脑洞大开"><a class="markdownIt-Anchor" href="#脑洞大开"></a> 脑洞大开</h2>
<p>这里不妨脑洞一下，如果扩展使用场景会怎样；</p>
<h3 id="纯云端搭建"><a class="markdownIt-Anchor" href="#纯云端搭建"></a> 纯云端搭建</h3>
<p>如果说把整个搭建应用全部放到云上，即没有本地项目的概念，把整个搭建应用作为一个<code>web</code>服务，那么这套系统应该怎么适配？</p>
<ul>
<li><strong>脑洞一</strong>：直接在云端主机（容器）运行本地项目即可，然后暴露端口访问；不过这种方案显然不适用于面向多个用户，不然一个用户就需要一个主机（容器）；</li>
<li><strong>脑洞二</strong>：稍微整合一下<code>dev server</code>变成一个专门处理物料信息的服务端，那么基于此就可以提供异步渲染组件所需要的源码信息，然后也可直接编译产物成为单独的应用并开放访问（这也是目前云端编译的常见方案）；不过这么做也有些问题：
<ul>
<li>异步渲染组件进行预览的性能问题（上面提到过），不过目前没有证实直接在生产环境应用异步组件也是这么拉跨；</li>
<li>异步渲染组件进行预览热更新的问题；</li>
<li>如果页面复杂，可能同时进行请求的异步组件过多，请求阻塞；不过可以考虑在服务层<strong>合并异步组件粒度</strong>，控制请求数量，貌似<code>Tengine</code>可以合并请求<sup class="footnote-ref"><a href="#fn13" id="fnref13">[13]</a></sup>来着；</li>
</ul>
</li>
</ul>
<h3 id="面向非编程人员"><a class="markdownIt-Anchor" href="#面向非编程人员"></a> 面向非编程人员</h3>
<p>进一步，如果要把搭建应用面向非编程人员使用（这也是可视化搭建最强烈的需求），那么目前这套配置对于他们还是有点难以理解（比如变量、<code>Vue</code>的语法啥的）；其实要做的工作也不多，无非就是合并所有配置，把配置变成只有一类，就跟填写表单一样，然后把对应的参数设计得不那么编程人员思维，加上足够详细的参数文档；</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://www.jianshu.com/p/990afa30b6fe">Yarn Workspace 使用指南 - 简书</a></li>
<li><a href="https://segmentfault.com/a/1190000039157365">All in one：项目级 monorepo 策略最佳实践 - SegmentFault 思否</a></li>
<li><a href="https://juejin.cn/post/7011024137707585544">Monorepo最佳实践之Yarn Workspaces - 掘金</a></li>
<li><a href="https://blog.csdn.net/i10630226/article/details/99702447">lerna+yarn workspace+monorepo项目的最佳实践_小平果118的博客-CSDN博客_lerna yarn</a></li>
</ul>
<h2 id="扩展关于前端的各种可视化"><a class="markdownIt-Anchor" href="#扩展关于前端的各种可视化"></a> 扩展：关于前端的各种可视化</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/164558106">「可视化搭建系统」——从设计到架构，探索前端领域技术和业务价值 - 知乎</a></li>
<li><a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzI4NjY4MTU5Nw==&amp;action=getalbum&amp;album_id=1360113279133384705&amp;subscene=159&amp;subscene=&amp;scenenote=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F6gtVR0nVNcZvREjwftZgzA#wechat_redirect">悟空活动中台系列文章</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/137470317">淘宝前端在搭建服务上的探索 - 知乎</a></li>
<li><a href="https://aotu.io/notes/2020/12/31/deco/">凹凸技术揭秘 · Deco 智能代码 · 开启产研效率革命 | Aotu.io「凹凸实验室」</a></li>
<li><a href="https://github.com/imgcook/imove">imgcook/imove: Move your mouse, generate code from flow chart</a>：（<code>ts/js</code>）逻辑可视化</li>
<li><a href="https://www.yuque.com/imove/docs/hvu0md">imove三分钟上手 · 语雀</a></li>
<li><a href="https://mp.weixin.qq.com/s/2vl_7Jht6aETGintBIcLIg">狼叔：F2C 能否让前端像运营配置一样开发？</a>： flow 2 code，流程化逻辑</li>
<li><a href="https://mp.weixin.qq.com/s/tqZaZTTrjZlo9T7f9sLNIA">【第2192期】所见即所得! iMove 在线执行代码探索</a></li>
<li><a href="https://mp.weixin.qq.com/s/ZVZ1skvmIWIjcSz9HhDU3Q">【第2226期】逻辑编排在优酷可视化搭建中的实践之上</a>：很不错的逻辑可视化/组件化的实践</li>
<li><a href="https://mp.weixin.qq.com/s/EpOO3ZwxIE2Q7eqUQHBLqg">【第2227期】逻辑编排在优酷可视化搭建中的实践之下</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/164558106">「可视化搭建系统」——从设计到架构，探索前端领域技术和业务价值 - Lucas HC的文章 - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/197291361">基于React+Koa实现一个h5页面可视化编辑器－Dooring - 徐小夕的文章 - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/48347377">厌倦了写活动页？快来撸一个页面生成器吧！ - 知乎</a>：移动端</li>
<li><a href="https://zhuanlan.zhihu.com/p/338418160">可视化拖拽组件库一些技术要点原理分析 - 知乎</a></li>
<li><a href="https://github.com/buqiyuan/vite-vue3-lowcode">buqiyuan/vite-vue3-lowcode: vue3.x vite2.x vant element-plus H5移动端低代码平台 lowcode 可视化拖拽 可视化编辑器 visual editor</a>：一种实践</li>
<li><a href="https://designable-antd.formilyjs.org/">Designable Playground</a>：基于formily的低代码可视化表单搭建工具</li>
<li><a href="https://zhuanlan.zhihu.com/p/396327885">开放与收敛 - 搭建系统的资产体系设计 - 知乎</a>：云凤蝶搭建架构设计</li>
<li><a href="https://zhuanlan.zhihu.com/p/407347096">描绘现实世界的桥梁–Formily - 知乎</a></li>
<li><a href="https://mp.weixin.qq.com/s/kn406dKwTIrFIkRJuSyIWQ">「全码」 通用搭建：现代 Web 研发体系中的新一代低/零码搭建</a>：很好地说明了目前大厂和常见lowcode、nocode等方案的不足地方，但是提出的新的搭建理念需要验证</li>
<li><a href="http://lowcode.dooring.cn/best-practice/detail?fid=RteMgsbesW">从零开发一款可视化搭建框架dooringx-lib - lowcode低代码可视化社区</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/470015215">低代码/无代码十日谈(一)——趋势背后的逻辑 - 知乎</a>：从当前行业发展角度解析低代码发展的前景及突破点，<font color=#f00>值得一读</font></li>
<li><a href="http://lowcode-engine.cn/">低代码引擎 | LowCodeEngine</a>：阿里的一个可视化搭建引擎，目前看起来还是走向通用，映射选项多；</li>
<li><a href="https://github.com/CntChen/cntchen.github.io/issues/15">页面可视化搭建工具前生今世 · Issue #15 · CntChen/cntchen.github.io</a>：比较详尽地对可视化搭建的需求和作用进行了整理，从多个维度进行解析不同类型的可视化搭建工具，<font color=#f00>精品</font></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://github.com/CntChen/cntchen.github.io/issues/15">https://github.com/CntChen/cntchen.github.io/issues/15</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://segmentfault.com/a/1190000019309820">Monorepo——大型前端项目的代码管理方式 - SegmentFault 思否</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://blog.csdn.net/i10630226/article/details/99702447">lerna+yarn workspace+monorepo项目的最佳实践_小平果118的博客-CSDN博客_lerna yarn</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/502951532">Node.js 18 新特性解读 - 知乎</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://zh.wikipedia.org/wiki/Shebang">Shebang - 维基百科，自由的百科全书</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="https://github.com/TypeStrong/ts-node#shebang">https://github.com/TypeStrong/ts-node#shebang</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p><a href="https://lowcode-engine.cn/demo/index.html">https://lowcode-engine.cn/demo/index.html</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn8" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy#%E8%B7%A8%E6%BA%90%E8%84%9A%E6%9C%ACapi%E8%AE%BF%E9%97%AE">https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy#跨源脚本api访问</a> <a href="#fnref8" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn9" class="footnote-item"><p><a href="https://bugs.chromium.org/p/chromium/issues/detail?id=251718">251718 - HTML5 Drag and drop not working between iframe and parent when on a different domain - chromium</a> <a href="#fnref9" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn10" class="footnote-item"><p><a href="https://vuejs.org/guide/built-ins/suspense.html">Suspense | Vue.js</a> <a href="#fnref10" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn11" class="footnote-item"><p><a href="https://mp.weixin.qq.com/s/ZVZ1skvmIWIjcSz9HhDU3Q">【第2226期】逻辑编排在优酷可视化搭建中的实践之上</a> <a href="#fnref11" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn12" class="footnote-item"><p><a href="https://mp.weixin.qq.com/s/2vl_7Jht6aETGintBIcLIg">狼叔：F2C 能否让前端像运营配置一样开发？</a> <a href="#fnref12" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn13" class="footnote-item"><p><a href="https://tengine.taobao.org/document_cn/http_concat_cn.html">https://tengine.taobao.org/document_cn/http_concat_cn.html</a> <a href="#fnref13" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>基建</tag>
        <tag>可视化搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Web Vitals指标</title>
    <url>/post/about-web-vitals/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>Web Vitals</code>是谷歌针对网页加载速度和体验所提出的一套指标，这套指标用于测试网页的加载速度及用户体验等等；谷歌基于这套指标不仅设计了多套测试工具，还针对各种指标提出了相应的优化方法，具有很高的实用价值；</p>
<blockquote>
<p>Web Vitals is an initiative by Google to provide unified guidance for quality signals that are essential to delivering a great user experience on the web.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<span id="more"></span>
<h2 id="web-vitals-核心指标"><a class="markdownIt-Anchor" href="#web-vitals-核心指标"></a> Web Vitals 核心指标</h2>
<p>所谓的核心指标就是<code>Web Vitals</code>中希望所有人都能够引起重视的三个指标，当然也是最重要的三个指标，因为对网页加载速度和用户体验感的影响很大；</p>
<table>
<thead>
<tr>
<th style="text-align:center">指标</th>
<th style="text-align:center">GOOD</th>
<th style="text-align:center">待提升</th>
<th style="text-align:center">POOR</th>
<th style="text-align:center">期望覆盖率</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">LCP</td>
<td style="text-align:center">＜2.5s</td>
<td style="text-align:center">＜4s</td>
<td style="text-align:center">≥4s</td>
<td style="text-align:center">75%</td>
</tr>
<tr>
<td style="text-align:center">FID</td>
<td style="text-align:center">＜100ms</td>
<td style="text-align:center">＜300ms</td>
<td style="text-align:center">≥300ms</td>
<td style="text-align:center">95~99%</td>
</tr>
<tr>
<td style="text-align:center">CLS</td>
<td style="text-align:center">＜0.1</td>
<td style="text-align:center">＜0.25</td>
<td style="text-align:center">≥0.25</td>
<td style="text-align:center">75%</td>
</tr>
</tbody>
</table>
<p>上面的表格就是各项指标的评判标准，其中<strong>期望覆盖率</strong>指的是<font color=#f00>至少有相应百分比的用户测试可以达到<code>GOOD</code>标准</font>；</p>
<h3 id="lcp"><a class="markdownIt-Anchor" href="#lcp"></a> LCP</h3>
<h4 id="概念"><a class="markdownIt-Anchor" href="#概念"></a> 概念</h4>
<p><code>LCP</code>（<code>Largest Contentful Paint</code>），即<strong>最大内容渲染</strong>，指的是<font color=#f00>视窗（<code>viewport</code>）内所有可见元素中尺寸最大的文本块或图像所需的渲染时间</font>；</p>
<p>与之相近的一个指标是<code>FCP</code>（<code>First Contentful Paint</code>），该指标是用于检测第一个文本块或者图像渲染完成的时间，侧重点不同；</p>
<h4 id="指标作用"><a class="markdownIt-Anchor" href="#指标作用"></a> 指标作用</h4>
<p>这个指标主要是<font color=#39f>用来弄清用户所看到的页面主体内容何时被渲染出来</font>，之前也有相应的指标用于相似的目的，但是实际上存在很多的不足<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>：</p>
<ul>
<li><code>load</code>和<code>DOMContentLoaded</code>事件只是反应了代码层面的加载时间结点，而非真实用户所关注的屏幕页面渲染效果，因此很不准确；</li>
<li>而<code>FCP</code>指标也只是关注了最初始的渲染效果，和用户关心的页面整体效果也相差甚远；</li>
<li>后面提出用于关注初始渲染状态之后的加载效果的指标——<code>FMP</code>（<code>First Meaningful Paint</code>）和<code>SI</code>（<code>Speed Index</code>），经实践证明效果不太行，经常出错，而且这两个指标计算很复杂也很难去解释；</li>
</ul>
<p>由于存在上述问题，<code>Web Vitals</code>基于<code>W3C</code>的相关讨论<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>以及谷歌内部的一些研究得出了一个结论：</p>
<blockquote>
<p>we’ve found that a more accurate way to measure when the main content of a page is loaded is <strong>to look at when the largest element was rendered</strong>.<sup class="footnote-ref"><a href="#fn2" id="fnref2:1">[2:1]</a></sup></p>
</blockquote>
<h4 id="如何寻找最大的元素"><a class="markdownIt-Anchor" href="#如何寻找最大的元素"></a> 如何寻找最大的元素？</h4>
<p>由于<code>LCP</code>关心的只是文本块及图像，因此寻找的元素结点限定为：</p>
<ul>
<li><code>img</code>元素</li>
<li><code>svg</code>元素中的<code>image</code>元素</li>
<li>带<code>poster</code>属性的<code>video</code>元素</li>
<li>用<code>url()</code>方法加载<strong>背景图</strong>的元素</li>
<li>包含文本节点或其它内联文本节点的<strong>块级</strong>元素</li>
</ul>
<p>限定了元素范围后，接下来就是从这些元素中找出尺寸最大的元素了，那么<strong>如何计算这些元素结点的大小</strong>？这里的尺寸大小计算遵循以下原则：</p>
<ul>
<li>尺寸大小实际上以<font color=#f00>渲染完成后</font>的大小为准</li>
<li>尺寸<font color=#f00>不包括</font><code>padding</code>，<code>border</code>和<code>margin</code>，可以理解为<code>content-box</code>的大小</li>
</ul>
<p>由于图片资源需要异步加载完成后才会进行渲染以及<code>js</code>代码修改<code>DOM</code>结构和属性等因素的存在，因此<font color=#39f>这个最大渲染元素可能会发生改变</font>，所以最大渲染元素的检测需要首屏渲染完成后才能最终确认；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201018122415.png?imageslim" alt="img" /></p>
<h3 id="fid"><a class="markdownIt-Anchor" href="#fid"></a> FID</h3>
<h4 id="概念-2"><a class="markdownIt-Anchor" href="#概念-2"></a> 概念</h4>
<p><code>FID</code>（<code>First Input Delay</code>），即<strong>第一次输入事件延迟</strong>，指的是<font color=#f00>用户第一次交互事件触发到主线程接收事件然后反应之间的时间</font>；</p>
<h4 id="指标作用-2"><a class="markdownIt-Anchor" href="#指标作用-2"></a> 指标作用</h4>
<p>这个指标主要是从交互响应层面来<strong>量化</strong>用户对<font color=#39f>页面的第一印象</font>；</p>
<p>因为新用户对一个网页的第一印象好坏对用户忠诚度影响很大，而第一印象除了网页的加载速度，还与第一次交互时的响应速度有着很大的关系；</p>
<p>这里的延迟指的就是<font color=#39f>用户交互触发的事件到主线程接收事件之间的延迟</font>，也就是用于判断对于第一次交互时主线程的阻塞程度，延迟越低说明主线程比较空闲，也就利于用户对页面的交互响应速度；</p>
<p>至于为何只关注事件之间的延迟时间，而不是<code>延迟时间 + 事件执行耗时 + UI状态更新耗时</code>的方式，官方给出的解释是：</p>
<blockquote>
<p>Even though this time is important to the user and does affect the experience, it’s not included in this metric because doing so could incentivize developers to add workarounds that actually make the experience worse—that is, they could wrap their event handler logic in an asynchronous callback (via setTimeout() or requestAnimationFrame()) in order to separate it from the task associated with the event. The result would be an improvement in the metric score but a slower response as perceived by the user.<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
</blockquote>
<p>因为开发者可能为了更好的测试分数而去<strong>强行拆分任务到其他线程</strong>，从而导致更糟的交互体验；</p>
<h3 id="cls"><a class="markdownIt-Anchor" href="#cls"></a> CLS</h3>
<h4 id="概念-3"><a class="markdownIt-Anchor" href="#概念-3"></a> 概念</h4>
<p><code>CLS</code>（<code>Cumulative Layout Shift</code>），即<strong>累积布局偏移</strong>，指的是<font color=#f00>首屏页面渲染过程中所有元素结点相对原始位置所发生的位置偏移累积量</font>；</p>
<h4 id="指标作用-3"><a class="markdownIt-Anchor" href="#指标作用-3"></a> 指标作用</h4>
<p>该指标主要是为了量化渲染过程中的视觉稳定性（<code>visual stability</code>）；因为渲染过程或者交互过程中发生的非用户期待的视觉改变行为会影响用户的使用满意度，而布局偏移就是其中一种很常见的现象，经常出现在：</p>
<ul>
<li><code>img/video</code>等媒体元素未指定尺寸，当资源加载完成后渲染尺寸发生改变，通常表现为突然地闪变，以及影响周围元素的位置变化</li>
<li>插入一些<code>DOM</code>结点，导致用户原本关注的区域突然偏移</li>
</ul>
<h4 id="如何计算cls"><a class="markdownIt-Anchor" href="#如何计算cls"></a> 如何计算CLS？</h4>
<blockquote>
<p>layout shift score = impact fraction * distance fraction<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
</blockquote>
<p>可以看出影响<code>CLS</code>计算值有两个因素：</p>
<ul>
<li><code>impact fraction</code>：影响因子，这个参数主要是衡量<strong>相邻两个绘制帧</strong>之间不稳定元素（即位置发生改变的元素）所带来的影响；计算方法为所有不稳定元素在<strong>可视区域内</strong>的面积总和（<font color=#f00>扣除重叠的部分</font>）占视窗面积的比值；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201018122433.png?imageslim" alt="img" /></p>
<ul>
<li><code>distance fraction</code>：距离因子，这个参数主要是衡量不稳定元素移动的距离；计算方法为取所有不稳定元素中偏移量（竖直及水平方向）最大的值除以视窗尺寸维度最大的值；根据上例，其距离因子就是<code>0.25</code>；</li>
</ul>
<p>根据影响因子和距离因子的概念及计算方法，结合上图示例可以得知，<font color=#39f>当前帧</font>的<font color=#f00>布局偏移分数</font>为<code>0.75 * 0.25 = 0.1875</code>；而最终的<code>CLS</code>值则是所有绘制帧得到的布局偏移分数之和，更复杂的计算场景可以查看<a href="https://web.dev/cls/#distance-fraction">官方博客</a>；</p>
<h3 id="如何提升核心指标"><a class="markdownIt-Anchor" href="#如何提升核心指标"></a> 如何提升核心指标？</h3>
<p>上述的三个核心指标，官方都给出了详细的提升指导文档：</p>
<ul>
<li><a href="https://web.dev/optimize-lcp/">Optimize Largest Contentful Paint</a></li>
<li><a href="https://web.dev/optimize-cls/">Optimize Cumulative Layout Shift</a></li>
<li><a href="https://web.dev/optimize-fid/">Optimize First Input Delay</a></li>
</ul>
<h2 id="web-vitals-其它指标"><a class="markdownIt-Anchor" href="#web-vitals-其它指标"></a> Web Vitals 其它指标</h2>
<p>其它的一些指标可以作为核心指标的补充，以更加精准地去定位一些性能及体验问题；</p>
<ul>
<li><code>TTFB</code>（<code>Time to First Byte</code>）：用户浏览器从开始加载网页内容到接收到第一个字节的网页内容之间的耗时，该指标主要侧重于网页加载体验；</li>
<li><code>FCP</code>（<code>First Contentful Paint</code>）：从开始加载网页内容到第一个文本块或者图像渲染完成之间的耗时，该指标主要侧重于网页加载体验；</li>
<li><code>TTI</code>（<code>Time to Interactive</code>）：从开始加载网页内容到开始<font color=#f00>有足够快的用户交互反应速度</font>时之间的耗时，该指标主要侧重于网页加载体验；一般这个“有足够快的用户交互反应速度”指的就是<code>FCP</code>后长任务（<code>long task</code>，大于<code>50ms</code>的主线程任务）都执行完毕后，实际上就是主线程开始空闲，那自然就对用户交互就有很快的反应速度；可以看下官方文档的<code>TTI</code>计算步骤图<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup>：</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201018122458.png?imageslim" alt="img" /></p>
<ul>
<li><code>TBT</code>（<code>Total Blocking Time</code>）：<code>FCP</code>到<code>TTI</code>之间阻塞主线程的总耗时，所谓的阻塞就是长任务，而单个长任务的阻塞时间就是<code>任务耗时 - 50ms</code>；该指标主要侧重于网页加载体验，用于<font color=#39f>量化主线程阻塞的严重程度</font>；</li>
</ul>
<h2 id="web-vitals-指标分析"><a class="markdownIt-Anchor" href="#web-vitals-指标分析"></a> Web Vitals 指标分析</h2>
<p>光有有指标还不行，实际使用时还需要一个工具集成上述指标来对目标网页进行分析得到数据才行，值得庆幸的是谷歌官方已经给出了多个相应的测试分析工具，可以快速的上手：</p>
<table>
<thead>
<tr>
<th style="text-align:center">分析工具</th>
<th style="text-align:center">LCP</th>
<th style="text-align:center">FID</th>
<th style="text-align:center">CLS</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><a href="https://developers.google.com/web/tools/chrome-user-experience-report">Chrome User Experience Report</a></td>
<td style="text-align:center">✔️</td>
<td style="text-align:center">✔️</td>
<td style="text-align:center">✔️</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://developers.google.com/speed/pagespeed/insights/">PageSpeed Insights</a> ☆</td>
<td style="text-align:center">✔️</td>
<td style="text-align:center">✔️</td>
<td style="text-align:center">✔️</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://support.google.com/webmasters/answer/9205520">Core Web Vitals report - Search Console</a></td>
<td style="text-align:center">✔️</td>
<td style="text-align:center">✔️</td>
<td style="text-align:center">✔️</td>
</tr>
<tr>
<td style="text-align:center"><a href="https://github.com/GoogleChrome/web-vitals">web-vitals</a>：<code>js</code>包</td>
<td style="text-align:center">✔️</td>
<td style="text-align:center">✔️</td>
<td style="text-align:center">✔️</td>
</tr>
<tr>
<td style="text-align:center">Lighthouse ☆</td>
<td style="text-align:center">✔️</td>
<td style="text-align:center">❌ <br></td>
<td style="text-align:center">✔️</td>
</tr>
</tbody>
</table>
<p>上面就是几种常用的<code>Web Vitals</code>指标分析工具，其中比较推荐的是<code>PageSpeed Insights</code>和<code>chrome</code>浏览器内置的<code>Lighthouse</code>，因为这两个工具打开即可使用，而且没有代码侵入性，并且会有相应指标的改进建议；</p>
<p>但是<code>Lighthouse</code>没有<code>FID</code>指标的分析，不过可以使用相近的<code>TBT</code>进行替代；</p>
<h3 id="国内网站测试"><a class="markdownIt-Anchor" href="#国内网站测试"></a> 国内网站测试</h3>
<ul>
<li>京东移动端网页（<a href="https://m.jd.com/%EF%BC%89%EF%BC%9A">https://m.jd.com/）：</a></li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201018122514.png?imageslim" alt="img" /></p>
<ul>
<li>淘宝桌面版网页（<a href="https://world.taobao.com/%EF%BC%89%EF%BC%9A">https://world.taobao.com/）：</a></li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201018122536.png?imageslim" alt="img" /></p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://web.dev/fcp/">First Contentful Paint (FCP)</a>：FCP指标解读</li>
<li><a href="https://web.dev/time-to-first-byte/">Reduce server response times (TTFB)</a>：TTFB指标解读</li>
<li><a href="https://web.dev/tbt/">Total Blocking Time (TBT)</a>：TBT指标解读</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://web.dev/vitals/">Web Vitals</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://web.dev/lcp/#measure-lcp-in-javascript">Largest Contentful Paint (LCP)</a>：LCP指标解读 <a href="#fnref2" class="footnote-backref">↩︎</a> <a href="#fnref2:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://www.w3.org/webperf/">Web Performance Working Group</a>：W3C关于网页性能的工作小组 <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://web.dev/fid/">First Input Delay (FID)</a>：FID指标解读 <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://web.dev/cls/">Cumulative Layout Shift (CLS)</a>：CLS指标解读 <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="https://web.dev/tti/">Time to Interactive (TTI)</a>：TTI指标解读 <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title>基于certimate自动化更新免费SSL证书</title>
    <url>/post/certimate-ssl-certificate-auto-update/</url>
    <content><![CDATA[<h1 id="业务背景"><a class="markdownIt-Anchor" href="#业务背景"></a> 业务背景</h1>
<p>由于国内各大云服务商在 2024 年把免费的 SSL 证书时长从一年变更为<strong>3 个月</strong><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>（应该是源头提供免费 SSL 证书的服务商决定的），所以手动更换域名的 SSL 证书就变得繁琐起来了，尤其是手上有多个域名进行维护的时候，因为免费 SSL 证书都是单域名的。</p>
<span id="more"></span>
<h1 id="关于-certimate"><a class="markdownIt-Anchor" href="#关于-certimate"></a> 关于 certimate</h1>
<p>基于上面的缘由和业务需求，因此也就出现了一些自动续签免费 SSL 证书的服务器脚本，而 <a href="https://github.com/usual2970/certimate">certimate</a> 这个工具则是把这个业务做成了客户端配置的形式，因此可以很方便地进行使用。</p>
<p>至于 certimate 的安装和操作，建议查看 <a href="https://docs.certimate.me/">其官方文档</a>，这里就不赘述了。而它的用法也很简单：</p>
<ol>
<li>配置域名</li>
<li>配置域名对应的 DNS 授权</li>
<li>配置证书部署相关的授权和部署操作</li>
</ol>
<p>等配置完成后，就可以丝滑地按下按钮一键申请免费 SSL 证书并部署到指定地方，完成域名的 SSL 证书更新。</p>
<h2 id="版本更新"><a class="markdownIt-Anchor" href="#版本更新"></a> 版本更新</h2>
<p>由于该软件目前没有提供自动更新的功能，因此更新软件版本需要自己手动到 github 下载对应版本的二进制包，然后替换即可。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501071109761.png?imageslim" alt="image.png" /></p>
<h2 id="兼容性"><a class="markdownIt-Anchor" href="#兼容性"></a> 兼容性</h2>
<p>由于该软件在 0.2.0 版本开始不兼容以前的版本 <sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>，即 0.2.0 以前的版本无法直接更新到 0.2.0 及以后版本，如果非要升级则需要手动重新配置一遍之前所有的设置。</p>
<p>不过按照我的使用经验，我个人觉得 0.1.x 版本的功能就已经完全够用了，如果不是遇到什么恶性 bug，不是很建议升级。</p>
<h1 id="实操"><a class="markdownIt-Anchor" href="#实操"></a> 实操</h1>
<p>就我个人的情况而言，手上有一个阿里云的域名及其下面若干个子域名，而这些域名则是用于<strong>腾讯云主机</strong>上部署的网站和七牛云对象存储的<strong>CDN</strong>。因此我的需求就两种：</p>
<ul>
<li>把阿里云的域名证书部署到腾讯云主机上</li>
<li>把阿里云的域名证书部署到七牛云上</li>
</ul>
<h2 id="阿里云的-dns-授权"><a class="markdownIt-Anchor" href="#阿里云的-dns-授权"></a> 阿里云的 DNS 授权</h2>
<p>由于申请域名证书需要域名服务商的 DNS 授权，因此首先需要到阿里云拿到可以修改 DNS 记录权限的 AK 和 SK。当然，阿里云账号总的 AK 和 SK（即完全权限）也可以用于修改 DNS：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501081231663.png?imageView2/2/w/500" alt="image.png" /></p>
<p>不过并不建议直接使用具有完全权限的 AK 去进行 DNS 授权，因为<strong>这个权限太高</strong>了，风险很高，所以建议创建一个 RAM 用户，而该用户恰好只包含操作 DNS 的最小范围的权限，如：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501081234690.png?imageslim" alt="image.png" /></p>
<p>操作 DNS 需要的权限如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501081236591.png?imageslim" alt="image.png" /></p>
<p>而一个快速找到匹配权限的技巧就是在新增授权表单中输入关键词即可，如输入”DNS“：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501081241114.png?imageslim" alt="image.png" /></p>
<p>这样就得到了一个只能操作 DNS 的阿里云 RAM 用户，然后把该用户的 AK 和 SK 填入配置即可：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501081244486.png?imageView2/2/w/500" alt="image.png" /></p>
<h2 id="证书部署到腾讯云主机上"><a class="markdownIt-Anchor" href="#证书部署到腾讯云主机上"></a> 证书部署到腾讯云主机上</h2>
<p>既然是云主机，那么就可以通过 SSH 协议进行登录部署，这里可以按照自己的喜好选择证书登录，或者是直接使用用户名和密码的形式进行登录：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501091639848.png?imageView2/2/w/500" alt="image.png" /></p>
<p>而这里的服务器 Host 需要填服务器的公网 IP 地址，上面的是服务器登录相关的配置，剩下的则是证书部署目录相关的配置：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501091642947.png?imageView2/2/w/500" alt="image.png" /></p>
<h2 id="证书部署到七牛云-cdn-上"><a class="markdownIt-Anchor" href="#证书部署到七牛云-cdn-上"></a> 证书部署到七牛云 CDN 上</h2>
<p>七牛云提供了 AK 和 SK 相关的密钥，使用密钥则可以进行证书的部署。不过七牛云并没有像阿里云那样的 RAM 用户，所以只能使用用户级别的密钥：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501091700983.png?imageslim" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501091701928.png?imageView2/2/w/400" alt="image.png" /></p>
<p>不过由于 certimate 并没有提供将证书与具体存储空间的 CDN 域名绑定的操作，因此实际上只能把证书上传到七牛云的 SSL 证书目录中，而无法自动替换更新到具体的存储空间（所以会触发部署失败的提示，但实际上证书上传成功了）：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501091706421.png?imageslim" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501091708199.png?imageslim" alt="image.png" /></p>
<p>不过好在只需要到对应存储空间里的域名管理手动更新证书即可：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501091716004.png?imageslim" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501091718127.png?imageView2/2/w/500" alt="image.png" /></p>
<h1 id="一些问题"><a class="markdownIt-Anchor" href="#一些问题"></a> 一些问题</h1>
<p>在我使用 <code>0.1.11</code> 版本的 certimate 时，我发现在证书即将过期的时候并没有触发自动更新证书的功能：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501091721014.png?imageslim" alt="image.png" /></p>
<p>所以就导致整套逻辑会退化到“<strong>半自动化</strong>”的一种状态，当然，也可以在证书即将过期的时候使用<strong>强行部署</strong>功能，这时候就会强制重新申请新的证书并进行替换：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202501091724647.png?imageslim" alt="image.png" /></p>
<p>不过我看到有人在 GitHub 中提了相关 issue，作者表示使用最新的稳定版本可以解决这个问题 <sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>，这个有待进一步的观察……</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.chiphell.com/thread-2573496-1-1.html">现在还有没有一年的免费ssl证书？ - 电脑讨论(新) - Chiphell - 分享与交流用户体验</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://docs.certimate.me/blog/v0.2.0/">V0.2.0-第一个不向后兼容的版本 | Certimate</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://github.com/usual2970/certimate/issues/383">[Bug] 自动续期证书服务未工作 · Issue #383 · usual2970/certimate</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>clipboardData属性与DataTransfer对象</title>
    <url>/post/clipboard-data-and-data-transfer/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>clipboardData</code>属性是<code>ClipboardEvent</code>事件对象的一个属性，其本质上就是一个<code>DataTransfer</code>对象；而<code>ClipboardEvent</code>事件则包括<code>copy</code>、<code>cut</code>和<code>paste</code>这三个原生事件。</p>
<p>通过将剪切板的数据按照<code>DataTransfer</code>对象的方式保存到<code>clipboardData</code>上，可以在相应的事件中来获取或者修改剪切板的数据。</p>
<span id="more"></span>
<h2 id="常用方法"><a class="markdownIt-Anchor" href="#常用方法"></a> 常用方法</h2>
<h3 id="getdata"><a class="markdownIt-Anchor" href="#getdata"></a> getData</h3>
<blockquote>
<p>DOMString DataTransfer.getData(format);</p>
</blockquote>
<p>该方法可以获取到剪切板中对应格式的数据，<code>format</code>参数就是指定数据的格式，其可选值有：</p>
<ul>
<li><code>text/plain</code>：普通文本；</li>
<li><code>text/uri-list</code>：链接文本；</li>
<li><code>text</code>：等同于<code>text/plain</code>；</li>
<li><code>url</code>：等同于<code>text/uri-list</code>；</li>
</ul>
<blockquote>
<p>If format equals “text”, change it to “text/plain”. <br><br />
If format equals “url”, change it to “text/uri-list”. <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>如果没有对应的数据，则会返回一个<strong>空字符串</strong>。</p>
<h3 id="datatransferitem对象"><a class="markdownIt-Anchor" href="#datatransferitem对象"></a> DataTransferItem对象</h3>
<p>可以看出<code>getData()</code>方法只能获取到文本类型的数据，但是有时候剪切板里面保存的数据可能是文件，比如复制一个图片的时候，要想从剪切板中获取图片内容就无法通过<code>getData()</code>方法了；这时候可以从<code>DataTransfer.items</code>属性入手，<code>items</code>属性是一个<code>DataTransferItemList</code>对象（一个<strong>伪数组对象</strong>），每个元素都是<code>DataTransferItem</code>对象。</p>
<p>该对象的属性有:</p>
<ul>
<li><code>type</code>：拖拽项（或者剪切板中保存的数据项）的类型，为<code>MIME</code>值；</li>
<li><code>kind</code>：拖拽项的性质，可以是<code>string</code>或者<code>file</code>；</li>
</ul>
<p>该对象的<strong>常用</strong>方法有：</p>
<ul>
<li><code>getAsFile()</code>：尝试将拖拽项数据包装成一个<code>File</code>对象返回，不是文件就返回<code>null</code>（<code>kind</code>对应<code>file</code>）。</li>
<li><code>getAsString(callback)</code>：接受一个回调函数，将拖拽项数据解析为字符串后将该字符串传递给回调函数（<code>kind</code>对应<code>string</code>）；</li>
</ul>
<p>通过<code>DataTransferItem</code>对象的<code>getAsFile()</code>就可以方便地提取出剪切板中复制的图片等文件，而<code>File</code>对象既可以用于上传，也能转为<code>base64</code>字符串，处理图片就比较便捷了。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ul>
<li><a href="https://www.zhangxinxu.com/wordpress/2018/09/drag-drop-datatransfer-js/">拖拽献祭中的黑山羊-DataTransfer对象 « 张鑫旭-鑫空间-鑫生活</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/ClipboardEvent/clipboardData">ClipboardEvent.clipboardData - Web API 接口参考 | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/getAsString">DataTransferItem.getAsString() - Web APIs | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/DataTransferItem/getAsFile">DataTransferItem.getAsFile() - Web API 接口参考 | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/DataTransferItem">DataTransferItem - Web API 接口参考 | MDN</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.w3.org/TR/html51/editing.html#dom-datatransfer-setdata">HTML 5.1 2nd Edition: 5. User interaction</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>H5</tag>
        <tag>DOM</tag>
      </tags>
  </entry>
  <entry>
    <title>布料渲染总结</title>
    <url>/post/cloth-render-test/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>本来是想打算实现<code>GAMES101</code>课程大作业中的布料渲染那种效果的，不知不觉就变成了随风飘动的窗帘布了😅；所以就是随便找了个<code>BRDF</code>（<code>Disney BRDF</code>）来实现，而非那篇参考论文<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>中提供的<code>BRDF</code>，所以这里偷了个懒，虽然看起来有布料那么回事，但是高光部分显然不太合理；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220104115524164.png?imageslim" alt="image-20220104115524164" /></p>
<p><code>demo</code>地址：<a href="https://xiexuefeng.cc/app/we/demo/cloth-render/">https://xiexuefeng.cc/app/we/demo/cloth-render/</a></p>
<span id="more"></span>
<h2 id="弹簧质点系统"><a class="markdownIt-Anchor" href="#弹簧质点系统"></a> 弹簧质点系统</h2>
<h3 id="构建质点网格"><a class="markdownIt-Anchor" href="#构建质点网格"></a> 构建质点网格</h3>
<p>按照一般布料特点，基本上就是以一个类似围棋棋盘的结构构造一个矩形的网格，然后加上对角线连接，如：</p>
<img src="http://pic.xiexuefeng.cc/markdown/image-20220104142853868.png?imageslim" alt="image-20220104142853868" style="zoom: 50%;" />
<p>我这里对角线只做了一个方向上的连接，其实也可以加上另一个方向上的连接，如：</p>
<img src="http://pic.xiexuefeng.cc/markdown/778572-20160509105106109-513620046.jpg?imageslim" alt="img" style="zoom: 67%;" />
<p>其实增加对角线的连接就是增强质点之间力的约束，这里的每个连接就是一个<strong>弹簧</strong>；</p>
<h3 id="约束条件"><a class="markdownIt-Anchor" href="#约束条件"></a> 约束条件</h3>
<p>要让布料网格运动更接近现实，就需要对质点及弹簧之间的相互作用进行一个约束，大致可以分为以下两个方面：</p>
<ol>
<li><strong>力的约束</strong>：在弹簧质点系统里面指的就是各种弹簧的构造，在网格中来说具体就是：
<ul>
<li><strong>结构弹簧</strong>：即网格中相邻两点之间的连接，模拟拉力或压力；</li>
<li><strong>剪切弹簧</strong>：即网格中对角线之间的连接，模拟剪力；</li>
<li><strong>弯曲弹簧</strong>：即网格中间隔一点之间的连接，模拟弯矩；</li>
</ul>
</li>
<li><strong>距离的约束</strong>：由于现实中的弹簧不可能无限拉伸或无限压缩，因此需要给定一个最长长度和最短长度，当出现要超过这个合理范围的长度时，此时弹簧表现为<strong>刚体</strong>，长度处于临界状态；其实也可以用距离约束来模拟布料的弹性，弹性大自然可以拉得更长，反之弹性小自然就拉得更短；</li>
<li><s>碰撞约束：按理说为了预防布料之间的质点进行穿模，应该要加上碰撞检测进行约束……</s></li>
</ol>
<h2 id="质点位置计算"><a class="markdownIt-Anchor" href="#质点位置计算"></a> 质点位置计算</h2>
<p>已知质点质量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>，也能根据弹簧之间的距离来计算各自的弹簧力（胡克定律），那么根据牛顿第二定律就可以计算出质点的加速度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>；</p>
<p>因此，这里可以用<code>Verlet</code>积分来计算质点位置；因为<code>Verlet</code>积分只需要用到当前时刻（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span>）的位置、前一时刻（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>−</mo><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">t - \Delta{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">t</span></span></span></span></span>）的位置加上当前时刻的加速度即可计算出下一时刻（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">t + \Delta{t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">t</span></span></span></span></span>）的位置了，计算简单且精度也较高；</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo stretchy="false">)</mo><mo>+</mo><mover accent="true"><mi>a</mi><mo>⃗</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∗</mo><mi mathvariant="normal">Δ</mi><msup><mi>t</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\vec{x}(t + \Delta{t}) = 2\vec{x}(t) - \vec{x}(t - \Delta{t}) + \vec{a}(t)*\Delta{t}^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">t</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">t</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>不过实际上可以加上一个<strong>阻尼系数</strong>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mrow><mi>d</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>i</mi><mi>n</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">K_{damping}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>）来模拟弹簧之间的摩擦力：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mi mathvariant="normal">Δ</mi><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>K</mi><mrow><mi>d</mi><mi>a</mi><mi>m</mi><mi>p</mi><mi>i</mi><mi>n</mi><mi>g</mi></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><mover accent="true"><mi>a</mi><mo>⃗</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>∗</mo><mi mathvariant="normal">Δ</mi><msup><mi>t</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\vec{x}(t + \Delta{t}) = \vec{x}(t) + (\vec{x}(t) - \vec{x}(t - \Delta{t})) * (1 - K_{damping}) + \vec{a}(t)*\Delta{t}^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">t</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal">t</span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>至于<code>Verlet</code>积分计算的推导推荐看看<a href="https://gameinstitute.qq.com/community/detail/123043">这篇文章</a>，竟然意外的只需要用到泰勒展开😂；</p>
<h2 id="风力场"><a class="markdownIt-Anchor" href="#风力场"></a> 风力场</h2>
<p>为了营造一种随风而动的效果，就需要模拟风力作用；这时候就可以构造一个力场函数，直接根据位置（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>）和当前时间（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span>）来获取当前质点位置所受到的力：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>f</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>f</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>f</mi><mi>z</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">F(\vec{x}, t) = \begin{bmatrix} f_x(\vec{x}, t) \\[0.5em] f_y(\vec{x}, t) \\[0.5em] f_z(\vec{x}, t) \end{bmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.6000000000000005em;vertical-align:-2.0500000000000003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.352005em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.0999950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.1109850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.352005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5500000000000003em;"><span style="top:-4.71em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-1.3099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0500000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.352005em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.0999950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.1109850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.352005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>实际上就是分别给定三个方向上的函数，计算各自分量，最后得到一个力；</p>
<h3 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h3>
<ol>
<li></li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0.35</mn><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mn>0.25</mn><mo>∗</mo><mi>t</mi><mo>+</mo><mn>0.3</mn><mo>∗</mo><mi>y</mi><mi>z</mi><mo>−</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0.45</mn><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mn>2</mn><mo>∗</mo><mi>t</mi><mo>+</mo><mn>0.3</mn><mo>∗</mo><mi>x</mi><mi>y</mi><mo>−</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">F(\vec{x}, t) = \begin{bmatrix} 0 \\[0.5em] -min(0, 0.35 * sin(0.25*t + 0.3*yz - z)) \\[0.5em] -min(0, 0.45 * sin(2*t + 0.3*xy - z)) \end{bmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.6000000000000005em;vertical-align:-2.0500000000000003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.352005em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.0999950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.1109850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.352005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5500000000000003em;"><span style="top:-4.71em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-1.3099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0500000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.352005em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.0999950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.1109850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.352005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/Kapture%202022-01-04%20at%2016.10.06.gif?imageslim" alt="Kapture 2022-01-04 at 16.10.06" /></p>
<ol start="2">
<li></li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mover accent="true"><mi>x</mi><mo>⃗</mo></mover><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0.45</mn><mo>∗</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mn>2</mn><mo>∗</mo><mi>t</mi><mo>+</mo><mn>0.3</mn><mo>∗</mo><mi>x</mi><mi>y</mi><mo>−</mo><mi>z</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">F(\vec{x}, t) = \begin{bmatrix} 0 \\[0.5em] 0 \\[0.5em] -min(0, 0.45 * sin(2*t + 0.3*xy - z)) \end{bmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.20772em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.6000000000000005em;vertical-align:-2.0500000000000003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.352005em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.0999950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.1109850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.352005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5500000000000003em;"><span style="top:-4.71em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.3099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0500000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.352005em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.0999950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.1109850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.352005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/Kapture%202022-01-04%20at%2016.18.28.gif?imageslim" alt="Kapture 2022-01-04 at 16.18.28" /></p>
<h3 id="需要注意的地方"><a class="markdownIt-Anchor" href="#需要注意的地方"></a> 需要注意的地方</h3>
<ol>
<li>这里的系数实际上取决于每个质点的质量及弹簧力之间的相对关系；</li>
<li>构造力场得到力应该与其原本的力（弹簧力和重力等）处于同一数量级，不然很容易会让弹簧质点系统的运动处于不收敛状态；</li>
</ol>
<h2 id="brdf"><a class="markdownIt-Anchor" href="#brdf"></a> <code>BRDF</code></h2>
<p>这个<code>demo</code>的实现基本上采用了<code>Disney BRDF</code>的配置<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220104163427020.png?imageslim" alt="image-20220104163427020" /></p>
<p>虽说按照这个<code>BRDF</code>基本上能够模拟出一种类似丝绸等光滑布料的材质特点，但是还是没法模拟出更多粗糙程度的布料材质；</p>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>基于弹簧质点系统做的仿真动画还是挺好玩的，虽然还是挺基础的应用，不过也能收获很多；主要是偷了个懒，没去实现基于微表面模型的<code>BRDF</code>实现，渲染效果上就不尽人意了；</p>
<h2 id="相关链接"><a class="markdownIt-Anchor" href="#相关链接"></a> 相关链接</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/139428185">布料模拟之基本原理 - 知乎</a></li>
<li><a href="https://www.cnblogs.com/shushen/p/5473264.html">网格弹簧质点系统模拟（Spring-Mass System by Euler Integration） - 算法小丑 - 博客园</a></li>
<li><a href="https://blog.csdn.net/u010281174/article/details/108939572?spm=1001.2014.3001.5501">BRDF理论及shader实现（下）_子宽的专栏-CSDN博客</a>：强烈推荐看看，有常用的<code>PBR</code>的<code>BRDF</code>实现及其对比，函数和各种参数作用讲解的比较详细</li>
<li><a href="https://www.zhihu.com/question/48658408/answer/112064415">请通俗的解释一下什么是弯矩，带上个计算例子更好？ - 莱维的回答 - 知乎</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="http://graphics.ucsd.edu/~henrik/papers/practical_microcylinder_appearance_model_for_cloth_rendering.pdf">http://graphics.ucsd.edu/~henrik/papers/practical_microcylinder_appearance_model_for_cloth_rendering.pdf</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://blog.csdn.net/u010281174/article/details/108939572?spm=1001.2014.3001.5501">BRDF理论及shader实现（下）_子宽的专栏-CSDN博客</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>PBR</tag>
        <tag>图形学</tag>
        <tag>仿真</tag>
      </tags>
  </entry>
  <entry>
    <title>codepen挑战（2020-6-17）：滑动</title>
    <url>/post/codepen-challenge-sliding/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>codepen</code>每周挑战是<code>codepen</code>网站推出的活动，每周一次；每个挑战都有一个主题，基本上是围绕一个特定的场景或者<code>CSS</code>特性/库这类的，针对性比较强。</p>
<span id="more"></span>
<h2 id="挑战描述"><a class="markdownIt-Anchor" href="#挑战描述"></a> 挑战描述</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200628170657.png?imageslim" alt="img" /></p>
<p>实际上是创建一个关于滑动的动画即可，并不局限于幻灯片切换的那种动画（一开始确实理解错了……）。</p>
<h2 id="想法"><a class="markdownIt-Anchor" href="#想法"></a> 想法</h2>
<p><code>Demo</code>地址：<a href="https://codepen.io/xxf1996/pen/KKVNzxz">https://codepen.io/xxf1996/pen/KKVNzxz</a></p>
<p>由于一开始理解成幻灯片切换效果动画了，所以创建一个幻灯片进（<code>slide-in</code>）和出（<code>slide-out</code>）的动画；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200628170716.gif?imageslim" alt="img" /></p>
<p><code>slide-in</code>运用的视觉效果是冲击 + 压缩 + 反弹；</p>
<p><code>slide-out</code>则是沿着一条曲线路径不断旋转，前进和渐隐；主要是运用了新增没几年的<code>offset-path</code>及相关属性；</p>
<h2 id="有趣的案例"><a class="markdownIt-Anchor" href="#有趣的案例"></a> 有趣的案例</h2>
<ul>
<li><a href="https://codepen.io/raczo/full/bGEwRBg">https://codepen.io/raczo/full/bGEwRBg</a></li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200628170755.gif?imageslim" alt="img" /></p>
<p>很有意思，一只看起来百无聊赖的北极熊在冰面上滑动，再加上显眼的<code>MONDAY</code>，寓意很明显。</p>
<p>北极熊本身是使用<code>SVG</code>进行绘制的，显眼的<code>MONDAY</code><font color=#39f>有四层</font>，中间两层是普通的文字，顶层和底层都是使用了<code>-webkit-background-clip: text</code> + <code>-webkit-text-fill-color：transparent</code> + 渐变生成的背景这一组合达成的效果；</p>
<p>文字效果相关的尝试：<a href="https://codepen.io/xxf1996/pen/OJMzKYo">https://codepen.io/xxf1996/pen/OJMzKYo</a></p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/offset-path">offset-path - CSS: Cascading Style Sheets | MDN</a>：移动路径</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/offset-rotate">offset-rotate - CSS: Cascading Style Sheets | MDN</a></li>
<li><a href="https://codepen.io/anthonydugois/full/mewdyZ">https://codepen.io/anthonydugois/full/mewdyZ</a> ：一个可视化输出<code>SVG path</code>的工具</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/-webkit-text-stroke">-webkit-text-stroke - CSS（层叠样式表） | MDN</a>：用于文字描边</li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>动效</tag>
        <tag>codepen</tag>
      </tags>
  </entry>
  <entry>
    <title>cookie与webStorage</title>
    <url>/post/cookie-webStorage/</url>
    <content><![CDATA[<h2 id="cookie"><a class="markdownIt-Anchor" href="#cookie"></a> cookie</h2>
<p>Cookie 是一些数据, 存储于你电脑上的文本文件中。</p>
<p>当 web 服务器向浏览器发送 web 页面时，在连接关闭后，服务端不会记录用户的信息。</p>
<p>Cookie 的作用就是用于解决 『如何记录客户端的用户信息』:</p>
<pre><code>1. 当用户访问 web 页面时，他的名字可以记录在 cookie 中。
2. 在用户下一次访问该页面时，可以在 cookie 中读取用户访问记录。
</code></pre>
<p>一个cookie是以键值对的形式存储的，如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">name = xxf</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="cookie的不足"><a class="markdownIt-Anchor" href="#cookie的不足"></a> cookie的不足</h3>
<ul>
<li>cookie的大小限制在<strong>4KB</strong>；</li>
<li>cookie会<font color=red><strong>伴随http请求一起被发送</strong></font>，会浪费网络带宽</li>
<li>cookie的正确操作比较困难</li>
</ul>
<h3 id="session"><a class="markdownIt-Anchor" href="#session"></a> session</h3>
<blockquote>
<p>所谓session，指的就是用户在浏览某个网站时，从进入网站到关闭浏览器所经过的这段时间，也就是用户浏览这个网站所花费的时间。</p>
</blockquote>
<h2 id="web-storage"><a class="markdownIt-Anchor" href="#web-storage"></a> Web Storage</h2>
<p>Web Storage 是HTML5新增的一种用来在客户端本地进行数据保存的功能。</p>
<p>分为<code>sessionStorage</code>和<code>localStorage</code>两种，其中<code>sessionStorage</code>保存期限（即有效使用期限）即一次<code>session</code>的时间；而<code>localStorage</code>则会<font color=red><strong>直接将数据保存到客户端本地的硬件设备（通常是硬盘）中</strong></font>，浏览器关闭后也不会销毁，下次打开浏览器时依然能被使用！</p>
<ul>
<li><code>sessionStorage</code>为临时保存</li>
<li><code>localStorage</code>为永久保存（没有默认保存期限？）</li>
<li>Web Storage 是按浏览器来保存数据的，即不同浏览器之间保存的Web Storage不能互用！</li>
<li><code>sessionStorage</code>和<code>localStorage</code>是<code>window</code>对象的属性，<strong>不需要声明定义</strong>！</li>
</ul>
<h3 id="api操作"><a class="markdownIt-Anchor" href="#api操作"></a> api操作</h3>
<ol>
<li>保存数据：使用<code>setItem()</code>方法来保存一对数据，如：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第一个参数为键名，第二个参数为键值</span></span><br><span class="line"><span class="variable language_">sessionStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;xxf&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>也可以直接对<code>sessionStorage</code>对象设定<font color=#39f><strong>自定义属性</strong></font>来保存数据：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">sessionStorage</span>.<span class="property">name</span> = <span class="string">&quot;xxf&quot;</span>;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>读取数据：使用<code>getItem()</code>方法来读取某键名对应的数据：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;name&quot;</span>)); <span class="comment">// xxf</span></span><br></pre></td></tr></table></figure>
<p>同理，也可以直接访问对象属性来获取数据：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">sessionStorage</span>.<span class="property">name</span>); <span class="comment">// xxf</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>删除单个数据：使用<code>removeItem()</code>方法删除某一数据：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">sessionStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&quot;name&quot;</span>);</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>删除所有数据：使用<code>clear()</code>方法删除所有的数据：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">sessionStorage</span>.<span class="title function_">clear</span>();</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>按照索引获取对应数据的键名：使用方法<code>key()</code>：</li>
</ol>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="http://www.runoob.com/html/html5-webstorage.html">HTML5 Web 存储 | 菜鸟教程</a></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>html5</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>色彩空间（颜色模型）</title>
    <url>/post/color-space/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<blockquote>
<p>“色彩空间”一词源于西方的“Color Space”，又称作“色域”，色彩学中，人们建立了多种色彩模型，以一维、二维、三维甚至四维空间坐标来表示某一色彩，这种坐标系统所能定义的色彩范围即色彩空间。</p>
</blockquote>
<p>简言之，色彩空间就是用来描述颜色的的坐标空间。而在<code>GLSL</code>里面，<ins>片元着色器最终接受的颜色属于<code>RGBA</code>模型</ins>。</p>
<span id="more"></span>
<h2 id="常用的颜色模型"><a class="markdownIt-Anchor" href="#常用的颜色模型"></a> 常用的颜色模型</h2>
<h3 id="rgba颜色模型"><a class="markdownIt-Anchor" href="#rgba颜色模型"></a> RGB(A)颜色模型</h3>
<p>该模型的原理是<strong>光学三原色</strong>（红、绿、蓝）进行不同比例的混合可以得到其他任何颜色。</p>
<ul>
<li><code>R</code>：代表红色分量；</li>
<li><code>G</code>：代表绿色分量；</li>
<li><code>B</code>：代表蓝色分量；</li>
<li><code>A</code>：代表透明通道分量；</li>
</ul>
<p>很明显，<code>RGB</code>色彩空间为一个<strong>立方体</strong>。该立方体内的每一个点都是不同的颜色值，而<code>GLSL</code>中每一个分量的取值范围为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,\ 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>。而一般常用的<code>RGB</code>为<code>24</code>位，即每个分量取值为<code>8</code>位，也就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup><mo>=</mo><mn>256</mn></mrow><annotation encoding="application/x-tex">2^8 = 256</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span></span></span></span>种取值（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mn>255</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,\ 255]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mclose">]</span></span></span></span>），最后能够得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>24</mn></msup></mrow><annotation encoding="application/x-tex">2^{24}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span>个颜色值。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200412170957.jpg?imageslim" alt="img" /></p>
<h3 id="hsb颜色模型"><a class="markdownIt-Anchor" href="#hsb颜色模型"></a> HSB颜色模型</h3>
<p><code>HSB</code>（也称<code>HSV</code>）颜色模型，是一种<strong>更符合直觉、更易于调色</strong>的颜色模型；</p>
<ul>
<li><code>H</code>（<code>Hue</code>）：指色相，即单纯的颜色；取值范围为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mn>360</mn><mi mathvariant="normal">°</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,\ 360\degree]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span><span class="mclose">]</span></span></span></span>。</li>
<li><code>S</code>（<code>Saturation</code>）：指饱和度，饱和度越高则颜色越纯；取值范围为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mn>100</mn><mi mathvariant="normal">%</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,\ 100\%]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span><span class="mclose">]</span></span></span></span>。</li>
<li><code>B</code>（<code>Brightness</code>）：指明度，又称为值（<code>Value</code>）；取值范围为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mn>100</mn><mi mathvariant="normal">%</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,\ 100\%]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span><span class="mclose">]</span></span></span></span>。</li>
</ul>
<p><code>HSB</code>色彩空间为一个圆柱体：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200412171034.jpg?imageslim" alt="img" /></p>
<p><code>HSB</code>色彩空间坐标实际上是一个<strong>极坐标系</strong>；<code>H</code>分量为<strong>角度</strong>，<code>S</code>分量为<strong>弧长</strong>，<code>B</code>分量则是垂直于<code>H-S</code>极坐标系。</p>
<h3 id="hsb转rgb"><a class="markdownIt-Anchor" href="#hsb转rgb"></a> HSB转RGB</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>h</mi><mi>i</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">⌊</mo><mfrac><mi>h</mi><mn>60</mn></mfrac><mo stretchy="false">⌋</mo><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>6</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>f</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mi>h</mi><mn>60</mn></mfrac><mo>−</mo><msub><mi>h</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>p</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>v</mi><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>q</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>v</mi><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>f</mi><mo>∗</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>t</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>v</mi><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>f</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>v</mi><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> if </mtext><msub><mi>h</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>v</mi><mo separator="true">,</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> if </mtext><msub><mi>h</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>v</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> if </mtext><msub><mi>h</mi><mi>i</mi></msub><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> if </mtext><msub><mi>h</mi><mi>i</mi></msub><mo>=</mo><mn>3</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>t</mi><mo separator="true">,</mo><mi>p</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> if </mtext><msub><mi>h</mi><mi>i</mi></msub><mo>=</mo><mn>4</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mi>v</mi><mo separator="true">,</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> if </mtext><msub><mi>h</mi><mi>i</mi></msub><mo>=</mo><mn>5</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
h_i &amp;= \lfloor \frac{h}{60} \rfloor \ mod\ 6 \\
f &amp;= \frac{h}{60} - h_i \\
p &amp;= v * (1 - s) \\
q &amp;= v * (1 - f * s) \\
t &amp;= v * (1 - (1 - f) * s) \\
(r, g, b) &amp;= \begin{cases}
(v, t, p),\ \text{if }h_i = 0 \\
(q, v, p),\ \text{if }h_i = 1 \\
(p, v, t),\ \text{if }h_i = 2 \\
(p, q, v),\ \text{if }h_i = 3 \\
(t, p, v),\ \text{if }h_i = 4 \\
(v, p, q),\ \text{if }h_i = 5 \\
\end{cases}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:18.15488em;vertical-align:-8.82744em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:9.327440000000001em;"><span style="top:-14.526000000000003em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-12.168560000000003em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-10.342560000000002em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span><span style="top:-8.842560000000002em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span><span style="top:-7.342560000000002em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mord mathnormal">t</span></span></span><span style="top:-2.112560000000002em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.82744em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:9.327440000000001em;"><span style="top:-14.526000000000003em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">⌊</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span><span class="mord">0</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌋</span><span class="mspace"> </span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord">6</span></span></span><span style="top:-12.168560000000003em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span><span class="mord">0</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-10.342560000000002em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span><span style="top:-8.842560000000002em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span><span style="top:-7.342560000000002em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span><span style="top:-2.112560000000002em;"><span class="pstrut" style="height:6.570000000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.45002em;"><span style="top:-0.09998999999999958em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.09498999999999969em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.3899899999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.6849899999999995em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9799899999999995em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.2749899999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.5699899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.86499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.15999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.88501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.18001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.47501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.77001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.06501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.36001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.40501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.700019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9500200000000003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.570000000000001em;"><span style="top:-6.570000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord">if </span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-5.130000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord">if </span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-3.6900000000000013em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord">if </span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span></span></span><span style="top:-2.250000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord">if </span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">3</span></span></span><span style="top:-0.8100000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord">if </span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">4</span></span></span><span style="top:0.6300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord">if </span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.07em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.82744em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>一个HSB转RGB的<code>GLSL</code>实现：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  Function from Iñigo Quiles</span></span><br><span class="line"><span class="comment">//  https://www.shadertoy.com/view/MsS3Wc</span></span><br><span class="line"><span class="type">vec3</span> hsb2rgb( <span class="keyword">in</span> <span class="type">vec3</span> c )&#123;</span><br><span class="line">    <span class="type">vec3</span> rgb = <span class="built_in">clamp</span>(<span class="built_in">abs</span>(<span class="built_in">mod</span>(c.x*<span class="number">6.0</span>+<span class="type">vec3</span>(<span class="number">0.0</span>,<span class="number">4.0</span>,<span class="number">2.0</span>),</span><br><span class="line">                             <span class="number">6.0</span>)<span class="number">-3.0</span>)<span class="number">-1.0</span>,</span><br><span class="line">                     <span class="number">0.0</span>,</span><br><span class="line">                     <span class="number">1.0</span> );</span><br><span class="line">    rgb = rgb*rgb*(<span class="number">3.0</span><span class="number">-2.0</span>*rgb);</span><br><span class="line">    <span class="keyword">return</span> c.z * <span class="built_in">mix</span>(<span class="type">vec3</span>(<span class="number">1.0</span>), rgb, c.y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="rgb转hsb"><a class="markdownIt-Anchor" href="#rgb转hsb"></a> RGB转HSB</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>h</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mi mathvariant="normal">°</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> if </mtext><mi>m</mi><mi>a</mi><mi>x</mi><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>60</mn><mi mathvariant="normal">°</mi><mo>∗</mo><mfrac><mrow><mi>g</mi><mo>−</mo><mi>b</mi></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> if </mtext><mi>m</mi><mi>a</mi><mi>x</mi><mo>=</mo><mi>r</mi><mtext> and </mtext><mi>g</mi><mo>≥</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>60</mn><mi mathvariant="normal">°</mi><mo>∗</mo><mfrac><mrow><mi>g</mi><mo>−</mo><mi>b</mi></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow></mfrac><mo>+</mo><mn>360</mn><mi mathvariant="normal">°</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> if </mtext><mi>m</mi><mi>a</mi><mi>x</mi><mo>=</mo><mi>r</mi><mtext> and </mtext><mi>g</mi><mo>&lt;</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>60</mn><mi mathvariant="normal">°</mi><mo>∗</mo><mfrac><mrow><mi>b</mi><mo>−</mo><mi>r</mi></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow></mfrac><mo>+</mo><mn>120</mn><mi mathvariant="normal">°</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> if </mtext><mi>m</mi><mi>a</mi><mi>x</mi><mo>=</mo><mi>g</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>60</mn><mi mathvariant="normal">°</mi><mo>∗</mo><mfrac><mrow><mi>r</mi><mo>−</mo><mi>g</mi></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow></mfrac><mo>+</mo><mn>240</mn><mi mathvariant="normal">°</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> if </mtext><mi>m</mi><mi>a</mi><mi>x</mi><mo>=</mo><mi>b</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>s</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> if </mtext><mi>m</mi><mi>a</mi><mi>x</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></mfrac><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext> otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>v</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>Notes:</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
h &amp;= \begin{cases}
0\degree,&amp;\ \text{if } max = min \\
60\degree * \frac{g - b}{max - min},&amp;\ \text{if } max = r\text{ and } g \ge b \\
60\degree * \frac{g - b}{max - min} + 360\degree,&amp;\ \text{if } max = r\text{ and } g &lt; b \\
60\degree * \frac{b - r}{max - min} + 120\degree,&amp;\ \text{if } max = g \\
60\degree * \frac{r - g}{max - min} + 240\degree,&amp;\ \text{if } max = b
\end{cases} \\
s &amp;= \begin{cases}
0,&amp;\ \text{if } max = 0 \\
\frac{max - min}{max} = 1 - \frac{min}{max},&amp;\ \text{otherwise}
\end{cases} \\
v &amp;= max \\
\text{Notes:} \\
min &amp;= min(r, g, b) \\
max &amp;= max(r, g, b)
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:16.800069999999998em;vertical-align:-8.150034999999999em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:8.650035em;"><span style="top:-10.650035em;"><span class="pstrut" style="height:5.850020000000001em;"></span><span class="mord"><span class="mord mathnormal">h</span></span></span><span style="top:-5.250015000000001em;"><span class="pstrut" style="height:5.850020000000001em;"></span><span class="mord"><span class="mord mathnormal">s</span></span></span><span style="top:-2.859985000000002em;"><span class="pstrut" style="height:5.850020000000001em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span><span style="top:-1.3599850000000027em;"><span class="pstrut" style="height:5.850020000000001em;"></span><span class="mord"><span class="mord text"><span class="mord">Notes:</span></span></span></span><span style="top:0.14001499999999734em;"><span class="pstrut" style="height:5.850020000000001em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span></span></span><span style="top:1.6400149999999982em;"><span class="pstrut" style="height:5.850020000000001em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.150034999999999em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:8.650035em;"><span style="top:-10.650035em;"><span class="pstrut" style="height:5.850020000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85002em;"><span style="top:-0.6999900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.6949900000000002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.9899900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.2849900000000003em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.5799900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.8749900000000006em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.1699900000000008em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.2049900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.29501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.885010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.180010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.475010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.770010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.80501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.10002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500000000000005em;"><span style="top:-5.850000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mord">°</span><span class="mpunct">,</span></span></span><span style="top:-4.410000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span><span style="top:-2.9700000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span><span class="mpunct">,</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mord">°</span><span class="mpunct">,</span></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854439em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mord">0</span><span class="mord">°</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.8500000000000005em;"><span style="top:-5.850000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace"> </span><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span></span></span><span style="top:-4.410000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace"> </span><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord text"><span class="mord"> and </span></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-2.9700000000000006em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace"> </span><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord text"><span class="mord"> and </span></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace"> </span><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span><span style="top:-0.08999999999999997em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace"> </span><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-5.250015000000001em;"><span class="pstrut" style="height:5.850020000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.855664em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.855664em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace"> </span><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mspace"> </span><span class="mord text"><span class="mord">otherwise</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.859985000000002em;"><span class="pstrut" style="height:5.850020000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span></span></span><span style="top:0.14001499999999734em;"><span class="pstrut" style="height:5.850020000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span><span style="top:1.6400149999999982em;"><span class="pstrut" style="height:5.850020000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.150034999999999em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/%E4%B8%89%E5%8E%9F%E8%89%B2%E5%85%89%E6%A8%A1%E5%BC%8F">三原色光模式 - 维基百科，自由的百科全书</a></li>
<li><a href="https://zh.wikipedia.org/wiki/HSL%E5%92%8CHSV%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4">HSL和HSV色彩空间 - 维基百科，自由的百科全书</a></li>
<li><a href="https://baike.baidu.com/item/%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4">色彩空间_百度百科</a></li>
<li><a href="https://blog.csdn.net/xhhjin/article/details/7020449">RGB与HSB之间的转换公式 - xhhjin的专栏 - CSDN博客</a></li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>GLSL</tag>
        <tag>计算机图形</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS与CG原理</title>
    <url>/post/css-and-cg/</url>
    <content><![CDATA[<p><strong>注</strong>：本文可以看做一篇<font color=#39f>综述</font>，不会涉及太多细节；</p>
<h2 id="跳出前端拥抱cs"><a class="markdownIt-Anchor" href="#跳出前端拥抱cs"></a> 跳出前端，拥抱CS</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201031180252.png?imageslim" alt="img" /></p>
<ul>
<li><code>CS</code>：<code>computer science</code>，即计算机科学领域；</li>
<li><code>CG</code>：<code>computer graphics</code>，计算机图形；</li>
<li><code>CV</code>：<code>computer vision</code>，计算机视觉；</li>
</ul>
<p>前端是多个<code>CS</code>细分领域<font color=#f00>交叉应用的产物</font>，而<code>CSS</code>本质上就是基于<code>CG</code>原理进行开发的；</p>
<span id="more"></span>
<h2 id="为什么"><a class="markdownIt-Anchor" href="#为什么"></a> 为什么？</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201031180312.png?imageslim" alt="img" /></p>
<h2 id="css相关的cg原理"><a class="markdownIt-Anchor" href="#css相关的cg原理"></a> CSS相关的CG原理</h2>
<h3 id="变换矩阵"><a class="markdownIt-Anchor" href="#变换矩阵"></a> 变换矩阵</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201031180334.png?imageslim" alt="img" /></p>
<h4 id="相关案例"><a class="markdownIt-Anchor" href="#相关案例"></a> 相关案例</h4>
<ul>
<li><a href="https://codepen.io/weareindi/pen/oLOQPz">CSS 3D Box with mock shadow</a>：<code>CSS 3D</code>渲染</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201031180344.gif?imageslim" alt="img" /></p>
<ul>
<li><a href="https://codepen.io/Elena_in_code/pen/EbGMqG">CSS 3d box - editable content by user</a></li>
<li><a href="https://codepen.io/xxf1996/pen/eYOaavq">15. Blinn-Phong specular reflect</a>：<code>webGL</code>渲染</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201031180356.gif?imageslim" alt="img" /></p>
<h3 id="字体渲染"><a class="markdownIt-Anchor" href="#字体渲染"></a> 字体渲染</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201031180446.png?imageslim" alt="img" /></p>
<h3 id="阴影生成"><a class="markdownIt-Anchor" href="#阴影生成"></a> 阴影生成</h3>
<ul>
<li><code>text-shadow</code></li>
<li><code>box-shdow</code></li>
<li><code>drop-shadow</code></li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201031180505.png?imageslim" alt="img" /></p>
<h3 id="更多"><a class="markdownIt-Anchor" href="#更多"></a> 更多</h3>
<ul>
<li>图片/视频渲染</li>
<li>滤镜与<code>CV</code>/图像处理算法</li>
<li>渐变色生成算法</li>
<li>背景填充与纹理贴图</li>
<li>etc.</li>
</ul>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/29537375">美国计算机CS专业解析 - 知乎</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6">计算机科学 - 维基百科，自由的百科全书</a></li>
<li><a href="https://www.zhihu.com/question/40819195/answer/129677777">计算机专业大类下，还有哪些细分的专业，分别是干什么的？ - 知乎</a></li>
<li><a href="https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/07%20Transformations/">变换 - LearnOpenGL-CN</a></li>
<li><a href="http://www.opengl-tutorial.org/cn/beginners-tutorials/tutorial-3-matrices/">第三课：矩阵</a></li>
<li><a href="https://www.jianshu.com/p/54fe91a946e2">图形学 光栅化详解（Rasterization） - 简书</a></li>
<li><a href="https://ksmx.me/understanding-font-rendering/">认识字体渲染</a></li>
<li><a href="https://pcwalton.github.io/2015/12/21/drawing-css-box-shadows-in-webrender.html">https://pcwalton.github.io/2015/12/21/drawing-css-box-shadows-in-webrender.html</a>：box-shadow算法</li>
<li><a href="https://stackoverflow.com/questions/12924296/css3-like-box-shadow-implementation-algorithm">c# - CSS3-like box shadow implementation / algorithm - Stack Overflow</a></li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>计算机图形</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS动画</title>
    <url>/post/css-animation/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>总体上来说，<code>animation</code>的效果比<code>transition</code>的效果更加丰富和可控；有一些动画属性实际上是和渐变里面的效果是一致的；</p>
<span id="more"></span>
<h2 id="animation属性"><a class="markdownIt-Anchor" href="#animation属性"></a> animation属性</h2>
<p>同<code>transition</code>一样，<code>animation</code>属性也是一个<strong>缩写</strong>属性，实际上是由多个动画属性组成的：</p>
<table>
<thead>
<tr>
<th style="text-align:center">动画属性</th>
<th style="text-align:center">作用</th>
<th style="text-align:left">取值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>animation-name</code></td>
<td style="text-align:center">动画的名称，用<code>@keyframes</code>进行声明</td>
<td style="text-align:left"><code>&lt;string&gt;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>animation-duration</code></td>
<td style="text-align:center">动画的周期 <br> 单位为<code>s</code>或<code>ms</code>，整数部分为<code>0</code>时可以不写</td>
<td style="text-align:left"><code>&lt;time&gt;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>animation-delay</code></td>
<td style="text-align:center">动画的延迟，可以为负值 <br><strong>负值</strong>可以使得动画在一开始就处于某一个中间状态</td>
<td style="text-align:left"><code>&lt;time&gt;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>animation-timing-function</code></td>
<td style="text-align:center">动画的缓动函数</td>
<td style="text-align:left"><code>&lt;timing-function&gt;</code></td>
</tr>
<tr>
<td style="text-align:center"><code>animation-iteration-count</code></td>
<td style="text-align:center">动画运行次数，默认为<code>1</code></td>
<td style="text-align:left"><code>&lt;number&gt;</code> <br> <code>&lt;time&gt;</code> <br> <code>infinite</code>：一直播放</td>
</tr>
<tr>
<td style="text-align:center"><code>animation-direction</code></td>
<td style="text-align:center">动画运行方向<br>从起点到终点状态的方向</td>
<td style="text-align:left"><code>normal</code>：每个周期结束后<strong>重置为初始状态</strong>； <strong>默认值</strong> <br> <code>reverse</code>：每个周期都从结束状态开始，开始状态结束；周期结束后<strong>重置为结束状态</strong>；<strong>缓动函数</strong>也相应反转；<br> <code>alternate</code>：往返运动；即每次周期结束后反转一次运动方向，第一次方向为<code>normal</code>；<br> <code>alternate-reverse</code>：同<code>alternate</code>类似，只是第一次方向为<code>reverse</code>；</td>
</tr>
<tr>
<td style="text-align:center"><code>animation-fill-mode</code></td>
<td style="text-align:center">动画执行开始前和执行结束后的样式表现</td>
<td style="text-align:left"><code>none</code>：开始前和结束后不会应用动画里面的样式，<strong>默认值</strong> <br> <code>forwards</code>：动画执行<strong>结束</strong>后会保持<strong>最后一帧</strong>的样式；要注意这里指的最后一帧<strong>并不一定</strong>是动画定义的最后一帧，因为<code>animation-direction</code>可以改变动画运行的方向！ <br> <code>backwards</code>：同理，动画执行前会保持<strong>第一帧</strong>的样式； <br> <code>both</code>：<code>forwards</code> + <code>backwards</code>；</td>
</tr>
<tr>
<td style="text-align:center"><code>animation-play-state</code></td>
<td style="text-align:center">动画的运行状态<br>可以控制动画的暂停和运行</td>
<td style="text-align:left"><code>running</code>：正在运行； <br> <code>paused</code>：暂停运行；</td>
</tr>
</tbody>
</table>
<h3 id="keyframes"><a class="markdownIt-Anchor" href="#keyframes"></a> @keyframes</h3>
<p><code>@keyframes</code>可以声明一个动画，该动画由多个关键帧组成，每个关键帧下是<strong>当前帧动画所表现的样式</strong>（这里的样式只能使用支持动画效果的属性）；声明格式如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> animationName &#123;</span><br><span class="line">    frame1 &#123;</span><br><span class="line">        <span class="comment">/* 当前帧样式 */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">    frameN &#123;</span><br><span class="line">        <span class="comment">/* 当前帧样式 */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关键帧的名称是一个<strong>时间进度值</strong>，取值如下：</p>
<ul>
<li><code>from</code>：相当于<code>0%</code>；动画周期的开始；</li>
<li><code>to</code>：相当于<code>100%</code>；动画周期的结束；</li>
<li><code>%</code>：百分比，百分比相对于一个动画周期的时间；</li>
</ul>
<p>因此，动画实际上就是根据<strong>缓动函数</strong>以及<strong>关键帧</strong>的样式来<strong>进行插值</strong>（补帧），得到每一帧的样式。</p>
<h2 id="animation事件"><a class="markdownIt-Anchor" href="#animation事件"></a> animation事件</h2>
<table>
<thead>
<tr>
<th style="text-align:center">事件名称</th>
<th style="text-align:center">触发时机</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>animationstart</code></td>
<td style="text-align:center">动画开始执行的时候</td>
</tr>
<tr>
<td style="text-align:center"><code>animationend</code></td>
<td style="text-align:center">动画执行结束的时候</td>
</tr>
<tr>
<td style="text-align:center"><code>animationiteration</code></td>
<td style="text-align:center">动画<strong>每个周期</strong>（除了第一次）开始的时候</td>
</tr>
</tbody>
</table>
<h2 id="扩展"><a class="markdownIt-Anchor" href="#扩展"></a> 扩展</h2>
<h3 id="web-animations-api"><a class="markdownIt-Anchor" href="#web-animations-api"></a> Web Animations API</h3>
<p><code>Web Animations API</code>是专门用来控制<code>DOM</code>的<code>animation</code>效果的一套<code>API</code>，通过这套<code>API</code><br />
可以直接使用<code>js</code>动态来设置动画效果；不过目前这套<code>API</code>的兼容性比较差，只有<code>element.animate()</code>方法还能用用；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130133645.png?imageslim" alt="20200130133645" /></p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations">Using CSS animations - CSS: Cascading Style Sheets | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API">Web Animations API - Web APIs | MDN</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>动效</tag>
      </tags>
  </entry>
  <entry>
    <title>关于background属性</title>
    <url>/post/css-background/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>background</code>属性实际上和<code>font</code>、<code>animation</code>、<code>transition</code>等属性一样，是一个<strong>缩写</strong>属性；实际上是由多个相关的属性组成的。</p>
<p>平时我们可能用的多就是填个背景色或者背景图地址上去，偶尔再调个背景图适应，也就没怎么关注过了。</p>
<p>不过把所有的<code>background-*</code>属性了解一下，会帮助我们更加的理解背景的<strong>本质</strong>，关键时候就不怕各种微调了。</p>
<span id="more"></span>
<h2 id="background相关属性"><a class="markdownIt-Anchor" href="#background相关属性"></a> background相关属性</h2>
<p><code>background</code>相关的属性有：<code>background-clip</code>、<code>background-color</code>、<code>background-image</code>、<code>background-origin</code>、<code>background-position</code>、<code>background-repeat</code>、<code>background-size</code>， <code>background-attachment</code>；</p>
<p>其中<code>background-image</code>、<code>background-attachment</code>、<code>background-origin</code>、<code>background-position</code>、<code>background-repeat</code>和<code>background-size</code>这几个属性<strong>只适用于背景图</strong>模式（即对背景色不起作用）；</p>
<h3 id="background-clip"><a class="markdownIt-Anchor" href="#background-clip"></a> background-clip</h3>
<p>这个属性是用来指定背景的<strong>显示区域</strong>。其可选值是<code>&lt;box&gt;</code>类型的，即盒模型。</p>
<ul>
<li>
<p><code>content-box</code></p>
</li>
<li>
<p><code>padding-box</code></p>
</li>
<li>
<p><code>border-box</code>；<strong>默认值</strong>。</p>
</li>
<li>
<p><code>text</code>：仅适用于<code>background-clip</code>，目前（<code>2020-2-3</code>）兼容性不大好；大部分浏览器需要<strong>带前缀</strong>。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200206111609.png?imageslim" alt="20200206111609" /></p>
<p>该属性使得背景只会在当前元素的<strong>文字区域</strong>显示，当然要使得文字背景能够显示，首先使得文字的<strong>颜色为透明</strong>才行：</p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background-clip</span>: text;</span><br><span class="line">    -webkit-<span class="attribute">background-clip</span>: text;</span><br><span class="line">    <span class="attribute">color</span>: transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="background-color"><a class="markdownIt-Anchor" href="#background-color"></a> background-color</h3>
<p>很明显，这个属性是用来设置<strong>纯背景色</strong>的；可选值为<code>&lt;color&gt;</code>类型，默认值为<code>transparent</code>。</p>
<p><strong>注意</strong>：渐变色<font color=red>不属于</font><code>&lt;color&gt;</code>类型的！是<code>&lt;image&gt;</code>类型的！！！</p>
<h3 id="background-image"><a class="markdownIt-Anchor" href="#background-image"></a> background-image</h3>
<p>很明显，这属性则是用来设置<strong>背景图片</strong>的；可选值为<code>&lt;image&gt;</code>类型，默认值为<code>none</code>。此外，支持多个背景图同时设置，可用<strong>英文逗号</strong><code>,</code>来分隔：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;xxx.jpg&quot;</span>), <span class="built_in">url</span>(<span class="string">&quot;sdf.png&quot;</span>), ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>目前，<code>&lt;image&gt;</code>类型的数据来源主要有：</p>
<ul>
<li><code>url()</code>函数引用的图片</li>
<li><strong>渐变色</strong></li>
<li><code>element()</code>函数引用的<code>DOM</code>对象；该函数目前还未被广泛支持。</li>
</ul>
<h3 id="background-attachment"><a class="markdownIt-Anchor" href="#background-attachment"></a> background-attachment</h3>
<p>这个属性则是用来指定<strong>背景区域</strong>在滚动时的<strong>跟随方式</strong>；可选值有：</p>
<ul>
<li><code>fixed</code>：滚动时，背景区域始终<strong>相对于视口不动</strong>；</li>
<li><code>local</code>：滚动时，背景区域始终<strong>跟随元素内容</strong>一起滚动；</li>
<li><code>scroll</code>：<strong>默认值</strong>；若在<strong>元素区域内</strong>发生滚动（元素自身出现滚动条），则背景区域始终相对于元素区域不动；若在<strong>元素区域外</strong>发生滚动，则背景区域跟随元素一起滚动；</li>
</ul>
<p>这三种行为的具体差异可以参考<code>MDN</code>上的<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-attachment">demo</a>。</p>
<h3 id="background-origin"><a class="markdownIt-Anchor" href="#background-origin"></a> background-origin</h3>
<p>这个属性是用来指定背景图<strong>初始位置</strong>（<code>background-position</code>）相对的区域。其可选值也是<code>&lt;box&gt;</code>类型的：</p>
<ul>
<li><code>content-box</code></li>
<li><code>padding-box</code>；<strong>默认值</strong>。</li>
<li><code>border-box</code></li>
</ul>
<p>实际上就相当于给背景图初始位置指定了一个<strong>坐标系</strong>（<strong>坐标原点</strong>就是区域的左上角）。</p>
<h3 id="background-position"><a class="markdownIt-Anchor" href="#background-position"></a> background-position（★）</h3>
<p>这个属性是用来设置背景图的初始位置，其坐标系区域就是<code>background-origin</code>指定的区域。其可选值为：</p>
<ul>
<li><code>&lt;length&gt;</code>类型（可以为负值）</li>
<li>百分比（可以为负值）</li>
<li><code>top</code>：相当于<code>0%</code>（<code>y</code>方向）；</li>
<li><code>bottom</code>：相当于<code>100%</code>（<code>y</code>方向）；</li>
<li><code>left</code>：相当于<code>0%</code>（<code>x</code>方向）；</li>
<li><code>right</code>：相当于<code>100%</code>（<code>x</code>方向）；</li>
</ul>
<p>默认值为<code>0% 0%</code>；当<strong>仅给定一个值</strong>时，第二个值为<code>center</code>；有两个值时，第一个值代表<code>x</code>方向的位置，第二个值代表<code>y</code>方向的位置。需要注意的是，<font color=red>随着值的类型不同</font>，<strong>图片与初始位置的对齐规则</strong>有所不同！</p>
<ul>
<li>当值为<strong>长度类型</strong>时，意为<strong>背景图左上角</strong>距离区域左边界或上边界的长度。如：<code>10px 10px</code>代表背景图左上角距离区域左边界<code>10px</code>且距离区域上边界<code>10px</code>。</li>
<li>当值为<strong>百分比类型</strong>时，意为背景图对应的百分比位置对齐到区域的相应百分比的位置；如：<code>50% 50%</code>代表背景图的<code>50% 50%</code>位置（正中央）处于区域内的<code>50% 50%</code>这个点；<code>0% 0%</code>代表背景图的<code>0% 0%</code>位置（左上角）处于区域内的<code>0% 0%</code>这个点上。</li>
</ul>
<p><strong>注</strong>：之前总以为<code>background-position</code>是指定背景图左上角位于区域内的位置，不过后来一想不对劲，那为啥<code>center center</code>的位置又恰好是使背景图位于正中央，如果是左上角对齐那肯定就不是处于正中央了。所以我一直没想明白这个<strong>初始位置和图片的对齐规则是啥</strong>，查了很多地方都没找到，直到我找到了<code>W3C</code>的规范定义，终于才明白了。</p>
<p>为此，我专门制作了一个<a href="https://codepen.io/xxf1996/full/dyobYgO">demo</a>用来查看不同类型值的<code>background-position</code>与背景图的对齐方式，以验证上述说明。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200206111655.png?imageslim" alt="20200206111655" /></p>
<blockquote>
<p><percentage><br><br />
A percentage X aligns the point X% across (for horizontal) or down (for vertical) the image with the point X% across (for horizontal) or down (for vertical) the element’s padding box. For example, with a value pair of ‘0% 0%’,the upper left corner of the image is aligned with the upper left corner of the padding box. A value pair of ‘100% 100%’ places the lower right corner of the image in the lower right corner of the padding box. With a value pair of ‘14% 84%’, the point 14% across and 84% down the image is to be placed at the point 14% across and 84% down the padding box.<br><br />
<length><br><br />
A length L aligns the top left corner of the image a distance L to the right of (for horizontal) or below (for vertical) the top left corner of the element’s padding box. For example, with a value pair of ‘2cm 1cm’, the upper left corner of the image is placed 2cm to the right and 1cm below the upper left corner of the padding box.<br><br />
—— <a href="https://www.w3.org/TR/CSS2/colors.html#propdef-background-position">Colors and backgrounds</a></p>
</blockquote>
<h3 id="background-size"><a class="markdownIt-Anchor" href="#background-size"></a> background-size</h3>
<p>这个属性是用来设置背景图的<strong>尺寸</strong>。可选值有：</p>
<ul>
<li>
<p><code>contain</code>：缩放图片（<strong>保持宽高比</strong>）使得图片正好<strong>能全部显示在区域内</strong>（有一边的长度正好充满相应的方向且图片没有超出区域？可能使区域有空白）。</p>
</li>
<li>
<p><code>cover</code>：缩放图片（<strong>保持宽高比</strong>）使得图片正好能<strong>覆盖区域</strong>（图片可能超出区域外）。</p>
</li>
<li>
<p><strong>宽高值</strong>：可以为<code>&lt;length&gt;</code>类型、百分比或<code>auto</code>关键字；当只有一个值时设置宽度，高度为<code>auto</code>；当有两个值时，第一个值为宽度，第二个值为高度。</p>
<ul>
<li>当宽高值都为<code>auto</code>时：</li>
</ul>
<blockquote>
<p>图像如果有两个长度，则按这个尺寸。如果没有固有尺寸与固有比例，则按背景区的大小。如果没有固有尺寸但是有固有比例， 效果同 contain。如果有一个长度与比例，则由此长度与比例计算大小。如果有一个长度但是没有比例，则使用此长度与背景区相应的长度。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<ul>
<li>当一个为<code>auto</code>另一个不是<code>auto</code>时：</li>
</ul>
<blockquote>
<p>如果图像有固有比例，则指定的长度使用指定值，未指定的长度由指定值与固有比例计算。如果图像没有固有比例，则指定的长度使用指定值，未指定的长度使用图像相应的固有长度，若没有固有长度，则使用背景区相应的长度。<sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup></p>
</blockquote>
<ul>
<li>当两个都不是<code>auto</code>时，图片大小按照设置值显示。</li>
</ul>
</li>
</ul>
<p>默认值为<code>auto auto</code>。可以查看<code>MDN</code>上的<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-size">demo</a>来体会不同值的区别。</p>
<h3 id="background-repeat"><a class="markdownIt-Anchor" href="#background-repeat"></a> background-repeat</h3>
<p>这个属性是用来指定背景图的<strong>重复填充规则</strong>（当区域内水平或竖直方向有空白时才能重复？）。可选值有：</p>
<ul>
<li><code>repeat</code>：进行重复填充；</li>
<li><code>repeat-x</code>：在水平方向进行重复填充；相当于<code>repeat no-repeat</code>。</li>
<li><code>repeat-y</code>：在竖直方向进行重复填充；相当于<code>no-repeat repeat</code>。</li>
<li><code>space</code>：相应方向的填充<strong>不会裁剪图片</strong>，且必须有足够的空间容纳图片相应方向的长度（宽或高）才会进行重复填充；每个重复单元之间的<strong>间隔均匀</strong>分布（效果同<code>space-between</code>）。</li>
<li><code>round</code>：当相应方向有足够的空间容纳一个图片时，之前的图片会被挤压以容纳下一个图片；反之，图片则会被拉伸。具体什么时候插入下一个图片什么时候拉伸<strong>取决于浏览器</strong>的算法实现。</li>
<li><code>no-repeat</code>：不会重复填充；</li>
</ul>
<p>当只给定一个值时，相当于水平和竖直方向的重复规则是一致的；有两个值时，第一个为水平重复规则，第二个为竖直重复规则。具体区别可以查看<code>MDN</code>的<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-repeat">demo</a>。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/image"><image> - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-attachment">background-attachment - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://www.w3.org/TR/CSS2/colors.html#propdef-background-position">Colors and backgrounds</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-size">background-size - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-repeat">background-repeat - CSS（层叠样式表） | MDN</a></li>
</ol>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-size">background-size - CSS（层叠样式表） | MDN</a> <a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>basic-shape 数据类型</title>
    <url>/post/css-basic-shape/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>&lt;basic-shape&gt;</code>是一种特殊的<code>CSS</code><font color=#f00>数据类型</font>，用于表示使用基本形状函数，从而应用相应的形状或路径；目前支持<code>&lt;basic-shape&gt;</code>类型的属性有：</p>
<ul>
<li><code>shape-outside</code>：该属性用于指定周围内联元素环绕时所<font color=#39f>包围的形状</font>；</li>
<li><code>clip-path</code>：该属性用于指定所属盒模型的<font color=#39f>裁剪形状</font>；</li>
<li><code>offset-path</code>：该属性用于指定<font color=#39f>元素移动的路径</font>，属于<code>offset</code>属性中的一个；</li>
</ul>
<span id="more"></span>
<h2 id="形状函数"><a class="markdownIt-Anchor" href="#形状函数"></a> 形状函数</h2>
<h3 id="关于参考盒模型"><a class="markdownIt-Anchor" href="#关于参考盒模型"></a> 关于参考盒模型</h3>
<p>由于形状作用的盒模型<font color=#f00>根据具体的<code>CSS</code>属性有所不同</font>，它可以是<code>margin-box</code>、<code>padding-box</code>、<code>border-box</code>和<code>content-box</code>中的任何一个，因此用参考盒模型来指代这个具体的盒模型；</p>
<blockquote>
<p>When using this syntax to define shapes, the reference box is defined by each property that uses <basic-shape> values. <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<h3 id="inset"><a class="markdownIt-Anchor" href="#inset"></a> inset</h3>
<p><code>inset</code>函数定义了一个矩形形状，只不过这个矩形是由参考盒模型四个边框向内形成的内嵌矩形；语法如下：</p>
<blockquote>
<p>inset( &lt;length-percentage&gt;{1,4} [ round &lt;‘border-radius’&gt; ]? )<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
</blockquote>
<p>可以看出参数分为两个部分，前面是<code>1-4</code>个长度/百分比参数，用于设置矩形距离参考盒模型相应方向的边框距离；</p>
<ul>
<li><strong>1个值</strong>：所有方向的距离一致，百分比为对应方向上盒模型的长度；</li>
<li><strong>2个值</strong>：第一个值代表上和下方向，第二个值代表左和右方向；</li>
<li><strong>4个值</strong>：依次为上、右、下和左，顺时针方向；</li>
</ul>
<p>后面一组是可选参数，为<code>round</code>关键字加上<code>border-radius</code>的语法，用于<font color=#39f>设置内嵌矩阵的圆角效果</font>；如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">inset</span>(<span class="number">20%</span> round <span class="number">45px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="circle"><a class="markdownIt-Anchor" href="#circle"></a> circle</h3>
<p>顾名思义，<code>circle</code>函数就是用于指定一个圆形形状，语法如下：</p>
<blockquote>
<p>circle( &lt;shape-radius&gt;? [ at &lt;position&gt; ]? )<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
</blockquote>
<p>参数依然是两个部分，第一个参数为半径，是<font color=#f00>可选的</font>，默认值<code>W3C</code>文档上没有说明，但是<font color=#39f>据观察为盒模型的最短边的一半</font>（<strong>注意</strong>：这可与<code>50%</code>的效果是不一样的！）；当使用百分比时，长度的参照值为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msqrt><mrow><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><msup><mi>t</mi><mn>2</mn></msup><mo>+</mo><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><msup><mi>h</mi><mn>2</mn></msup></mrow></msqrt><mi mathvariant="normal">/</mi><msqrt><mn>2</mn></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{height^2 + width^2} / \sqrt{2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.256709em;vertical-align:-0.25em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.006709em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.9667090000000003em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23329099999999992em;"><span></span></span></span></span></span><span class="mord">/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.956095em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span></span></span><span style="top:-2.916095em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08390500000000001em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>这里的宽度和高度指的都是参考盒模型；后面一个参数也是可选的，为<code>at</code>关键字加上一组坐标位置，用于指定圆心坐标，坐标默认值为<code>center</code>；</p>
<h3 id="ellipse"><a class="markdownIt-Anchor" href="#ellipse"></a> ellipse</h3>
<p><code>ellipse</code>函数则是指定一个椭圆形状，语法如下：</p>
<blockquote>
<p>ellipse( [ &lt;shape-radius&gt;{2} ]? [ at &lt;position&gt; ]? )<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
</blockquote>
<p>同样，这里参数也是两个部分，<font color=#f00>都是可选的</font>；第一部分为半径，两个参数（<strong>注意</strong>：这里要么完全省略，要么只能两个参数都写，一个参数是非法的！），第一个参数为<code>x</code>方向半径，第二个参数为<code>y</code>方向半径，默认值为<code>50% 50%</code>；第二部分与<code>circle</code>函数类似，用于指定椭圆中心位置，默认值为<code>center</code>；</p>
<h3 id="polygon"><a class="markdownIt-Anchor" href="#polygon"></a> polygon</h3>
<p><code>polygon</code>函数则是用来绘制任意多边形状的，语法如下：</p>
<blockquote>
<p>polygon( &lt;‘fill-rule’&gt;? , [&lt;length-percentage&gt; &lt;length-percentage&gt;]# )<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
</blockquote>
<p>第一个参数<code>fill-rule</code>是可选的（需要注意的是<font color=#f00>第一个参数与后面的参数需要加上逗号分隔</font>），用于指定多边形内部区域识别的算法，有以下选项：</p>
<ul>
<li><code>nonzero</code>：默认值</li>
<li><code>evenodd</code></li>
</ul>
<p>关于<code>nonzero</code>和<code>evenodd</code>算法之间的区别，可以参考：<a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG/Attribute/fill-rule">fill-rule - SVG | MDN</a><br />
;</p>
<p>第二个参数则是一组坐标值，坐标值就是多边形的顶点位置，一个顶点坐标有两个值，用空格分隔，而不同顶点坐标之间则用逗号分隔；如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">polygon</span>(<span class="number">50%</span> <span class="number">20%</span>, <span class="number">90%</span> <span class="number">80%</span>, <span class="number">10%</span> <span class="number">80%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>坐标值的原点位置是参考盒模型的左上角；</p>
<h3 id="path"><a class="markdownIt-Anchor" href="#path"></a> path</h3>
<p><code>path</code>函数则是利用<code>SVG path</code>语法来绘制形状和路径，不过<font color=#f00>目前兼容性很受限</font>；语法如下：</p>
<blockquote>
<p>path( [&lt;‘fill-rule’&gt;,]? &lt;string&gt; )<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></p>
</blockquote>
<p>第一个参数为可选的，用于指定<code>fill-rule</code>；第二个参数为<code>SVG path</code>字符串，用于指定路径；<code>SVG path</code>语法可以参考：<a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d">d - SVG: Scalable Vector Graphics | MDN</a></p>
<h2 id="插值规则"><a class="markdownIt-Anchor" href="#插值规则"></a> 插值规则</h2>
<p>由于<code>&lt;basic-shape&gt;</code>数据类型是支持插值的，这就意味着该属性可以被应用到<code>animation</code>和<code>transition</code>属性中；但是插值规则并非可以直接从一种形状到另一种形状，只是对形状函数的<font color=#39f>参数数值进行插值</font>而已；从<code>W3C</code>的文档<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup>可知，<code>basic-shape</code>数据类型进行插值必须满足以下条件：</p>
<ul>
<li>参考盒模型<font color=#f00>必须一致</font>；</li>
<li>形状类型<font color=#f00>必须一致</font>；</li>
<li><code>ellipse</code>和<code>circle</code>的中心点位置<font color=#f00>不能</font>包含<code>closest-side</code>和<code>farthest-side</code>关键词；</li>
<li><code>polygon</code>形状的<code>fill-rule</code><font color=#f00>必须一致</font>，且<font color=#f00>顶点数量要相同</font>；</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">clip-path</span>: <span class="built_in">inset</span>(<span class="number">10px</span> round <span class="number">20px</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: coral;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">transition</span>: clip-path .<span class="number">5s</span> ease-in;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">clip-path</span>: <span class="built_in">ellipse</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200820185808.gif?imageslim" alt="img" /></p>
<p>可以看到上面这种不同形状函数之间是不能进行插值的；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">clip-path</span>: <span class="built_in">inset</span>(<span class="number">10px</span> round <span class="number">20px</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: coral;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">transition</span>: clip-path .<span class="number">5s</span> ease-in;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">clip-path</span>: <span class="built_in">inset</span>(<span class="number">20px</span> round <span class="number">20px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200820185817.gif?imageslim" alt="img" /></p>
<p>而上面这种同类型形状函数之间就可以进行数值插值了；</p>
<h2 id="相关扩展"><a class="markdownIt-Anchor" href="#相关扩展"></a> 相关扩展</h2>
<h3 id="position数据类型"><a class="markdownIt-Anchor" href="#position数据类型"></a> &lt;position&gt;数据类型</h3>
<p>顾名思义，这种类型的数据专门用来表示位置的；语法<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup>如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200820185833.png?imageslim" alt="img" /></p>
<p>可以是一个值，也可以是两个值；一个值表示<code>x</code>位置和<code>y</code>位置是一致的，两个值则分别表示<code>x</code>位置和<code>y</code>位置；</p>
<ul>
<li><code>x</code>位置：可以是<code>&lt;length-percentage&gt;</code>（即长度类型 + 百分比类型）类型数据，还可以是<code>left</code>（<code>0%</code>），<code>center</code>（<code>50%</code>），<code>right</code>（<code>100%</code>）等关键词；</li>
<li><code>y</code>位置：可以是<code>&lt;length-percentage&gt;</code>，还可以是<code>top</code>（<code>0%</code>），<code>center</code>（<code>50%</code>），<code>bottom</code>（<code>100%</code>）等关键词·；</li>
</ul>
<h3 id="shape-radius数据类型"><a class="markdownIt-Anchor" href="#shape-radius数据类型"></a> &lt;shape-radius&gt;数据类型</h3>
<p>同理，该类型用于表示形状的半径长度，语法如下：</p>
<blockquote>
<p>&lt;shape-radius&gt; = &lt;length-percentage&gt; | closest-side | farthest-side<sup class="footnote-ref"><a href="#fn9" id="fnref9">[9]</a></sup></p>
</blockquote>
<ul>
<li><code>closest-side</code>：半径长度为中心点到盒模型边框<font color=#f00>最近的一边之间的距离</font>；</li>
<li><code>farthest-side</code>：半径长度为中心点到盒模型边框<font color=#f00>最远的一边之间的距离</font>；</li>
</ul>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/basic-shape">&lt;basic-shape&gt; - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://drafts.csswg.org/css-shapes/#basic-shape-functions">CSS Shapes Module Level 1</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/offset-path">offset-path - CSS: Cascading Style Sheets | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Shapes/Overview_of_CSS_Shapes">CSS的图形（Shape）概览 - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/shape-outside">shape-outside - CSS（层叠样式表） | MDN</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://drafts.csswg.org/css-shapes/#reference-box">https://drafts.csswg.org/css-shapes/#reference-box</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://drafts.csswg.org/css-shapes/#funcdef-inset">https://drafts.csswg.org/css-shapes/#funcdef-inset</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://drafts.csswg.org/css-shapes/#funcdef-circle">https://drafts.csswg.org/css-shapes/#funcdef-circle</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://drafts.csswg.org/css-shapes/#funcdef-ellipse">https://drafts.csswg.org/css-shapes/#funcdef-ellipse</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://drafts.csswg.org/css-shapes/#funcdef-polygon">https://drafts.csswg.org/css-shapes/#funcdef-polygon</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="https://drafts.csswg.org/css-shapes/#funcdef-path">https://drafts.csswg.org/css-shapes/#funcdef-path</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p><a href="https://drafts.csswg.org/css-shapes/#basic-shape-interpolation">https://drafts.csswg.org/css-shapes/#basic-shape-interpolation</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn8" class="footnote-item"><p><a href="https://drafts.csswg.org/css-values-3/#position">https://drafts.csswg.org/css-values-3/#position</a> <a href="#fnref8" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn9" class="footnote-item"><p><a href="https://drafts.csswg.org/css-shapes/#typedef-shape-radius">https://drafts.csswg.org/css-shapes/#typedef-shape-radius</a> <a href="#fnref9" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>css3伪元素探究：before和after</title>
    <url>/post/css-before-after/</url>
    <content><![CDATA[<p><code>::before</code>和<code>::after</code>伪元素在网页中有着各种的应用，比如清除浮动，作为字体图标等进行使用；但是一直很好奇这两个伪元素与设置元素（<strong>设置元素指的是设置伪元素的依赖元素</strong>）之间到底是何种关系，以及相当于何种标签元素。</p>
<span id="more"></span>
<h2 id="before和after伪元素的默认属性"><a class="markdownIt-Anchor" href="#before和after伪元素的默认属性"></a> before和after伪元素的默认属性</h2>
<p><code>::before</code>和<code>::after</code>伪元素实际上就是在设置元素内处于『特殊』位置的<font color=red><strong>子元素</strong></font>。</p>
<h3 id="样式"><a class="markdownIt-Anchor" href="#样式"></a> 样式</h3>
<p><code>::before</code>和<code>::after</code>伪元素的默认<code>css</code>样式就相当于<font color=red><strong>行内元素</strong></font>，与<code>&lt;span&gt;</code>元素类似。</p>
<h3 id="位置"><a class="markdownIt-Anchor" href="#位置"></a> 位置</h3>
<p><code>::before</code>伪元素就相当于在设置元素内通过<code>prepend</code>（即<strong>前插</strong>）的方式插入一个行内元素；同理，<code>::after</code>伪元素相当于在设置元素内通过<code>append</code>（即<strong>后插</strong>）的方式插入的一个行内元素。</p>
<h3 id="文本"><a class="markdownIt-Anchor" href="#文本"></a> 文本</h3>
<p><code>::before</code>和<code>::after</code>伪元素可以通过<code>content</code>属性来设置显示的文本，就相当于<code>DOM</code>节点的<code>innnerText</code>属性。</p>
<h2 id="before和after伪元素的使用"><a class="markdownIt-Anchor" href="#before和after伪元素的使用"></a> before和after伪元素的使用</h2>
<p>其实知道这两个伪元素的性质之后，基本上就可以把它们视为普通的行内元素来使用，只不过不需要通过在<code>html</code>代码中添加，而是通过<code>css</code>样式来控制，甚至可以『批量』控制。而且作为『特殊』性质的默认位置，也可以通过<code>position</code>属性来轻松改变。</p>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS颜色混合模式</title>
    <url>/post/css-blend-mode/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>混合模式（<code>blend mode</code>）是计算机图形学中的一个概念，用于处理帧绘制中不同（相邻）层级图像之间的颜色混合方式；<code>CSS3</code>开始引入了混合模式的功能，可以先从原理开始了解。</p>
<blockquote>
<p>注：以下RGB颜色分量范围为[0, 1]。</p>
</blockquote>
<span id="more"></span>
<h2 id="混合模式"><a class="markdownIt-Anchor" href="#混合模式"></a> 混合模式</h2>
<h3 id="基本原理"><a class="markdownIt-Anchor" href="#基本原理"></a> 基本原理</h3>
<p>关于混合模式的原理，其实<a href="https://www.w3.org/TR/compositing-1/#blending">W3C文档</a>上面写的很详细，所有的混合模式可以精简成一个公式：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mrow><mi>m</mi><mi>i</mi><mi>x</mi></mrow></msub><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mrow><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>d</mi><mi>r</mi><mi>o</mi><mi>p</mi></mrow></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mrow><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{mix} = f(C_{backdrop},\ C_{source})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>其中：</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>m</mi><mi>i</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{mix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：代表混合之后得到的颜色；</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>b</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>d</mi><mi>r</mi><mi>o</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{backdrop}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>：代表处于相对底层的颜色；</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>s</mi><mi>o</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{source}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>：代表处于相对上层的颜色；</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span>：代表用于混合两种颜色的函数；</li>
</ul>
<p>所以，可以明显的看出来各种混合模式之间的区别就在于混合函数；</p>
<h3 id="相关概念"><a class="markdownIt-Anchor" href="#相关概念"></a> 相关概念</h3>
<ul>
<li>
<p><strong>颜色通道</strong>：由于数字图像存储像素颜色信息都是按<font color=#39f>不同颜色成分</font>分别进行存储的，因此将图像中的某一成分单独拿出来<strong>组成的灰度图像</strong>就是其中的一个颜色通道；例如常见的<code>RGBA</code>图像就有<code>R，G，B，A</code>四个颜色通道；</p>
<blockquote>
<p>A channel in this context is the grayscale image of the same size as a color image, made of just one of these primary colors.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
</li>
<li>
<p><strong>互补色</strong>：在RGB颜色模型中，一种颜色的互补色就是用白色减去该颜色所得到的颜色；可以这样描述：</p>
</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mtext>互补</mtext></msub><mo>=</mo><mn>1</mn><mo>−</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">C_{互补} = 1 - C
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">互</span><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></span></p>
<ul>
<li><strong>可分离混合模式</strong>（<code>Separable blend modes</code>）：这里的可分离指的是对不同的颜色通道进行混合然后再合并得到的混合效果是一样的，即<font color=#f00>不同的颜色通道只依赖于对应的颜色通道信息</font>；</li>
</ul>
<h3 id="混合函数"><a class="markdownIt-Anchor" href="#混合函数"></a> 混合函数</h3>
<h4 id="可分离"><a class="markdownIt-Anchor" href="#可分离"></a> 可分离</h4>
<ul>
<li>正常（<code>normal</code>）：默认情况，即上层像素<strong>直接覆盖</strong>下层像素；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>C</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = C_s
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<ul>
<li>正片叠底（<code>multiply</code>）：上层像素与下层像素各通道值进行相乘，得到的图像较原图像<font color=#39f>会偏暗</font>；当一方像素为黑色时得到的像素自然也是黑色，反之若一方像素为白色得到的像素则为另一方像素原值；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>C</mi><mi>b</mi></msub><mo>∗</mo><msub><mi>C</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = C_b * C_s
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<ul>
<li>滤色（<code>screen</code>）：先将<font color=#39f>两者的互补进行正片叠底</font>，然后再取其互补；这种情况通常会使图像<font color=#39f>变得更亮</font>，当一方像素为黑色时得到的像素值就是另一方像素值，而当一方像素为白色时得到的像素也是白色；因此最后混合得到图像会有一个特点：<font color=#f00>颜色值再低也不会低于两者中的任何一个</font>；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>C</mi><mi>b</mi></msub><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>C</mi><mi>b</mi></msub><mo>+</mo><msub><mi>C</mi><mi>s</mi></msub><mo>−</mo><msub><mi>C</mi><mi>b</mi></msub><mo>∗</mo><msub><mi>C</mi><mi>s</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
f(C_b,\ C_s) &amp;= 1 - [(1 - C_b) * (1 - C_s)]\\[1em]
&amp;= C_b + C_s - C_b * C_s
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4em;vertical-align:-1.75em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.25em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.9100000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.25em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">[</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span></span></span><span style="top:-1.9100000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<ul>
<li>变暗（<code>darken</code>）：取两者中<font color=#39f>各自通道中最小的值</font>；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = min(C_b, C_s)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<ul>
<li>变亮（<code>lighten</code>）：取两者中<font color=#39f>各自通道中最大的值</font>；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = max(C_b, C_s)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<ul>
<li>颜色减淡（<code>color-dodge</code>）：作用是提高底层颜色亮度，然后反射上层颜色，最后达到<font color=#39f>提高图像亮度</font>的目的；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mi>b</mi></msub><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mi>s</mi></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mtext> </mtext><mstyle mathsize="1.2em"><mfrac><msub><mi>C</mi><mi>b</mi></msub><mrow><mn>1</mn><mo>−</mo><msub><mi>C</mi><mi>s</mi></msub></mrow></mfrac><mo stretchy="false">)</mo><mo separator="true">,</mo></mstyle></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = 
\begin{cases}
0, &amp; C_b = 0 \\[1em]
1, &amp; C_s = 1 \\[1em]
min(1,\ \large\frac{C_b}{1 - C_s}), &amp; else
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:6.467888em;vertical-align:-2.9839439999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500200000000006em;"><span style="top:-1.2999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.2949899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.58999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.8849900000000002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.17999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.2049900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.29501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.885010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.180010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.205010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.483944em;"><span style="top:-5.675944000000001em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-3.2359440000000004em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-0.7444560000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8829066666666667em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17991999999999994em;"><span style="top:-2.4570000000000003em;margin-left:-0.07153em;margin-right:0.0625em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4273533333333335em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.42397em;margin-left:-0.07153em;margin-right:0.0625em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1760299999999999em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4403333333333333em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span><span class="mclose sizing reset-size6 size7">)</span><span class="mpunct sizing reset-size6 size7">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9839439999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.483944em;"><span style="top:-5.535432em;"><span class="pstrut" style="height:3.059488em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-3.095432em;"><span class="pstrut" style="height:3.059488em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-0.6039440000000003em;"><span class="pstrut" style="height:3.059488em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9839439999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li>颜色加深（<code>color-burn</code>）：跟<code>color-dodge</code>作用相反，会降低底层颜色亮度，然后反射上层颜色，<font color=#39f>降低图像的亮度</font>；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mi>b</mi></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mi>s</mi></msub><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mtext> </mtext><mstyle mathsize="1.2em"><mfrac><mrow><mn>1</mn><mo>−</mo><msub><mi>C</mi><mi>b</mi></msub></mrow><msub><mi>C</mi><mi>s</mi></msub></mfrac><mo stretchy="false">)</mo><mo separator="true">,</mo></mstyle></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = 
\begin{cases}
1, &amp; C_b = 1 \\[1em]
0, &amp; C_s = 0 \\[1em]
1 - min(1,\ \large\frac{1 - C_b}{C_s}), &amp; else
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:6.467888em;vertical-align:-2.9839439999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500200000000006em;"><span style="top:-1.2999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.2949899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.58999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.8849900000000002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.17999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.2049900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.29501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.885010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.180010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.205010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.50002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.483944em;"><span style="top:-5.675944000000001em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-3.2359440000000004em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span><span style="top:-0.7444560000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8829066666666667em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17991999999999994em;"><span style="top:-2.4570000000000003em;margin-left:-0.07153em;margin-right:0.0625em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4273533333333335em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.42397em;margin-left:-0.07153em;margin-right:0.0625em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1760299999999999em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4403333333333333em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span><span class="mclose sizing reset-size6 size7">)</span><span class="mpunct sizing reset-size6 size7">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9839439999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.483944em;"><span style="top:-5.535432em;"><span class="pstrut" style="height:3.059488em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-3.095432em;"><span class="pstrut" style="height:3.059488em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-0.6039440000000003em;"><span class="pstrut" style="height:3.059488em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9839439999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li>强光（<code>hard-light</code>）：<font color=#39f>颜色变亮或变暗取决于上层的像素颜色</font>，暗则更暗，亮则更亮；效果类似于在底层图像上加上<font color=#f00>高（镜面）反射光</font>；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>f</mi><mrow><mi>m</mi><mi>u</mi><mi>l</mi><mi>t</mi><mi>i</mi><mi>p</mi><mi>l</mi><mi>y</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><mn>2</mn><mo>∗</mo><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mi>s</mi></msub><mo>≤</mo><mn>0.5</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>f</mi><mrow><mi>s</mi><mi>c</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><mn>2</mn><mo>∗</mo><mi>C</mi><mi>s</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = 
\begin{cases}
f_{multiply}(C_b,\ 2 * C_s), &amp; C_s \le 0.5 \\[1em]
f_{screen}(C_b,\ 2 * Cs - 1), &amp; else
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.88em;vertical-align:-1.69em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.00501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.19em;"><span style="top:-4.1899999999999995em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-1.75em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.19em;"><span style="top:-4.1899999999999995em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span><span style="top:-1.75em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li>弱光（<code>soft-light</code>）：<font color=#39f>颜色变亮或变暗取决于上层的像素颜色</font>，效果类似于在底层图像上加上<font color=#f00>漫反射光</font>；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mn>16</mn><mo>∗</mo><mi>C</mi><mo>−</mo><mn>12</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>C</mi><mo>+</mo><mn>4</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>C</mi><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>C</mi><mo>≤</mo><mn>0.25</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msqrt><mi>C</mi></msqrt><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline" height="2em"></mspace><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mi>b</mi></msub><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>2</mn><mo>∗</mo><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>∗</mo><msub><mi>C</mi><mi>b</mi></msub><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>C</mi><mi>b</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mi>s</mi></msub><mo>≤</mo><mn>0.5</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>C</mi><mi>b</mi></msub><mo>+</mo><mo stretchy="false">(</mo><mn>2</mn><mo>∗</mo><mi>C</mi><mi>s</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>C</mi><mi>b</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">D(C) = 
\begin{cases}
((16 * C - 12) * C + 4) * C, &amp; C \le 0.25 \\[1em]
\sqrt{C}, &amp; else
\end{cases}\\[2em]
f(C_b,\ C_s) = 
\begin{cases}
C_b - (1 - 2 * C_s) * C_b * (1 - C_b), &amp; C_s \le 0.5 \\[1em]
C_b + (2 * Cs - 1) * (D(C_b) - C_b), &amp; else
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.88em;vertical-align:-1.69em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.00501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.19em;"><span style="top:-4.1899999999999995em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span></span></span><span style="top:-1.75em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9266650000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span><span style="top:-2.886665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11333499999999996em;"><span></span></span></span></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.19em;"><span style="top:-4.1899999999999995em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">5</span></span></span><span style="top:-1.75em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline" style="margin-top:2em;"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.88em;vertical-align:-1.69em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.00501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.19em;"><span style="top:-4.1899999999999995em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-1.75em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.19em;"><span style="top:-4.1899999999999995em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span><span style="top:-1.75em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ul>
<li>叠加（<code>overlay</code>）：将两者<font color=#39f>互换位置</font>，然后再进行强光处理；因此类似于给上层图像加了镜面反射光；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mrow><mi>h</mi><mi>a</mi><mi>r</mi><mi>d</mi><mo>−</mo><mi>l</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>C</mi><mi>s</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>b</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = f_{hard-light}(C_s,\ C_b)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">d</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<ul>
<li>差值（<code>difference</code>）：获取两者各自通道之间的差值；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><msub><mi>C</mi><mi>b</mi></msub><mo>−</mo><msub><mi>C</mi><mi>s</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = | C_b - C_s |
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p>
<ul>
<li>排除（<code>exclusion</code>）：从结果来看，<code>exclusion</code>等于滤色效果减去正片叠底；从效果上看则与差值类似，但是具有更低的对比度；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>C</mi><mi>b</mi></msub><mo>+</mo><msub><mi>C</mi><mi>s</mi></msub><mo>−</mo><mn>2</mn><mo>∗</mo><msub><mi>C</mi><mi>b</mi></msub><mo>∗</mo><msub><mi>C</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = C_b + C_s - 2 * C_b * C_s
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h4 id="不可分离"><a class="markdownIt-Anchor" href="#不可分离"></a> 不可分离</h4>
<p>顾名思义，不可分离指的就是一个颜色通道的颜色混合会依赖其他颜色通道的数据<code>；CSS</code>中不可分离混合模式通常采用以下步骤：</p>
<ol>
<li>将<code>RGB</code>转为<code>HSL</code>颜色模型；</li>
<li>然后对<code>H，S，L</code>分量进行处理；</li>
<li>最后再最转回<code>RGB</code>颜色模型；</li>
</ol>
<p>根据<code>W3C</code>文档可知，不可分离混合模式会使用以下几个函数：</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Lum(C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>：获取颜色灰度值；</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>l</mi><mi>i</mi><mi>p</mi><mi>C</mi><mi>o</mi><mi>l</mi><mi>o</mi><mi>r</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ClipColor(C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>：将颜色值范围进行校正，保证颜色分量在<code>[0, 1]</code>之间；</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi><mi>L</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>C</mi><mo separator="true">,</mo><mtext> </mtext><mi>l</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">SetLum(C,\ l)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span>：将颜色值转为灰度为<code>l</code>的颜色；</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Sat(C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span>：获取RGB颜色的饱和度（即<code>HSL</code>中的<code>S</code>分量）；</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi><mi>S</mi><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><mi>C</mi><mo separator="true">,</mo><mtext> </mtext><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">SetSat(C,\ s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span>：将RGB颜色中的饱和度转为<code>s</code>；</li>
</ul>
<p>可以用<code>GLSL</code>进行相应函数的描述：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> main &#123;</span><br><span class="line">  <span class="comment">// RGB转灰度</span></span><br><span class="line">  <span class="type">float</span> lum (<span class="type">vec3</span> color) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0.3</span> * color.r + <span class="number">0.59</span> * color.g + <span class="number">0.11</span> * color.b;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取rgb颜色分量中的最大值</span></span><br><span class="line">  <span class="type">float</span> minChannel (<span class="type">vec3</span> c) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">min</span>(<span class="built_in">min</span>(c.r, c.g), <span class="built_in">min</span>(c.g, c.b));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取rgb颜色分量中的最小值</span></span><br><span class="line">  <span class="type">float</span> maxChannel (<span class="type">vec3</span> c) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">max</span>(c.r, c.g), <span class="built_in">max</span>(c.g, c.b));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 校正rgb颜色值</span></span><br><span class="line">  <span class="type">vec3</span> clipColor (<span class="type">vec3</span> color) &#123;</span><br><span class="line">    <span class="type">vec3</span> c = color;</span><br><span class="line">    <span class="type">float</span> l = lum(color);</span><br><span class="line">    <span class="type">float</span> n = maxChannel(color);</span><br><span class="line">    <span class="type">float</span> x = minChannel(color);</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0.0</span>) &#123;</span><br><span class="line">      c = l + (((c - l) * l) / (l - n));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">1.0</span>) &#123;</span><br><span class="line">      c = l + (((c - l) * (<span class="number">1.0</span> - l)) / (x - l));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置rgb颜色灰度</span></span><br><span class="line">  <span class="type">vec3</span> setLum (<span class="type">vec3</span> color, <span class="type">float</span> l) &#123;</span><br><span class="line">    <span class="type">float</span> d = l - lum(color);</span><br><span class="line">    <span class="keyword">return</span> clipColor(color + d);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取rgb颜色的饱和度s分量</span></span><br><span class="line">  <span class="type">float</span> sat (<span class="type">vec3</span> c) &#123;</span><br><span class="line">    <span class="keyword">return</span> maxChannel(c) - minChannel(c);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>色相（<code>hue</code>）：使用底层颜色的<code>S</code>及<code>L</code>分量，加上上层颜色的<code>H</code>分量，得到一个新的颜色；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>e</mi><mi>t</mi><mi>L</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>S</mi><mi>e</mi><mi>t</mi><mi>S</mi><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>s</mi></msub><mo separator="true">,</mo><mtext> </mtext><mi>S</mi><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>L</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = SetLum(SetSat(C_s,\ Sat(C_b)),\ Lum(C_b))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<ul>
<li>饱和度（<code>saturation</code>）：使用底层颜色的<code>H</code>及<code>L</code>分量，加上上层颜色的<code>S</code>分量，得到一个新的颜色；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>e</mi><mi>t</mi><mi>L</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><mi>S</mi><mi>e</mi><mi>t</mi><mi>S</mi><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><mi>S</mi><mi>a</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> </mtext><mi>L</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = SetLum(SetSat(C_b,\ Sat(C_s)),\ Lum(C_b))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<ul>
<li>颜色（<code>color</code>）：使用上层颜色的<code>H</code>及<code>S</code>分量，加上底层的颜色的<code>L</code>分量，得到一个新的颜色；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>e</mi><mi>t</mi><mi>L</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>s</mi></msub><mo separator="true">,</mo><mtext> </mtext><mi>L</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = SetLum(C_s,\ Lum(C_b))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<ul>
<li>明度（<code>luminosity</code>）：使用底层颜色的<code>H</code>及<code>S</code>分量，加上上层的颜色的<code>L</code>分量，得到一个新的颜色；</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>e</mi><mi>t</mi><mi>L</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>b</mi></msub><mo separator="true">,</mo><mtext> </mtext><mi>L</mi><mi>u</mi><mi>m</mi><mo stretchy="false">(</mo><msub><mi>C</mi><mi>s</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(C_b,\ C_s) = SetLum(C_b,\ Lum(C_s))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="css中混合模式相关的属性"><a class="markdownIt-Anchor" href="#css中混合模式相关的属性"></a> CSS中混合模式相关的属性</h2>
<p><code>css3</code>中引入了两个与混合模式有关的属性：</p>
<ul>
<li><code>background-blend-mode</code>：用于指定元素背景（包括<font color=#39f>背景图和背景色</font>）之间的混合模式；</li>
<li><code>mix-blend-mode</code>：用于指定元素与<font color=#f00>其叠层之下的元素/层级</font>之间的混合模式；</li>
</ul>
<h2 id="混合模式的应用"><a class="markdownIt-Anchor" href="#混合模式的应用"></a> 混合模式的应用</h2>
<h3 id="滤色模式叠加特效"><a class="markdownIt-Anchor" href="#滤色模式叠加特效"></a> 滤色模式叠加特效</h3>
<p>可以使用<code>mix-blend-mode: screen</code>的方式给图片/视频或某一区域叠加特效图片/动图，从而达到叠加特效的效果；比如：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200726171323.gif?imageslim" alt="img" /></p>
<p>上面这种效果就是利用上述混合模式，在图片上叠加了一层火焰燃烧的动图，动图如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200726171350.gif?imageslim" alt="img" /></p>
<p>由滤色混合模式特点可知，上层像素为黑色时混合的结果就是底层像素，因此这种模式下<font color=#f00>特效图片都是黑底</font>，就是为了让<font color=#39f>非特效部分像素保持原样</font>，而特效部分像素则与<br />
底层像素进行融合；</p>
<p>有人可能会有些疑问，<font color=#f00>为何不直接把特效图片做成带透明通道的</font>，这样非特效部分的像素就是完全透明的，然后直接叠加在底层区域上不就好了；显然，直接叠加的效果不太真实，而滤色混合模式则会<font color=#39f>对底层像素和上层像素进行某种比例的融合</font>，这样看起来有点接近光反射的模型，看起来更真实；</p>
<h3 id="滤色模式制作图片背景的文字"><a class="markdownIt-Anchor" href="#滤色模式制作图片背景的文字"></a> 滤色模式制作图片背景的文字</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200726171413.png?imageslim" alt="img" /></p>
<p>看到上面这个效果，可能很多人马上能够想到利用<code>backgound-image</code> + <code>-webkit-background-clip: text</code> + <code>color: transparent</code>组合实现；然而这个目前仅能在<code>webkit</code>内核浏览器才能有效果，但是知道了滤色混合模式的原理后，可以利用其“顶层为黑色像素时保留底层像素，为白色像素时则为白色”的特点来实现一样的效果：</p>
<ul>
<li>文字单独设置成一层，然后设置<code>mix-blend-mode: screen</code>；</li>
<li><strong>文字颜色为黑色</strong>：因此可以对文字点阵区域保留底层的像素；</li>
<li>文字区域<strong>背景色为白色</strong>：因此文字点阵以外区域皆为白色；</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://placekitten.com/200/100&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>text<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo2</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">  <span class="attribute">mix-blend-mode</span>: screen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>而且<code>mix-blend-mode</code>目前<font color=#39f>兼容性比较好</font>，PC端完全没问题，移动端可能安卓稍低的版本不太支持；</p>
<h3 id="渐变色文字"><a class="markdownIt-Anchor" href="#渐变色文字"></a> 渐变色文字</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200726171435.png?imageslim" alt="img" /></p>
<p>渐变色文字原理跟上面的图片背景文字一样，只不过是把底层的图片换成渐变背景色而已；</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, blue, green, orange);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.grad</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">background-color</span>: white;</span><br><span class="line">  <span class="attribute">mix-blend-mode</span>: screen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;grad&quot;</span>&gt;</span>渐变文字 Color<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="自制滤镜"><a class="markdownIt-Anchor" href="#自制滤镜"></a> 自制滤镜</h3>
<p>虽然<code>css3</code>新增的<code>filter</code>属性提供了很多滤镜，但是丰富的混合模式加上各自的特点，再配合各种各样的图片就能够形成丰富多彩的自定义滤镜；</p>
<h4 id="正片叠底过滤颜色通道"><a class="markdownIt-Anchor" href="#正片叠底过滤颜色通道"></a> 正片叠底过滤颜色通道</h4>
<p>由于正片叠底的特点，当某颜色通道为<code>0</code>时，可以使混合后相应的颜色通道也为<code>0</code>，也就达到了过滤特定颜色通道的目的；比如上层图像为纯红色（相当于<code>(1, 0 , 0)</code>），此时正片叠底的效果就是只保留底层图像的<code>R</code>通道；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200726171500.png?imageslim" alt="img" /></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.single</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">160px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://placekitten.com/200/160&quot;</span>), red;</span><br><span class="line">  <span class="attribute">background-blend-mode</span>: multiply;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.single</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://placekitten.com/200/160&quot;</span>), green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.single</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://placekitten.com/200/160&quot;</span>), blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.single</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://placekitten.com/200/160&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;single&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;single&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;single&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;single&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>也可以保留任意两个颜色通道：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200726171523.png?imageslim" alt="img" /></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.single</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">160px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://placekitten.com/200/160&quot;</span>), <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="attribute">background-blend-mode</span>: multiply;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.single</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://placekitten.com/200/160&quot;</span>), <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.single</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://placekitten.com/200/160&quot;</span>), <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.single</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://placekitten.com/200/160&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;single&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;single&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;single&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;single&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>甚至可以<font color=#39f>控制单一颜色通道的比例</font>然后再混合起来，<font color=#f00>相当于逐像素进行计算</font>来实现某种滤镜算法；当然，这种利用混合模式去实现滤镜效果和直接使用<code>GPU</code>计算在性能上的差距还是有待验证的，不过简单的组合还是可行的；</p>
<h3 id="晕影效果"><a class="markdownIt-Anchor" href="#晕影效果"></a> 晕影效果</h3>
<p>利用<font color=#39f>正片叠底 + 径向渐变</font>可以实现晕影的滤镜效果，且通过调整径向渐变的半径大小可以控制晕影大小；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200726171538.png?imageslim" alt="img" /></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;https://placekitten.com/300/300&quot;</span>), <span class="built_in">radial-gradient</span>(white <span class="number">50%</span>, black <span class="number">100%</span>);</span><br><span class="line">  <span class="attribute">background-blend-mode</span>: multiply;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3>
<p>了解了混合模式的原理后，可以发现混合模式可以用来做出非常丰富的图像处理，只要结合各个混合模式的算法特点就可以实现很棒的效果，还不用写底层代码；</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Blend_modes">Blend modes - Wikipedia</a></li>
<li><a href="https://zh.wikipedia.org/wiki/HSL%E5%92%8CHSV%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4">HSL和HSV色彩空间 - 维基百科，自由的百科全书</a></li>
<li><a href="https://www.zhihu.com/question/21849710/answer/19529410">如何通俗易懂地讲解 Photoshop 中的「通道」概念？ - 嗜睡者的回答 - 知乎</a></li>
<li><a href="https://juejin.im/post/5bcdad5ce51d457a997b7ef0">Shader 中的颜色混合模式（Blend Mode） - 掘金</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/blend-mode">&lt;blend-mode&gt; - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E4%BA%92%E8%A3%9C%E8%89%B2">https://zh.wikipedia.org/wiki/互補色</a></li>
<li><a href="https://www.cnblogs.com/coco1s/p/8124815.html">不可思议的混合模式 background-blend-mode - ChokCoco - 博客园</a>：很多实用的例子，强烈推荐</li>
<li><a href="https://www.zhangxinxu.com/wordpress/2019/05/css-mix-blend-mode-screen/">深入理解CSS mix-blend-mode滤色screen混合模式 «  张鑫旭-鑫空间-鑫生活</a></li>
<li><a href="https://www.zhangxinxu.com/wordpress/2020/07/css-background-blend-mode/">深入理解CSS background-blend-mode的作用机制 «  张鑫旭-鑫空间-鑫生活</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://en.wikipedia.org/wiki/Channel_(digital_image)">Channel (digital image) - Wikipedia</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>动效</tag>
      </tags>
  </entry>
  <entry>
    <title>border-radius的本质</title>
    <url>/post/css-border-radius/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>border-radius</code>从名字上看像是指定<code>border-box</code>的圆角半径，实际上在使用时大家也是这么用的；但是从<a href="https://www.w3.org/TR/css-backgrounds-3/#corners">W3C官方文档</a>定义来看，<code>border-radius</code>属性<font color=#f00>不仅</font>会影响<code>border-box</code>的形状，还能影响<code>padding-box</code>和<code>content-box</code>的形状；</p>
<p><code>border-radius</code>的本质就是通过<font color=#39f>定义盒模型四个顶点的圆角半径</font>，从而确定四个顶点圆角的<font color=#39f>中心位置</font>，四个中心点绘制的<font color=#39f>椭圆/圆</font>分别对<code>border-box</code>，<code>padding-box</code>和<code>content-box</code><font color=#f00>进行裁剪</font>；</p>
<p>所以<code>border-radius</code><font color=#f00>本质上是一种特殊的形状裁剪语法</font>，和<code>clip-path</code>类似；</p>
<span id="more"></span>
<h2 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h2>
<p><code>border-radius</code>本身是一种缩写属性，对应四个顶点的设置：</p>
<ul>
<li><code>border-top-left-radius</code></li>
<li><code>border-top-right-radius</code></li>
<li><code>border-bottom-right-radius</code></li>
<li><code>border-bottom-left-radius</code></li>
</ul>
<p>这种缩写方式与<code>border</code>属性类似，顶点顺序也是遵循<strong>顺时针</strong>方向，从左上到左下；</p>
<h3 id="值的类型"><a class="markdownIt-Anchor" href="#值的类型"></a> 值的类型</h3>
<ul>
<li><code>&lt;length&gt;</code>：绝对长度类型；</li>
<li><code>&lt;percentage&gt;</code>：百分比类型，百分比基于半轴对应方向<font color=#f00><code>border-box</code></font>的尺寸；</li>
</ul>
<h3 id="维度方向"><a class="markdownIt-Anchor" href="#维度方向"></a> 维度/方向</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200719100325.png?imageslim" alt="img" /></p>
<p>如果是在<font color=#39f>单个顶点设置圆角属性</font>时，是以<font color=#f00>空格</font>来分隔两个维度的半轴长度，前者为<code>x</code>方向半轴长度，后者为<code>y</code>方向半轴长度：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom-left-radius</span>: <span class="number">50%</span> <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>而在缩写语法中，通过<font color=#f00>斜杠（<code>/</code>）</font>来分隔不同方向的半轴长度，前面为<code>x</code>方向半轴长度的缩写，后面为<code>y</code>方向半轴长度的缩写；</p>
<h3 id="缩写语法"><a class="markdownIt-Anchor" href="#缩写语法"></a> 缩写语法</h3>
<p><code>border-radius</code>缩写属性可接收1～4个值，不同数量的值会有不同的顶点分配：</p>
<ul>
<li>
<p><strong>1个值</strong>：每个顶点具有一样的设置；</p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* or */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span> / <span class="number">5%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>2个值</strong>：第一个值对应<font color=#39f>左上和右下</font>顶点，第二个值对应<font color=#39f>右上和左下</font>顶点；可以看出这种语法是对角设置；</p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>3个值</strong>：第一个值对应左上顶点，<font color=#39f>第二个值对应右上和左下顶点</font>（对角线），第三个值对应右下顶点；</p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span> <span class="number">5%</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>4个值</strong>：四个值依次对应左上，右上，右下，左下四个顶点；</p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span> <span class="number">30px</span> <span class="number">5%</span> <span class="number">11px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="裁剪原理"><a class="markdownIt-Anchor" href="#裁剪原理"></a> 裁剪原理</h2>
<p>以上关于语法的部分只不过是随处可见的资料，然而<code>border-radius</code>本质上是对盒模型进行形状裁剪，因此了解其裁剪原理才算是理解其本质；</p>
<blockquote>
<p>注：圆是一种特殊的椭圆，下面用椭圆来替代圆/椭圆，不再赘述；</p>
</blockquote>
<ol>
<li>根据顶点圆角两个维度的半轴长度<font color=#39f>确定椭圆的中心点</font>；</li>
<li>从中心点<font color=#39f>画出椭圆弧</font>，对相应的盒模型进行裁剪，裁剪后的形状就是新的盒模型形状（即可能不是正常的盒形）；</li>
</ol>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200719100454.png?imageslim" alt="img" /></p>
<p>从原理上来说是很简单的，但是其实还存在很多细节，一些边界情况如何处理等等；</p>
<h3 id="确定中心点"><a class="markdownIt-Anchor" href="#确定中心点"></a> 确定中心点</h3>
<p><code>border-box</code>的中心点其实很好确定，毕竟<code>border-radius</code>指定的就是<code>border-box</code>顶点圆角的半轴长，根据<code>border-box</code>顶点位置和半轴长马上就能得到中心点位置；</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mrow><mi>c</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>r</mi></mrow></msub><mo>=</mo><msub><mi>P</mi><mrow><mi>b</mi><mi>o</mi><mi>r</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>v</mi><mi>e</mi><mi>r</mi><mi>t</mi><mi>e</mi><mi>x</mi></mrow></msub><mo>−</mo><mo stretchy="false">(</mo><msub><mi>R</mi><mi>x</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>R</mi><mi>y</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_{center} = P_{borer-vertex} - (R_x,\ R_y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>其实<font color=#f00>其他盒模型的中心点的位置跟<code>border-box</code>的位置是一致</font>的，关键在于半轴长度如何确定？毕竟<code>border-radius</code>只是指定了<code>border-box</code>圆角的半轴长度，因此其他盒模型的半轴长度只能基于此进行推导；</p>
<h3 id="其他盒模型的半轴长"><a class="markdownIt-Anchor" href="#其他盒模型的半轴长"></a> 其他盒模型的半轴长</h3>
<blockquote>
<p>The padding edge (inner border) radius is the outer border radius minus the corresponding border thickness. <strong>In the case where this results in a negative value, the inner radius is zero</strong>.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>根据<code>W3C</code>文档的定义可知：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>R</mi><mrow><mi>p</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>−</mo><mi>x</mi></mrow></msub><mo>=</mo><msub><mi>R</mi><mi>x</mi></msub><mo>−</mo><msub><mi>W</mi><mrow><mi>b</mi><mi>o</mi><mi>r</mi><mi>d</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>x</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>R</mi><mrow><mi>p</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>−</mo><mi>y</mi></mrow></msub><mo>=</mo><msub><mi>R</mi><mi>y</mi></msub><mo>−</mo><msub><mi>W</mi><mrow><mi>b</mi><mi>o</mi><mi>r</mi><mi>d</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>y</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline" height="2em"></mspace></mrow><annotation encoding="application/x-tex">\begin{cases}
R_{padding-x} = R_x - W_{border-x} \\[1em]
R_{padding-y} = R_y - W_{border-y}
\end{cases}\\[2em]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.88em;vertical-align:-1.69em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.00501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.19em;"><span style="top:-4.1899999999999995em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.75em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline" style="margin-top:2em;"></span></span></span></span></p>
<p><strong>注</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>R</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">R_x,R_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>为<code>border-box</code>的半轴长，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mrow><mi>b</mi><mi>o</mi><mi>r</mi><mi>d</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">W_{border-x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>为水平方向的边框长度（顶点在左边就是左边框，在右边就是右边框），同理，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mrow><mi>b</mi><mi>o</mi><mi>r</mi><mi>d</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">W_{border-y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>就是竖直方向的边框长度；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200719100512.png?imageslim" alt="img" /></p>
<p>当然，如果得到的<font color=#f00>半轴长为负值时，会自动变成<code>0</code></font>，此时也就没有圆角裁剪效果了；同理可以得到<code>content-box</code>的圆角半轴长：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>R</mi><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo>−</mo><mi>x</mi></mrow></msub><mo>=</mo><msub><mi>R</mi><mrow><mi>p</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>−</mo><mi>x</mi></mrow></msub><mo>−</mo><msub><mi>W</mi><mrow><mi>p</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>−</mo><mi>x</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>R</mi><mrow><mi>c</mi><mi>o</mi><mi>n</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>t</mi><mo>−</mo><mi>y</mi></mrow></msub><mo>=</mo><msub><mi>R</mi><mrow><mi>p</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>−</mo><mi>y</mi></mrow></msub><mo>−</mo><msub><mi>W</mi><mrow><mi>p</mi><mi>a</mi><mi>d</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>−</mo><mi>y</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline" height="2em"></mspace></mrow><annotation encoding="application/x-tex">\begin{cases}
R_{content-x} = R_{padding-x} - W_{padding-x} \\[1em]
R_{content-y} = R_{padding-y} - W_{padding-y}
\end{cases}\\[2em]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.88em;vertical-align:-1.69em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.00501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.19em;"><span style="top:-4.1899999999999995em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.75em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline" style="margin-top:2em;"></span></span></span></span></p>
<h3 id="裁剪规则"><a class="markdownIt-Anchor" href="#裁剪规则"></a> 裁剪规则</h3>
<p>上面为了图示方便画的都是一个完整的椭圆，实际上只需要四分之一个椭圆即可；具体是哪四分之一，需要根据顶点的方向来确定，即对应方向的象限（这里借用坐标象限表述可能清楚一些）；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200719100525.png?imageslim" alt="img" /></p>
<ul>
<li><strong>左上</strong>：第二象限</li>
<li><strong>右上</strong>：第一象限</li>
<li><strong>右下</strong>：第四象限</li>
<li><strong>左下</strong>：第三象限</li>
</ul>
<p>裁剪时椭圆曲线外被舍去，也可以理解为对应的<font color=#f00>椭圆曲线充当新的盒模型外曲线</font>；以<code>border-box</code>为例：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200719100542.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200719100606.png?imageslim" alt="img" /></p>
<p>其它顶点及盒模型裁剪也是类似的；</p>
<h3 id="半轴长度的上限"><a class="markdownIt-Anchor" href="#半轴长度的上限"></a> 半轴长度的上限</h3>
<p>从规范上来看，好像并没有提及半轴长度的上限，也就是只要半轴长度大于等于<code>0</code>理论上都是可行的；可是经过实践（<code>blink</code>内核和<code>webkit</code>内核），浏览器上面的表现可以看出半轴长度是存在一个上限的，<font color=#f00>这个上限就是盒模型相应方向尺寸的一半</font>！</p>
<p>当然，这并不是说当半轴长度超过盒模型相应方向尺寸的一半时，简单地按尺寸的一半进行处理；而是根据当前盒模型的宽高比进行一定的缩放，即<font color=#39f><strong>把超出比例最多的方向的半轴长度设置为当前盒模型对应方向尺寸的一半，另一个方向按比例缩放</strong></font>！</p>
<p><strong>举个例子</strong>：一个元素的<code>border-box</code>是一个<code>300x200</code>的<code>box</code>时，设置<code>border-radius</code>为<code>150px/200px</code>，由于此时<code>y</code>方向半轴长度是超出比例最多的，因此会将<code>y</code>方向的半轴长度设置为<code>box</code>高度的一半——<code>100px</code>，那么此时另一个方向——<code>x</code>方向的半轴长度就是：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msubsup><mi>R</mi><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><msubsup><mi>R</mi><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><msub><mi>R</mi><mi>y</mi></msub></mfrac><mo>∗</mo><msub><mi>R</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>100</mn><mn>200</mn></mfrac><mo>∗</mo><mn>150</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>75</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
R&#x27;_x &amp;= \frac{R&#x27;_y}{R_y} * R_x \\[1em]
&amp;= \frac{100}{200} * 150 \\[1em]
&amp;= 75
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.66644em;vertical-align:-3.58322em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.08322em;"><span style="top:-6.08322em;"><span class="pstrut" style="height:3.525em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.10178em;"><span class="pstrut" style="height:3.525em;"></span><span class="mord"></span></span><span style="top:-0.6017800000000002em;"><span class="pstrut" style="height:3.525em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.58322em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.08322em;"><span style="top:-6.08322em;"><span class="pstrut" style="height:3.525em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.525em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.773108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.10178em;"><span class="pstrut" style="height:3.525em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord">0</span></span></span><span style="top:-0.6017800000000002em;"><span class="pstrut" style="height:3.525em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">7</span><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.58322em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>因此，此时<code>border-radius: 150px/200px</code>就等价于<code>border-radius: 75px/100px</code>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200719100638.png?imageslim" alt="img" /></p>
<p><a href="https://codepen.io/xxf1996/pen/rNxQjRX">眼见为实</a></p>
<h3 id="裁剪后的padding与border"><a class="markdownIt-Anchor" href="#裁剪后的padding与border"></a> 裁剪后的padding与border</h3>
<p>从上面可以很明显的看出，经过border-radius的裁剪，border和padding也变形了；其实可以这么理解：</p>
<ul>
<li><code>border-box</code>外曲线与<code>padding-box</code>外曲线之间的区域就是<code>border</code>；</li>
<li>同理，<code>padding-box</code>外曲线与<code>content-box</code>外曲线之间的区域就是<code>padding</code>；</li>
</ul>
<h2 id="案例分析"><a class="markdownIt-Anchor" href="#案例分析"></a> 案例分析</h2>
<h3 id="绘制蛋形"><a class="markdownIt-Anchor" href="#绘制蛋形"></a> 绘制蛋形</h3>
<p>从鸡蛋形状可以分析：上半部形状较尖，下半部形状较圆；根据border-radius原理出发，想要绘制鸡蛋形状，上面两个顶点的椭圆肯定偏窄，下面两个顶点的的椭圆就圆一点；所谓偏窄就是<code>y</code>方向的半轴长度更大，得出<code>css</code>如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.egg</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">border-top-left-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">border-top-right-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">border-bottom-left-radius</span>: <span class="number">50%</span> <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">border-bottom-right-radius</span>: <span class="number">50%</span> <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: gold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200719100657.png?imageslim" alt="img" /></p>
<h3 id="胶囊分离动画"><a class="markdownIt-Anchor" href="#胶囊分离动画"></a> 胶囊分离动画</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200719100706.gif?imageslim" alt="img" /></p>
<p>上面这个动画仅需一个元素，无需借助伪元素，如果理解了<code>border-radius</code>的本质，就很容易想明白的，可以挑战一下；</p>
<p><a href="https://codepen.io/xxf1996/full/ZEQmevb">胶囊分离动画</a></p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-radius">border-radius - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://www.w3.org/TR/css-backgrounds-3/">CSS Backgrounds and Borders Module Level 3</a>：<code>border-radius</code>官方文档</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.w3.org/TR/css-backgrounds-3/#corner-shaping">CSS Backgrounds and Borders Module Level 3</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>动效</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>css元素水平垂直居中的方法</title>
    <url>/post/css-center-center/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>还记得刚开始出来找工作那段时间，有一次去一家公司面试，结果出了个小项目要当场实现，然后是一个移动端登录界面，要求整体位置水平垂直居中，结果当时基础薄弱，根本想不起来怎么实现水平垂直居中，现在想起来都有点自愧不如。</p>
<p>后面虽然回去详细了查看了一些使元素水平垂直居中的方法，也有所收获，但是也没来得及整理一下具体方法。</p>
<span id="more"></span>
<h2 id="实现方法"><a class="markdownIt-Anchor" href="#实现方法"></a> 实现方法</h2>
<p>一般来说，根据元素的宽高是否是<font color=red><strong>固定</strong></font>的还是<font color=red><strong>不定</strong></font>的（即随内容不同而改变），适用的方法也有所不同。</p>
<h3 id="固定宽高的元素"><a class="markdownIt-Anchor" href="#固定宽高的元素"></a> 固定宽高的元素</h3>
<h4 id="方法一负margin-position-50-50"><a class="markdownIt-Anchor" href="#方法一负margin-position-50-50"></a> 方法一：负margin + position + (50%, 50%)</h4>
<p>由于元素本身的宽高是固定的，也就是无论其内容怎么改变，<code>width</code>和<code>height</code>是不变的，因此可以直接『<strong>计算</strong>』出该元素在其父元素内水平垂直居中的位置：<font color=#39f><strong>正中心位置</strong></font>（即<code>left</code>和<code>right</code>都为<code>50%</code>的位置）向<font color=red><strong>左上角方向偏移自身宽高的一半</strong></font>。如图所示：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180914/Ek1fcGICDL.png?imageslim" alt="mark" /><center>图1</center></p>
<p>关键就在于使用负<code>margin</code>进行偏移，使元素处于水平居中的位置：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.children</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">0.5</span>*w; <span class="comment">/* w和h就是该元素本身的宽高 */</span></span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">0.5</span>*h;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="方法二marginauto-position-0000"><a class="markdownIt-Anchor" href="#方法二marginauto-position-0000"></a> 方法二：margin:auto + position + (0,0,0,0)</h4>
<p>这种方法实际上利用了<code>margin:auto</code>这个属性的特点：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">margin:auto的填充规则如下。</span><br><span class="line"></span><br><span class="line">（1）如果一侧定值，一侧auto，则auto为剩余空间大小。</span><br><span class="line"></span><br><span class="line">（2）如果两侧均是auto，则平分剩余空间。</span><br></pre></td></tr></table></figure>
<blockquote>
<p>以上来自张鑫旭大佬的《css世界》—— 4.3.4　深入理解CSS中的margin:auto</p>
</blockquote>
<p>可以这么<strong>理解</strong>：当设置元素的<code>left,right,top,bottom</code>都为<code>0</code>时，代表该元素实际上可以分配的空间大小为父元素（最近的非<code>static</code>祖先元素）的全部大小（即自动填充父元素所有空间），但是该元素又设置了<code>width</code>和<code>height</code>属性，所以就有所谓的『<strong>剩余空间</strong>』，利用<code>margin:auto</code>就可以<font color=red><strong>自动平分</strong></font>『<strong>剩余空间</strong>』，使『<strong>剩余空间</strong>』成为<code>margin</code>。</p>
<p>基本<code>css</code>形式如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.children</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: w; <span class="comment">/* w和h为固定宽高 */</span></span><br><span class="line">    <span class="attribute">height</span>: h;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="方法三position-calc"><a class="markdownIt-Anchor" href="#方法三position-calc"></a> 方法三：position + calc</h4>
<p>这种方法的原理与方法一是相同的，也是先定位到<code>(50%, 50%)</code>的位置，然后向左上角进行偏移；只不过这里利用了<code>css3</code>的<code>calc()</code>方法代替负<code>margin</code>进行偏移：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.children</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">0.5</span>*w); <span class="comment">/* w和h就是该元素本身的宽高 */</span></span><br><span class="line">    <span class="attribute">top</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">0.5</span>*h);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看出<code>calc()</code>方法中的<code>%</code>是相对于父元素（最近的非<code>static</code>祖先元素）而言的。</p>
<h3 id="不定宽高的元素"><a class="markdownIt-Anchor" href="#不定宽高的元素"></a> 不定宽高的元素</h3>
<p>所谓的不定宽高就是指元素的<code>width</code>和<code>height</code>都没有预先设置，而是<strong>随内容</strong>不同发生改变（撑开）。既然适用于不定宽高元素的水平垂直居中，那肯定也适用于固定宽高元素。</p>
<h4 id="方法一flex大法"><a class="markdownIt-Anchor" href="#方法一flex大法"></a> 方法一：flex大法</h4>
<p>说句实话，要是<code>css3</code><strong>完全普及并没有兼容性问题</strong>的时候，所有的布局几乎都可以使用<code>flex</code>伸缩盒模型来完成，根本不用像之前那么麻烦。利用<code>flex</code>进行水平垂直居中，主要是使用<code>justify-content</code>和<code>align-items</code>这两个属性，前者是用来控制<font color=red><strong>主轴元素</strong></font>的排列布局方式，而后者就是用来控制<font color=red><strong>侧轴元素</strong></font>的排列布局方式。而<code>flex</code>盒模型中默认的主轴就是水平方向，所以可以用<code>justify-content:center;</code>使元素水平居中，用<code>align-items</code>使元素垂直居中：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="方法二position-50-50-transform"><a class="markdownIt-Anchor" href="#方法二position-50-50-transform"></a> 方法二：position + (50%, 50%) + transform</h4>
<p>利用<code>css3</code>的<code>tansform</code>属性也可以使元素水平垂直居中，其原理和<code>图1</code>一样，先定位到<code>(50%, 50%)</code>，然后使用<code>transform</code>属性中的<code>translate()</code>方法进行偏移即可：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.children</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>没错，<code>transform</code>的<code>%</code>是相对于自身的宽高而言的，因此无论宽高多少都可以达到水平垂直居中的效果。</p>
<p>不过使用上面方法的时候，我发现如果该元素没有设置宽度（子元素是文本，<strong>宽度由内容撑开</strong>），那么该元素的最大宽度只能到父元素的<code>50%</code>（即文本宽度超过<code>50%</code>时会自动换行）。</p>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>查了一些文章和资料后，其实还有一些方法可以实现水平垂直居中；如<code>table</code>布局以及<code>line-height</code>+<code>vertical-align</code>+<code>text-align</code>，但是我在尝试<code>line-height</code>方案时，有时会不成功，也不知道原因是啥。</p>
<p>所有的实现效果可以查看：<a href="http://xiexuefeng.cc/demo/css_test/centet_center.html">http://xiexuefeng.cc/demo/css_test/centet_center.html</a></p>
<h2 id="参考文章"><a class="markdownIt-Anchor" href="#参考文章"></a> 参考文章</h2>
<ol>
<li><a href="https://juejin.im/post/5b9a4477f265da0ad82bf921">CSS实现水平垂直居中的10种方式（史上最全）</a></li>
<li>《css世界》—— 4.3.4 深入理解CSS中的margin:auto</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>css</tag>
        <tag>flex</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS滤镜效果</title>
    <url>/post/css-filter/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>CSS3</code>新增了<code>filter</code>属性用来专门设置元素的滤镜效果，不过目前只支持两种类型：</p>
<ul>
<li><strong>内置</strong>的滤镜函数：一些很常用的滤镜效果。</li>
<li><code>url()</code>：该方法可以引用一个<code>svg</code>滤镜元素来进行滤镜效果的设置。</li>
</ul>
<span id="more"></span>
<h2 id="css滤镜函数一览"><a class="markdownIt-Anchor" href="#css滤镜函数一览"></a> CSS滤镜函数一览</h2>
<table>
<thead>
<tr>
<th style="text-align:center">滤镜函数</th>
<th style="text-align:center">作用</th>
<th style="text-align:center">参数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">blur()</td>
<td style="text-align:center">高斯模糊</td>
<td style="text-align:center">模糊范围；<code>&lt;length&gt;</code>类型数据，默认为<code>0</code>；<br>不能为百分比！负值会被忽略；</td>
</tr>
<tr>
<td style="text-align:center">brightness()</td>
<td style="text-align:center">亮度调整</td>
<td style="text-align:center">亮度值；小数或百分比 <br> 为<code>0</code>时全黑，为<code>1</code>时图像不变 <br> 可以大于<code>1</code>，大于<code>1</code>时比原图像更亮</td>
</tr>
<tr>
<td style="text-align:center">contrast()</td>
<td style="text-align:center">对比度调整</td>
<td style="text-align:center">对比度值；值的设置同<strong>亮度</strong>一样</td>
</tr>
<tr>
<td style="text-align:center">drop-shadow()</td>
<td style="text-align:center">阴影效果</td>
<td style="text-align:center">参数设置同<code>box-shadow()</code>类似<br></td>
</tr>
<tr>
<td style="text-align:center">grayscale()</td>
<td style="text-align:center">灰度调整</td>
<td style="text-align:center">灰度（线性）因子；值在<code>0 - 1</code>之间 <br> <code>1</code>为完全的灰度图像，<code>0</code>则不变</td>
</tr>
<tr>
<td style="text-align:center">hue-rotate()</td>
<td style="text-align:center"><strong>色相</strong>旋转</td>
<td style="text-align:center">色相旋转角度；单位为<code>deg</code>或<code>turn</code></td>
</tr>
<tr>
<td style="text-align:center">invert()</td>
<td style="text-align:center">颜色反转效果</td>
<td style="text-align:center">反转（线性）因子；值在<code>0 - 1</code>之间 <br> <code>1</code>为完全反转，<code>0</code>则不变</td>
</tr>
<tr>
<td style="text-align:center">opacity()</td>
<td style="text-align:center">不透明度调整</td>
<td style="text-align:center">跟<code>opacity</code>效果一样</td>
</tr>
<tr>
<td style="text-align:center">saturate()</td>
<td style="text-align:center">饱和度调整</td>
<td style="text-align:center">饱和度值；指的设置同<strong>亮度</strong>一样</td>
</tr>
<tr>
<td style="text-align:center">sepia()</td>
<td style="text-align:center">褐色调整</td>
<td style="text-align:center">褐色因子；设置同<code>invert</code> <br> <code>1</code>为深褐色，<code>0</code>则不变</td>
</tr>
</tbody>
</table>
<h2 id="滤镜详解"><a class="markdownIt-Anchor" href="#滤镜详解"></a> 滤镜详解</h2>
<h3 id="blur"><a class="markdownIt-Anchor" href="#blur"></a> blur</h3>
<p><code>blur()</code>方法的核心算法就是<font color=#39f>高斯滤波器</font>（滤波器是计算机视觉/图像处理中的一个概念），即利用高斯函数（二维正态分布函数）算出以当前像素点为中心点的矩形区域内所有点的权重，然后将权重归一化处理，权重和各像素点颜色的乘积之和作为当前像素点的新颜色值；因此这种处理效果看起来就是模糊的图像；</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mstyle mathsize="1.2em"><mrow><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><msup><mi>e</mi><mrow><mo>−</mo><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></mrow></msup></mrow></mstyle></mrow><annotation encoding="application/x-tex">G(x,\ y) = \large{\frac{1}{2\pi\sigma^2}e^{-\frac{x^2+y^2}{2\sigma^2}}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.408928em;vertical-align:-0.8232em;"></span><span class="mord sizing reset-size6 size7"><span class="mord"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.5140000000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7186266666666667em;"><span style="top:-3.089em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.8770000000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.29641em;"><span style="top:-3.4593033333333336em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size4 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2556599999999998em;"><span style="top:-2.47267em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9384399999999999em;"><span style="top:-2.93844em;margin-right:0.08333333333333334em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4693300000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.08333333333333334em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.04844em;"><span style="top:-3.04844em;margin-right:0.08333333333333334em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5273299999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size4 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>上面就是二维正态分布函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span>为标准差，对应的就是<code>blur(length)</code>方法中的长度值，可以理解为滤波器的半径，当长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>时，得到的高斯权重矩阵大小就为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mtext> </mtext><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2n + 1,\ 2n + 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>；而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>y</mi></mrow><annotation encoding="application/x-tex">x,\ y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>则代表以当前像素点为原点，各个像素点的坐标；以<code>blur(1px)</code>为例，此时<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sigma = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">r = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200801192911.png?imageslim" alt="img" /></p>
<p>上面就是某个像素点和其周围相邻一个像素点之间的坐标值了；将坐标值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x,\ y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>和标准差代入公式即可得到每个像素点对应的权重值：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200801192922.png?imageslim" alt="img" /></p>
<p>显然，权重值相加不等于1，因此需要做归一化处理：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200801192932.png?imageslim" alt="img" /></p>
<h4 id="细节问题一模糊半径"><a class="markdownIt-Anchor" href="#细节问题一模糊半径"></a> 细节问题一：模糊半径</h4>
<p>从<code>W3C</code>文档可知，它仅仅规范了高斯滤波器中标准差的来源，而没有说清楚模糊半径（即滤波器半径）怎么取；</p>
<blockquote>
<p>The passed parameter defines the value of the standard deviation to the Gaussian function. The parameter is specified a CSS length, but does not accept percentage values. <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>因此，<code>blur()</code>方法规范在这一点上是不严谨的；但是<code>MDN</code>上面对于<code>blur()</code>方法中有个描述值得推敲：</p>
<blockquote>
<p>The blur() fucntion applies a Gaussian blur to the input image. The value of radius defines the value of the standard deviation to the Gaussian function, or <font color=#f00><strong>how many pixels on the screen blend into each other</strong></font>, so a larger value will create more blur. <sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
</blockquote>
<p>也就是说这个长度也可以用来描述模糊半径，由于<font color=#39f>这个长度可以是浮点数，但由于滤波器半径是整数</font>，可以大胆推测：<font color=#f00>滤波器半径（模糊半径）是长度的向上取整值</font>；</p>
<h4 id="细节问题二模糊效果超出部分"><a class="markdownIt-Anchor" href="#细节问题二模糊效果超出部分"></a> 细节问题二：模糊效果超出部分</h4>
<p>应用模糊滤镜效果时，可以看到模糊效果会向外扩张一定的区域，这个多出的区域大概就是传入<code>blur</code>方法的长度：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.test</span> &#123;</span><br><span class="line">  <span class="attr">--radius</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="built_in">var</span>(--radius);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.blur</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="built_in">var</span>(--radius));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;blur&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://placekitten.com/200/200&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200801192950.png?imageslim" alt="img" /></p>
<p>不知模糊滤镜效果为何会超出原本的区域，看起来像是处理边界部分时进行相应宽度的填充导致的，<font color=#39f>不知道这算不算是副作用？</font>毕竟一般的模糊滤镜处理效果是不会超出图像原本区域的，但是<code>W3C</code>规范也并没有提及边界处理情况，所以有点迷；</p>
<p>当我们并不想要显示模糊滤镜超出的部分怎么办？传统的办法可以套一层父元素，然后利用<code>overflow: hidden</code>进行隐藏；但是，其实有更简单的办法，那就是利用<code>clip-path</code>直接将超出部分裁剪掉：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.blur</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="built_in">var</span>(--radius));</span><br><span class="line">  <span class="attribute">clip-path</span>: <span class="built_in">inset</span>(<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200801193004.png?imageslim" alt="img" /></p>
<h3 id="brightness"><a class="markdownIt-Anchor" href="#brightness"></a> brightness</h3>
<p>亮度滤镜的原理很简单，就把亮度值与原像素值相乘，得到的像素值超出<code>1</code>则为<code>1</code>；其实这个效果很容易<font color=#39f>用混合模式中的正片叠底进行模拟</font>（当然，亮度超出<code>1</code>时就没法模拟了）；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;brightness&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;brightness-item&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://placekitten.com/200/200&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;brightness-blend&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.brightness-item</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">brightness</span>(<span class="number">0.5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.brightness-blend</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-blend-mode</span>: multiply;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>) <span class="built_in">url</span>(<span class="string">&quot;https://placekitten.com/200/200&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200801193016.png?imageslim" alt="img" /></p>
<h3 id="contrast"><a class="markdownIt-Anchor" href="#contrast"></a> contrast</h3>
<p>对比度滤镜计算公式如下：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><mi>t</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mn>0.5</mn><mo separator="true">,</mo><mtext> </mtext><mn>0.5</mn><mo separator="true">,</mo><mtext> </mtext><mn>0.5</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo>+</mo><mi>a</mi><mo>∗</mo><msub><mi>C</mi><mrow><mi>o</mi><mi>r</mi><mi>i</mi><mi>g</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{result} = (0.5,\ 0.5,\ 0.5)*(1 - a) + a * C_{origin}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>这里，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>指的就是对比度系数，即传入<code>contrast()</code>方法中的参数；因此，可以看出当对比度系数为<code>1</code>时，得到图像就是原图像，当对比度系数为<code>0</code>时，得到是纯灰度图像；当对比度系数<strong>超出<code>1</code>时</strong>，得到的效果就是<font color=#39f>黑的越黑，白的更白</font>，即对比度上升；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200801193028.png?imageslim" alt="img" /></p>
<h3 id="drop-shadow"><a class="markdownIt-Anchor" href="#drop-shadow"></a> drop-shadow</h3>
<blockquote>
<p>A drop shadow is effectively a blurred, offset version of the input image’s alpha mask drawn in a particular color, composited below the image.<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
</blockquote>
<p>由<code>W3C</code>的定义可知，投影滤镜就是<font color=#39f>复制了图像的透明通道加上了投影颜色</font>组成了新的图层，且在该图层上应用了模糊滤镜效果，该图层位于原图层的下方；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;drop&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;drop-item&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://interactive-examples.mdn.mozilla.net/media/examples/firefox-logo.svg&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.drop-item</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">drop-shadow</span>(<span class="number">300px</span> <span class="number">0</span> <span class="number">0</span> red);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200801193038.png?imageslim" alt="img" /></p>
<p>使用一张具有透明通道的图片，加上投影滤镜可以看到新的图层确实复制了原有的透明通道；</p>
<h3 id="grayscale"><a class="markdownIt-Anchor" href="#grayscale"></a> grayscale</h3>
<p>灰度滤镜原理就很简单，就是将原像素颜色与其灰度值按比例进行混合：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><mi>t</mi></mrow></msub><mo>=</mo><msub><mi>C</mi><mrow><mi>g</mi><mi>r</mi><mi>a</mi><mi>y</mi></mrow></msub><mo>∗</mo><mi>a</mi><mo>+</mo><msub><mi>C</mi><mrow><mi>o</mi><mi>r</mi><mi>i</mi><mi>g</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{result} = C_{gray} * a + C_{origin} * (1- a)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></span></p>
<h3 id="hue-rotate"><a class="markdownIt-Anchor" href="#hue-rotate"></a> hue-rotate</h3>
<p>色相旋转，顾名思义就是将<code>HSL</code>中的<code>H</code>分量进行旋转；也就是先将颜色转为<code>HSL</code>颜色，再将<code>H</code>分量旋转指定量，然后再将颜色转回<code>RGB</code>颜色；只要理解了<code>HSL</code>色彩模型，就很容易这个色相旋转的本质了；</p>
<h3 id="invert"><a class="markdownIt-Anchor" href="#invert"></a> invert</h3>
<p>反转滤镜的原理和灰度滤镜原理是类似的，就是将原像素颜色与其互补色按比例进行混合：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><mi>t</mi></mrow></msub><mo>=</mo><msub><mi>C</mi><mtext>互补</mtext></msub><mo>∗</mo><mi>a</mi><mo>+</mo><msub><mi>C</mi><mrow><mi>o</mi><mi>r</mi><mi>i</mi><mi>g</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{result} = C_{互补} * a + C_{origin} * (1- a)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">互</span><span class="mord cjk_fallback mtight">补</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></span></p>
<p>当然，如果是<code>invert(1)</code>时（即完全的互补色），可以利用差值滤色模式来等价模拟：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;invert&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;invert-item&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://placekitten.com/200/200&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;invert-other&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.invert-item</span> &#123;</span><br><span class="line">  <span class="attribute">filter</span>: <span class="built_in">invert</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.invert-other</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-blend-mode</span>: difference;</span><br><span class="line">  <span class="attribute">background</span>: white <span class="built_in">url</span>(<span class="string">&quot;https://placekitten.com/200/200&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200801193050.png?imageslim" alt="img" /></p>
<h3 id="saturate"><a class="markdownIt-Anchor" href="#saturate"></a> saturate</h3>
<p>饱和度滤镜原理同对比度类似，只不过需要先得出原像素颜色的明度值（即<code>HSL</code>颜色中的<code>L</code>分量），然后将明度值与原像素颜色按比例进行混合：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>0.3</mn><mo>∗</mo><msub><mi>C</mi><mi>r</mi></msub><mo>+</mo><mn>0.59</mn><mo>∗</mo><msub><mi>C</mi><mi>g</mi></msub><mo>+</mo><mn>0.11</mn><mo>∗</mo><msub><mi>C</mi><mi>b</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>C</mi><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><mi>t</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><mi>L</mi><mo separator="true">,</mo><mi>L</mi><mo separator="true">,</mo><mi>L</mi><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>s</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>C</mi><mrow><mi>o</mi><mi>r</mi><mi>i</mi><mi>g</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>∗</mo><mi>s</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
L &amp;= 0.3 * C_r + 0.59 * C_g + 0.11 * C_b \\
C_{result} &amp;= (L, L, L) * (1 - s) + C_{origin} * s
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000000000000004em;vertical-align:-1.2500000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">L</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">L</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span>就是滤镜中设置的饱和度值，可以看出，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">s=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时，得到的就是一副灰度图像；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200801193103.png?imageslim" alt="img" /></p>
<h3 id="sepia"><a class="markdownIt-Anchor" href="#sepia"></a> sepia</h3>
<p>褐色滤镜本质上还是一个混合滤镜，只不过获取一个像素颜色对应的褐色需要多一点计算；不过由于没有在<code>W3C</code>上发现有描述相关的算法，所以在网上找了褐色滤镜的算法<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>C</mi><mrow><mi>s</mi><mi>e</mi><mi>p</mi><mi>i</mi><mi>a</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mtext> </mtext><mi>g</mi><mo separator="true">,</mo><mtext> </mtext><mi>b</mi><mo stretchy="false">)</mo><mo>⋅</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.393</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.349</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.272</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.769</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.686</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.534</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.189</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.168</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.131</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>C</mi><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>u</mi><mi>l</mi><mi>t</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>C</mi><mrow><mi>s</mi><mi>p</mi><mi>e</mi><mi>i</mi><mi>a</mi></mrow></msub><mo>∗</mo><mi>a</mi><mo>+</mo><msub><mi>C</mi><mrow><mi>o</mi><mi>r</mi><mi>i</mi><mi>g</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>∗</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
C_{sepia} &amp;= (r,\ g,\ b) \cdot
\begin{bmatrix}
0.393 &amp; 0.349 &amp; 0.272 \\
0.769 &amp; 0.686 &amp; 0.534 \\
0.189 &amp; 0.168 &amp; 0.131
\end{bmatrix} \\[5ex]
C_{result} &amp;= C_{speia} * a + C_{origin} * (1 - a)
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.366009999999999em;vertical-align:-2.9330049999999996em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.4330049999999996em;"><span style="top:-5.433005em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.7780050000000003em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9330049999999996em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.4330049999999996em;"><span style="top:-5.433005em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mord">9</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">6</span><span class="mord">9</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">8</span><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mord">4</span><span class="mord">9</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mord">8</span><span class="mord">6</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">6</span><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">7</span><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord">3</span><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">3</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-1.7780050000000003em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9330049999999996em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://github.com/chokcoco/iCSS/issues/30">你所不知道的 CSS 滤镜技巧与细节 · Issue #30 · chokcoco/iCSS</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/filter">filter - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://newbieweb.lione.me/2017/08/22/normal-filter-intro/">常用滤镜算法以及WebGL实现 | NewbieWeb</a></li>
<li><a href="https://www.zhangxinxu.com/wordpress/2019/06/fdcon2019-css-share/">FDCon2019大会分享之滤镜与混合模式实录 « 张鑫旭-鑫空间-鑫生活</a></li>
<li><a href="https://juejin.im/post/5b9e127df265da0a9a395e01">图像处理的滤镜算法 - 掘金</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2012/11/gaussian_blur.html">高斯模糊的算法 - 阮一峰的网络日志</a></li>
<li><a href="https://en.wikipedia.org/wiki/Gaussian_blur">https://en.wikipedia.org/wiki/Gaussian_blur</a></li>
<li><a href="https://blog.csdn.net/gaowebber/article/details/79829962">亮度，饱和度，对比度的计算方法_gaowebber的博客-CSDN博客_对比度计算公式</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.w3.org/TR/filter-effects-1/#funcdef-filter-blur">https://www.w3.org/TR/filter-effects-1/#funcdef-filter-blur</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/filter">filter - CSS: Cascading Style Sheets | MDN</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://www.w3.org/TR/filter-effects-1/#funcdef-filter-drop-shadow">https://www.w3.org/TR/filter-effects-1/#funcdef-filter-drop-shadow</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://stackoverflow.com/questions/1061093/how-is-a-sepia-tone-created">image processing - How is a sepia tone created? - Stack Overflow</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS逐帧动画</title>
    <url>/post/css-frame-animation/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>逐帧动画就有点像<code>gif</code>图，就是将动画的所有帧都提取出来，然后<strong>按顺序</strong>进行播放；</p>
<p>利用<code>CSS3</code>中的<code>steps()</code>函数以及<code>background-position</code>即可轻易的实现！</p>
<span id="more"></span>
<h2 id="基本步骤"><a class="markdownIt-Anchor" href="#基本步骤"></a> 基本步骤</h2>
<ol>
<li>
<p>将所有的帧图片按顺序<strong>打包成一个雪碧图</strong>（一排或一列，这样便于位置偏移）；</p>
</li>
<li>
<p>设置背景样式和相关的动画样式；举个例子：</p>
<p>假设每帧图片大小为<code>40x60</code>，总共<code>10</code>帧，打包成<strong>一排</strong>，那么得到的雪碧图大小就为<code>400x60</code>；</p>
 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> frame &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">background-position-x</span>: <span class="number">0px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">background-position-x</span>: -<span class="number">360px</span>; <span class="comment">/* 对应最后一帧图片的偏移量 */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;xxx.png&#x27;</span>);</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">400px</span> <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">animation</span>: frame <span class="number">1.2s</span> <span class="built_in">steps</span>(<span class="number">9</span>) infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注</strong>：<code>steps()</code>函数的第二个参数默认为<code>end</code>。为何是<code>steps(9)</code>而不是<code>steps(10)</code>？因为第一帧的背景位置对应的是第一张图，而最后一帧的背景位置对应的是最后一张图（即第<code>10</code>张图），这两者位置之间实际只差了<code>9</code>张图的宽度而已！所以只需要进行<code>9</code>次位移即可，步数不对则会使每帧得到图片位置发生偏差！</p>
</li>
</ol>
<h2 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h2>
<ol>
<li>
<p>如果使用了<code>rem</code>布局，<code>@keyframes</code>和<code>background-size</code>的尺寸单位换成<code>rem</code>后，在移动端可能会出现抖动的情况；因为换成<code>rem</code>后基本上都带小数，由于各种浏览器对精度的取舍有所不同，所以导致得到背景位置并不是准确的，且<strong>每帧精度丢失后偏移的位置量并不是相同</strong>，最终每帧图片图片<strong>尺寸不一致</strong>，出现抖动。</p>
<p>解决办法可以参考：<a href="https://aotu.io/notes/2017/08/14/fix-sprite-anim/index.html">CSS技巧：逐帧动画抖动解决方案 | Aotu.io「凹凸实验室」</a></p>
</li>
<li>
<p>若动画图片使用的是<strong>二倍图</strong>，那么在<code>background-size</code>处应该使用的是一倍图的尺寸，而<code>background-position</code>则仍然使用二倍图的尺寸！因为<code>background-size</code>指定的是<strong>背景图呈现的大小</strong>（相当于<code>&lt;img&gt;</code>元素的宽高），而<code>background-position</code>的位置针对得是<strong>原始背景图</strong>。</p>
</li>
</ol>
<h2 id="相关知识"><a class="markdownIt-Anchor" href="#相关知识"></a> 相关知识</h2>
<ul>
<li>
<p><code>background-position</code>是相对于<code>background-origin</code>指定的区域而言的；</p>
</li>
<li>
<p><code>background-origin</code>指定了元素<strong>背景图的区域</strong>（盒模型），而<code>background-position</code>则设置了背景图的初始位置。</p>
</li>
</ul>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ol>
<li><a href="https://juejin.im/book/5a7bfe595188257a7349b52a/section/5a8ecfeef265da4e865a80e6">大厂 H5 开发实战手册 - 凹凸实验室 - 掘金小册</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>动效</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS渐变色</title>
    <url>/post/css-gradient/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>CSS</code>渐变色实际上是一种<strong>特殊</strong>的<code>&lt;iamge&gt;</code>类型，因此可以被用在<strong>任何</strong>可以使用<code>&lt;image&gt;</code>类型数据的属性中！而在<code>CSS</code>中，渐变有分为以下几种：</p>
<ul>
<li><strong>线性渐变</strong>：对应<code>linear-gradient()</code>函数。</li>
<li><strong>径向渐变</strong>：对应<code>radial-gradient()</code>函数。</li>
<li><strong>圆锥渐变</strong>：对应<code>conic-gradient()</code>函数。</li>
<li><strong>重复渐变</strong>：对应<code>repeating-linear-gradient()</code>和<code>repeating-radial-gradient()</code>函数。</li>
</ul>
<p>渐变色的特点就是沿着某一方向，从一种颜色逐渐变化到另一种颜色（两种或两种以上颜色）；关键就在于渐变颜色个数、对应的位置，空间上是如何变化的。</p>
<span id="more"></span>
<h2 id="线性渐变"><a class="markdownIt-Anchor" href="#线性渐变"></a> 线性渐变</h2>
<h3 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h3>
<p>线性渐变有两个关键因素：</p>
<ol>
<li><strong>渐变方向</strong></li>
<li><strong>渐变点</strong>：包括点的位置和颜色。</li>
</ol>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130134953.png?imageslim" alt="20200130134953" /></p>
<p>上图是<strong>MDN</strong><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>给出的线性渐变完整定义图，可以看出由起点和终点来决定渐变的方向，然后渐变点位于起点和终点之间。</p>
<h3 id="渐变方向"><a class="markdownIt-Anchor" href="#渐变方向"></a> 渐变方向</h3>
<p><code>linear-gradient()</code>有关渐变方向的设置并不像定义中的那样给定起点和终点位置，而是通过<strong>旋转角度</strong>来确定；默认旋转中心是区域中心点，从<strong>底部往上</strong>的方向为<font color=red><code>0deg</code></font>方向，<strong>顺时针</strong>增加角度，然后再确定起点和终点的位置。</p>
<ul>
<li><strong>起点</strong>：通过区域<strong>左上角</strong>与渐变线做一条垂线，垂线与渐变线的交点就是起点。</li>
<li><strong>终点</strong>：同理，通过区域<strong>右下角</strong>与渐变线做一条垂线，垂线与渐变线的交点就是终点。</li>
</ul>
<p>(可以考虑做个动图，从<code>0~360</code>)</p>
<p>函数的第一个参数可以设置渐变方向（也就是旋转角度），<strong>可以不填</strong>，默认为<strong>从上往下</strong>（也就是<code>180deg</code>）；有以下几种<strong>设置语法</strong>：</p>
<ul>
<li><strong>弧度值</strong>：数字 + <code>deg</code>；或者数字 + <code>turn</code>，<code>turn</code>代表一圈，也就是<code>1trun = 360deg</code>。</li>
<li><strong>关键字</strong>：<code>to</code> + <code>top/right/bottom/left</code>（或者组合）；即指定终点方向。进一步可以推出：
<ul>
<li><code>to top</code> = <code>0deg</code></li>
<li><code>to right</code> = <code>90deg</code></li>
<li><code>to bottom</code> = <code>180deg</code></li>
<li><code>to left</code> = <code>270deg</code></li>
<li><code>to top right</code> = 左下到右上（注意并不一定是<code>45deg</code>）</li>
</ul>
</li>
</ul>
<h3 id="渐变点"><a class="markdownIt-Anchor" href="#渐变点"></a> 渐变点</h3>
<p>渐变点的信息主要有：</p>
<ul>
<li>
<p><strong>位置</strong>：渐变点位于渐变线（轴）上的位置；可以是<code>&lt;length&gt;</code>类型数据或者<code>%</code>，百分比相对于<strong>渐变线的长度</strong>而言。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135025.png?imageslim" alt="20200130135025" /></p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, black, red <span class="number">10%</span>, blue <span class="number">100px</span>, black);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>颜色</strong>：渐变点的颜色，用于进行渐变色的<strong>插值</strong>。</p>
</li>
<li>
<p><strong>渐变中点位置</strong>：即两个渐变颜色的<strong>中间颜色</strong>处于两个渐变点之间的位置；单位为<code>%</code>，百分比相对于<strong>两个渐变点之间的长度</strong>。默认值为<code>50%</code>，即两个渐变点的中点上。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135043.png?imageslim" alt="20200130135043" /></p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo1</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, red, blue);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.demo1</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, red, <span class="number">30%</span>, blue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如上图所示，渐变中点位置<code>50%</code>和<code>30%</code>的效果完全不一样，渐变中点的位置有种『<strong>重心</strong>』的感觉，因此改变渐变中点的位置可以使得两个渐变点之间的渐变<strong>偏向某一侧</strong>。</p>
</li>
</ul>
<p>而在<code>linear-gradient()</code>函数中，渐变点信息的<strong>设置语法</strong>如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">color[ position]</span><br></pre></td></tr></table></figure>
<p>位置<strong>可以不设置</strong>，此时渐变点的位置就等于前一个渐变点及后一个渐变点的<strong>中点位置</strong>；如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.a</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, white, red, green, blue, black);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 等同于 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.a</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, white <span class="number">0%</span>, red <span class="number">25%</span>, green <span class="number">50%</span>, blue <span class="number">75%</span>, black <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>设置位置时，位置与颜色值之间用<strong>空格</strong>分开；如果连续两个渐变点的颜色都是一样的时候，可以将两个位置信息进行<strong>合并</strong>，如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, black, red <span class="number">40%</span>, red <span class="number">60%</span>, black);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 等同于 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, black, red <span class="number">40%</span> <span class="number">60%</span>, black);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135110.png?imageslim" alt="20200130135110" /></p>
<p>除此之外，如果<strong>第一个</strong>渐变点没有指定位置，则默认位置为<code>0%</code>；同理，如果<strong>最后一个</strong>渐变点没有指定位置，则默认位置为<code>100%</code>。不过，即便是第一个和最后一个渐变点设置了位置信息（不是<code>0%</code>和<code>100%</code>的时候），也会默认在第一个渐变点增加一个<strong>颜色值相同</strong>且位置为<code>0%</code>的渐变点，最后一个渐变点也同样，如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, red <span class="number">20%</span>, blue <span class="number">80%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 等同于 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, red <span class="number">0%</span>, red <span class="number">20%</span>, blue <span class="number">80%</span>, blue <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135128.png?imageslim" alt="20200130135128" /></p>
<blockquote>
<p>By default, if there is no color with a 0% stop, the first color declared will be at that point. Similarly, the last color will continue to the 100% mark, or be at the 100% mark if no length has been declared on that last stop. <sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup></p>
</blockquote>
<p>由渐变的特点可知，至少需要两个渐变点信息，渐变点之间用<strong>英文逗号</strong>分隔！而渐变中点则需要设置在<strong>两个渐变点的信息之间</strong>，如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">A_color A_position, xx%, B_color B_position</span><br></pre></td></tr></table></figure>
<h3 id="硬分界线hard-line"><a class="markdownIt-Anchor" href="#硬分界线hard-line"></a> 硬分界线（hard line）</h3>
<p>当一个渐变点的位置和下一个渐变点的位置相同时（两个渐变点颜色不同），就会出现一条很明显的颜色分界线，此时就没有渐变的特点了，如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, red <span class="number">50%</span>, blue <span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135155.png?imageslim" alt="20200130135155" /></p>
<p>利用这种特性可以画出具有不同<strong>色块</strong>的渐变图案，如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, red <span class="number">20%</span>, orange <span class="number">20%</span> <span class="number">40%</span>, yellow <span class="number">40%</span> <span class="number">60%</span>, green <span class="number">60%</span> <span class="number">80%</span>, blue <span class="number">80%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135216.png?imageslim" alt="20200130135216" /></p>
<h2 id="径向渐变"><a class="markdownIt-Anchor" href="#径向渐变"></a> 径向渐变</h2>
<h3 id="原理-2"><a class="markdownIt-Anchor" href="#原理-2"></a> 原理</h3>
<p>径向渐变的原理同线性渐变的原理类似，只不过径向渐变的渐变方向是由中心点往外扩散的径向方向上。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135229.png?imageslim" alt="20200130135229" /></p>
<p>径向渐变通过定义一个中心点，以及结束形状（<code>ending shape</code>，即各个径向方向的终点组成的<strong>闭合曲线</strong>），这个结束形状可以是椭圆或圆；然后由中心点往结束形状上任意一点就形成了一个径向，也就是一个渐变方向，这个方向也叫<strong>虚拟渐变射线</strong>（<code>virtual gradient</code>）；同样地，中心点的位置为<code>0%</code>，而结束形状上面的点的位置则为<code>100%</code>；</p>
<p>明白了径向渐变的原理后，实际上渐变点的设置跟线性渐变的设置是一样的，区别就在于<strong>中心点</strong>及<strong>结束形状</strong>的设置。</p>
<h3 id="中心点"><a class="markdownIt-Anchor" href="#中心点"></a> 中心点</h3>
<p>中心点的范围在区域内，可以使用<code>%</code>（百分比相对的是<strong>区域的宽高</strong>），也可以直接使用<code>&lt;length&gt;</code>类型的数据，可以在<code>radial-gradient()</code>函数中的第一个参数进行设置，不设置时默认为<code>50% 50%</code>（即区域中心位置），设置语法如下：</p>
<blockquote>
<p>radial-gradient(<strong>at x y</strong>, …);</p>
</blockquote>
<p>如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(at <span class="number">20%</span> <span class="number">100px</span>, red, blue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135252.png?imageslim" alt="20200130135252" /></p>
<h3 id="结束形状ending-shape"><a class="markdownIt-Anchor" href="#结束形状ending-shape"></a> 结束形状（ending shape）</h3>
<p>中心点的作用是作为渐变方向的起点，而结束形状的作用则是作为渐变方向的终点；而结束形状要用两个属性才能最终确定：</p>
<ul>
<li>
<p><strong>形状类型</strong>：形状类型目前只有圆（<code>circle</code>）和椭圆（<code>ellipse</code>），默认形状为<code>ellipse</code>。</p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo1</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(circle at <span class="number">20%</span> <span class="number">80px</span>, red, blue);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.demo2</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(ellipse at <span class="number">20%</span> <span class="number">80px</span>, red, blue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135312.png?imageslim" alt="20200130135312" /></p>
<p>可以看到两种不同的形状的渐变效果也不一样。</p>
</li>
<li>
<p><strong>半径</strong>：而半径的设置并不是直接指定两个半径来确定，而是由内置关键字来自动确定：</p>
<ul>
<li><code>closest-side</code>：最近一侧，顾名思义就是按照中心点距离区域横向和纵向<strong>最近的一侧</strong>来分别计算横向和纵向的半径。当形状类型为<code>circle</code>时，半径取横向半径和纵向半径中<strong>较小</strong>的那个。</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(circle closest-side at <span class="number">20%</span> <span class="number">80px</span>, red, blue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135329.png?imageslim" alt="20200130135329" /></p>
<ul>
<li>
<p><code>farthest-side</code>：最远一侧，同理就是按照中心点距离区域横向和纵向<strong>最远的一侧</strong>来分别计算横向和纵向的半径。</p>
</li>
<li>
<p><code>closest-corner</code>：最近一角；形状必须经过区域中离中心点最近的那个角的位置。</p>
</li>
<li>
<p><code>farthest-corner</code>：最远一角（默认值）；形状必须经过区域中离中心点最远的那个角的位置。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo1</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(ellipse closest-side at <span class="number">20%</span> <span class="number">80px</span>, red, blue);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.demo2</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(ellipse farthest-side at <span class="number">20%</span> <span class="number">80px</span>, red, blue);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.demo3</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(ellipse closest-corner at <span class="number">20%</span> <span class="number">80px</span>, red, blue);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.demo4</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">radial-gradient</span>(ellipse farthest-corner at <span class="number">20%</span> <span class="number">80px</span>, red, blue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135345.png?imageslim" alt="20200130135345" /></p>
<p>上图可以很明显的看出这四种方法计算半径的区别；</p>
</li>
</ul>
</li>
</ul>
<h2 id="圆锥渐变"><a class="markdownIt-Anchor" href="#圆锥渐变"></a> 圆锥渐变</h2>
<h3 id="原理-3"><a class="markdownIt-Anchor" href="#原理-3"></a> 原理</h3>
<p>圆锥渐变的原理比较简单，就是指定一个<strong>中心点</strong>，然后区域内所有的点按照所在的<strong>角度</strong>（以<code>y</code>轴向上为<code>0</code>度）进行渐变的计算，而渐变点的位置也只能按照角度的范围进行指定，因此渐变方向就是弧度方向（顺时针）。</p>
<h3 id="中心点-2"><a class="markdownIt-Anchor" href="#中心点-2"></a> 中心点</h3>
<p><code>conic-gradient()</code>中心点的语法设置与径向渐变的语法一样，通过<code>at</code>关键字进行设置，不过要注意的是<code>at</code>的设置要放在第一个参数的<strong>最后</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">background: conic-gradient(from 40deg at 20px 50%, red, blue); // 正确的写法</span><br><span class="line">background: conic-gradient(at 20px 50% from 40deg, red, blue); // 错误的写法</span><br></pre></td></tr></table></figure>
<h3 id="起点"><a class="markdownIt-Anchor" href="#起点"></a> 起点</h3>
<p>圆锥渐变的起点跟其他渐变不一样，圆锥渐变的起点实际上只是指定从某个弧度开始（相当于指定<code>0deg</code>的轴）；不设置起点，默认就是<code>0deg</code>；通过<code>from</code>关键字来指定：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">conic-gradient</span>(from <span class="number">40deg</span> at <span class="number">20px</span> <span class="number">50%</span>, red, blue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135418.png?imageslim" alt="20200130135418" /></p>
<p>需要注意的是起点的单位只能是<code>deg</code>或<code>turn</code>，<strong>不能</strong>使用百分比（<code>%</code>）的语法！</p>
<h3 id="渐变点-2"><a class="markdownIt-Anchor" href="#渐变点-2"></a> 渐变点</h3>
<p>渐变点的单位跟起点类似，不过支持百分比的单位，百分比相对的是从<strong>起点弧度开始然后顺时针</strong>计算（每<code>100%</code> = <code>360deg</code>，因此可以实测可以超出<code>100%</code>）。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo1</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">conic-gradient</span>(from <span class="number">20deg</span> at <span class="number">20px</span> <span class="number">50%</span>, red <span class="number">20%</span>, blue <span class="number">0.4turn</span>, orange <span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200130135440.png?imageslim" alt="20200130135440" /></p>
<h2 id="重复渐变"><a class="markdownIt-Anchor" href="#重复渐变"></a> 重复渐变</h2>
<p>重复渐变的精髓就是：渐变的定义的部分<strong>并没有占渐变线或者渐变范围的全部</strong>，因此由这一部分<strong>定义好的渐变去重复的填充剩余的未定义部分</strong>。</p>
<p>很明显，重复渐变对应前面的渐变也就有三种；</p>
<h3 id="重复线性渐变"><a class="markdownIt-Anchor" href="#重复线性渐变"></a> 重复线性渐变</h3>
<p><code>repeating-linear-gradient()</code></p>
<h3 id="重复径向渐变"><a class="markdownIt-Anchor" href="#重复径向渐变"></a> 重复径向渐变</h3>
<p><code>repeating-radial-gradient()</code></p>
<h3 id="重复圆锥渐变"><a class="markdownIt-Anchor" href="#重复圆锥渐变"></a> 重复圆锥渐变</h3>
<p><code>repeating-conic-gradient()</code></p>
<h2 id="相关扩展"><a class="markdownIt-Anchor" href="#相关扩展"></a> 相关扩展</h2>
<h3 id="关于渐变背景的动画或渐变效果"><a class="markdownIt-Anchor" href="#关于渐变背景的动画或渐变效果"></a> 关于渐变背景的动画或渐变效果</h3>
<p>由于<code>background-image</code>属性本身就<strong>不</strong>被<code>animation</code>和<code>transition</code>所支持，因此没法<strong>直接</strong>使用<code>animation</code>和<code>transition</code>来进行渐变背景的动画效果，但是可以利用其它一些可以进行动画或过渡的属性来间接地进行渐变背景的动画效果，这个可以参考一下张鑫旭的文章：<a href="https://www.zhangxinxu.com/wordpress/2018/03/background-gradient-transtion/">几种CSS渐变背景图片transtion动画方法 « 张鑫旭-鑫空间-鑫生活</a>。</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Using_CSS_gradients">使用 CSS 渐变 - Web 开发者指南 | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/linear-gradient">linear-gradient - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/repeating-linear-gradient">repeating-linear-gradient - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/radial-gradient">radial-gradient() - CSS: Cascading Style Sheets | MDN</a></li>
</ol>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient">linear-gradient() - CSS: Cascading Style Sheets | MDN</a> <a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>动效</tag>
      </tags>
  </entry>
  <entry>
    <title>css的尺寸盒子及相关属性</title>
    <url>/post/css-sizing-box/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>尺寸盒子（呃，我也不知道准确定义是什么），顾名思义就是<font color=#39f><strong>尺寸属性</strong></font>作用的对象。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/181124/k8EBBCJl0G.png?imageslim" alt="mark" /></p>
<p>从上图可以看出，尺寸盒子从内到外依次可以划分为<code>content-box</code>，<code>padding-box</code>，<code>border-box</code>，<code>margin-box</code>；其中<code>margin-box</code>在实际中没有啥用途。</p>
<p>而<font color=#39f><strong>尺寸属性</strong></font>就是诸如<code>width</code>，<code>height</code>等<strong>直接规定元素尺寸</strong>的属性，以及定义<code>width</code>，<code>height</code><font color=red><strong>作用区域</strong></font>的<code>box-sizing</code>属性，除此之外还有像<code>background-origin</code>和<code>background-clip</code><font color=red><strong>影响元素背景填充区域和显示区域</strong></font>的属性。</p>
<span id="more"></span>
<h2 id="box-sizing"><a class="markdownIt-Anchor" href="#box-sizing"></a> box-sizing</h2>
<p><code>box-sizing</code>实际上决定了<code>width</code>和<code>height</code>作用的尺寸盒子，而其属性值有：</p>
<ul>
<li>
<p><code>content-box</code>（默认值）：没错，指的就是<code>width</code>和<code>height</code>设置的值是针对于<code>content-box</code>这个盒子，即<code>content</code>区域；</p>
</li>
<li>
<p><code>border-box</code>：同理，此时<code>width</code>和<code>height</code>设置的值是针对于<code>border-box</code>这个盒子，即<code>border</code>区域（=<code>content</code> + <code>padding</code> + <code>border</code>）；</p>
</li>
<li>
<p><code>inherit</code>：继承父级属性值；</p>
</li>
</ul>
<p><code>css</code>说的<strong>盒模型</strong>实际上就是指的<code>box-sizing</code>的属性值，而一般都说不同的盒模型的元素实际宽高有不同的计算方式，不过明白<code>box-sizing</code>的<strong>本质</strong>之后，就能理解元素的实际宽高<font color=red><strong>只有一种计算方式</strong></font>：<code>content</code> + <code>padding</code> + <code>border</code>；</p>
<p>举个栗子：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid darkorchid;</span><br><span class="line">    <span class="attribute">background-color</span>: lightcoral;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box2</span>&#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/181124/k28IC2bdK1.png?imageslim" alt="mark" /></p>
<p>尽管两个<code>div</code>的<strong>尺寸样式设置完全一样</strong>，但是可以看出不同的<code>box-sizing</code>确实得到的实际尺寸完全不一样：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/181124/JjFA1BjJBG.png?imageslim" alt="mark" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/181124/jFgGj23h2F.png?imageslim" alt="mark" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/181124/fe41K2BldC.png?imageslim" alt="mark" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/181124/eife9eElK8.png?imageslim" alt="mark" /></p>
<p>根本原因就是不同的<code>box-sizing</code>使得<code>width</code>和<code>height</code>属性<strong>作用的尺寸盒子不同</strong>，然而元素的<font color=#39f><strong>实际尺寸计算方式是完全没有变</strong></font>滴……</p>
<h2 id="background-origin"><a class="markdownIt-Anchor" href="#background-origin"></a> background-origin</h2>
<p><code>background-origin</code>规定了指定<font color=red><strong>背景图片</strong></font>（<code>background-image</code>属性，<font color=red><strong>对普通的背景颜色区域不起作用</strong></font>，背景颜色区域一直是<font color=#39f><code>border-box</code></font>） 的<font color=red><strong>原点位置</strong></font>（<code>background-position</code>属性）相对区域。</p>
<blockquote>
<p><strong>注意</strong>：当使用 background-attachment 为fixed时，该属性将被忽略不起作用。——MDN</p>
</blockquote>
<p><code>background-origin</code>的属性值有：</p>
<ul>
<li><code>content-box</code></li>
<li><code>padding-box</code>（默认值）</li>
<li><code>border-box</code></li>
<li><code>inherit</code>（继承父级元素属性值）</li>
</ul>
<p>没错，这几个属性值分别对应上述的几个尺寸盒子所在区域；</p>
<h2 id="background-clip"><a class="markdownIt-Anchor" href="#background-clip"></a> background-clip</h2>
<p><code>background-clip</code>属性规定了背景（包括<code>background-color</code>和<code>background-image</code>）的实际显示区域；相当于通过<code>background-origin</code>、<code>background-position</code>和<code>background-repeat</code>等属性<strong>绘制出背景或背景图</strong>，然后通过<code>background-clip</code>来<font color=red><strong>选取一个区域作为最终显示的区域</strong></font>。</p>
<p><code>background-clip</code>的属性值有：</p>
<ul>
<li><code>content-box</code></li>
<li><code>padding-box</code></li>
<li><code>border-box</code>（默认值）</li>
<li><code>text</code>（兼容性不好）</li>
</ul>
<h2 id="栗子"><a class="markdownIt-Anchor" href="#栗子"></a> 栗子</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;b1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;b2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;b3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">452px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">452px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="built_in">rgba</span>(<span class="number">70</span>, <span class="number">152</span>, <span class="number">199</span>, <span class="number">0.6</span>);</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;lena.png&#x27;</span>);</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-clip</span>: padding-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#b2</span>&#123;</span><br><span class="line">    <span class="attribute">background-origin</span>: content-box;</span><br><span class="line">    <span class="attribute">background-clip</span>: content-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#b3</span>&#123;</span><br><span class="line">    <span class="attribute">background-origin</span>: border-box;</span><br><span class="line">    <span class="attribute">background-clip</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/181124/KFhBmkB0e7.png?imageslim" alt="mark" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/181124/9e8fiHBg4C.png?imageslim" alt="mark" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/181124/F9Gh3J2DDF.png?imageslim" alt="mark" /></p>
<p><font color=red><strong>注</strong></font>：<code>background-image</code>的绘制区域是从<code>background-position</code>到<code>border-box</code>的右下角？而非<code>background-origin</code>指定的区域的右下角？<strong>比如</strong>：当<code>background-origin</code>为<code>content-box</code>，而<code>background-clip</code>为<code>border-box</code>时：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/181124/mmCB56CfFe.png?imageslim" alt="mark" /></p>
<p>可以很明显看出，<code>background-image</code>的绘制区域的右下角并非<code>content-box</code>；</p>
<h2 id="关于margin-box"><a class="markdownIt-Anchor" href="#关于margin-box"></a> 关于margin-box</h2>
<p><font color=red><strong>注</strong></font>：这部分仅是自己的理解，还需要进一步验证。</p>
<h3 id="marginauto-的作用机制"><a class="markdownIt-Anchor" href="#marginauto-的作用机制"></a> margin:auto 的作用机制</h3>
<p><code>margin:auto</code>是用来给元素<font color=red><strong>自动计算分配</strong></font>『剩余可分配空间』的<code>margin</code>的，但是触发这个功能有一个前提条件：</p>
<blockquote>
<p>触发 margin:auto 计算有一个前提条件，就是 width 或 height 为 auto 时，<br />
元素是具有对应方向的自动填充特性的。——《css世界》</p>
</blockquote>
<p>除了块级元素的流动性能够使元素在<strong>文档流的方向</strong>（文字排列方向）进行自动填充外，还有一种方法就是利用<code>top</code>等属性设置<code>margin-box</code>的边界，元素就会自动填充<code>margin-box</code>。</p>
<blockquote>
<p>margin:auto 的填充规则如下。<br><br />
（1）如果一侧定值，一侧 auto，则 auto 为剩余空间大小。<br><br />
（2）如果两侧均是 auto，则平分剩余空间。<br><br><br />
——《css世界》</p>
</blockquote>
<h3 id="top-bottom-left-right"><a class="markdownIt-Anchor" href="#top-bottom-left-right"></a> top, bottom, left, right</h3>
<p>当利用<code>top, bottom, left, right</code>这几个属性（当然前提是<code>absolute</code>或<code>fixed</code>布局）配合<code>margin:auto;</code>进行使用时，<code>top, bottom, left, right</code>的属性值相当于设定了该元素的<code>margin-box</code>的边界。此时，若<code>width</code>和<code>height</code>为<code>auto</code>时，就会自动填充整个<code>margin-box</code>；如果<code>width</code>和<code>height</code>设定了固定值，且固定值小于<code>margin-box</code>，那么『剩余可分配空间』就会被<code>margin</code>自动计算分配（上下左右四个边界）。</p>
<p>最常用的就是利用<code>margin:auto</code>和<code>top, bottom, left, right</code>来使元素水平垂直居中：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#test</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> dashed darkblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#39f</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20181202165205.png?imageslim" alt="mark" /></p>
<p>可以看出当<code>top, bottom, left, right</code>的值全为<code>0</code>时，相当于<code>margin-box</code>就是父级容器的大小，因此设置<code>margin:auto</code>时会自动计算<strong>剩余可分配空间</strong>（上下左右四个方向），由于四个方向都是<code>auto</code>，因此上下和左右<strong>各自平分</strong>竖直和水平方向的<strong>剩余可分配空间</strong>作为<code>margin</code>，因此也就形成了水平垂直居中。</p>
<p>不过在查看<code>firefox</code>（<code>chrome</code>也一样）的计算后规则时，貌似四个方向的<code>margin</code>值都为<code>0</code>，而<code>left</code>等值反而进行了计算：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20181202165614.png?imageslim" alt="mark" /></p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li>《css世界》—— 3.2 <code>width/height</code>作用的具体细节</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-clip">background-clip - CSS：层叠样式表 | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-origin">background-origin - CSS：层叠样式表 | MDN</a></li>
<li>《css世界》—— 4.3.4 深入理解 CSS 中的<code>margin:auto</code></li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>shape-outside属性及其应用</title>
    <url>/post/css-shape-outside/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>shape-outside</code>这个属性实在是太冷门了，要不是去研究<code>&lt;basic-shape&gt;</code>数据类型，还真不会发现这个属性；但是其兼容性也还算可以，<code>PC</code>端完全没问题，移动端<code>iOS</code>是支持比较好的，而安卓端则不太支持：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232052.png?imageslim" alt="img" /></p>
<p><code>shape-outside</code>是<code>CSS Shapes Module Level 1</code>规范中提出的一个属性，用于<font color=#f00>设置浮动元素周围内联元素对其包裹的形状</font>，也就是说借助<code>shape-outside</code>属性可以使得浮动元素周围的文字不再是围绕盒模型进行环绕，而是可以指定任意形状进行环绕，达到更丰富的文字环绕效果；比如：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232104.png?imageslim" alt="img" /></p>
<span id="more"></span>
<h2 id="shape-outside及相关属性"><a class="markdownIt-Anchor" href="#shape-outside及相关属性"></a> shape-outside及相关属性</h2>
<p><code>CSS Shapes Module Level 1</code>规范中不止设计了<code>shape-outside</code>一个属性，还有配合该属性一起搭配使用的属性：<code>shape-image-threshold</code>和<code>shape-margin</code>；</p>
<h3 id="shape-outside"><a class="markdownIt-Anchor" href="#shape-outside"></a> shape-outside</h3>
<p><code>shape-outside</code>属性的作用不再多说，语法如下：</p>
<blockquote>
<p>none | [ &lt;basic-shape&gt; || &lt;shape-box&gt; ] | &lt;image&gt;<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<ul>
<li>
<p><code>none</code>：默认值，即默认的浮动区域（<code>Float area</code>），默认的浮动区域就是<code>margin-box</code>；</p>
</li>
<li>
<p><code>&lt;basic-shape&gt;</code>：基本形状类型；</p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> shape &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">circle</span>();</span><br><span class="line">    <span class="attribute">shape-outside</span>: <span class="built_in">circle</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">25%</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">ellipse</span>(<span class="number">50%</span> <span class="number">30px</span>);</span><br><span class="line">    <span class="attribute">shape-outside</span>: <span class="built_in">ellipse</span>(<span class="number">50%</span> <span class="number">30px</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">inset</span>(<span class="number">30px</span> <span class="number">20px</span> round <span class="number">15px</span>);</span><br><span class="line">    <span class="attribute">shape-outside</span>: <span class="built_in">inset</span>(<span class="number">30px</span> <span class="number">20px</span> round <span class="number">15px</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">75%</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">polygon</span>(<span class="number">50%</span> <span class="number">0%</span>, <span class="number">100%</span> <span class="number">100%</span>, <span class="number">0%</span> <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">shape-outside</span>: <span class="built_in">polygon</span>(<span class="number">50%</span> <span class="number">0%</span>, <span class="number">100%</span> <span class="number">100%</span>, <span class="number">0%</span> <span class="number">100%</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">polygon</span>(<span class="number">50%</span> <span class="number">100%</span>, <span class="number">0%</span> <span class="number">0%</span>, <span class="number">100%</span> <span class="number">0%</span>);</span><br><span class="line">    <span class="attribute">shape-outside</span>: <span class="built_in">polygon</span>(<span class="number">50%</span> <span class="number">100%</span>, <span class="number">0%</span> <span class="number">0%</span>, <span class="number">100%</span> <span class="number">0%</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: coral;</span><br><span class="line">  <span class="attribute">animation</span>: shape <span class="number">5s</span> linear alternate infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232114.gif?imageslim" alt="img" /></p>
<p>上面这个动画就是展示了各种基本形状应用于<code>shape-outside</code>上的效果；</p>
<p>但是需要注意的是，<code>&lt;basic-shape&gt;</code>数据类型有一个参考盒模型的概念，对于<code>shape-outside</code>属性而言，<font color=#39f>默认的参考盒模型是<code>margin-box</code></font>，但是可以在属性中<font color=#f00>同时使用<code>&lt;shape-box&gt;</code>来指定一个参考盒模型</font>！如：</p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">    <span class="attribute">shape-outside</span>: content-box <span class="built_in">circle</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样就把<code>shape-outside</code>属性的参考盒模型指定为<code>content-box</code>了！</p>
</li>
<li>
<p><code>&lt;shape-box&gt;</code>：盒模型类型，包含<code>margin-box</code>、<code>border-box</code>、<code>padding-box</code>和<code>content-box</code>；</p>
</li>
<li>
<p><code>&lt;image&gt;</code>：图像类型，包括<code>url()</code>函数引入的图像和渐变色；图像作为形状时，是<font color=#39f>根据图像的<code>alpha</code>通道（即透明通道）来作为形状的边界</font>的，具体的通道阈值要取决于<code>shape-image-threshold</code>属性的值；</p>
</li>
</ul>
<h3 id="shape-margin"><a class="markdownIt-Anchor" href="#shape-margin"></a> shape-margin</h3>
<p>这个属性的作用很简单，就是沿着<code>shape-outside</code>属性生成形状再向外扩展相应的距离，不过<font color=#f00>扩展后的形状不能超过参考盒模型的区域</font>！</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">shape-margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: coral;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">circle</span>();</span><br><span class="line">    <span class="attribute">shape-outside</span>: content-box <span class="built_in">circle</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232131.png?imageslim" alt="img" /></p>
<p>上面这个例子可以看到，尽管<code>shape-margin</code>讲形状向外扩展了<code>10px</code>，但是超出<code>content-box</code>区域外的部分并不视为浮动区域；</p>
<p>那么有没有办法使得浮动区域整体向外扩展相同的距离呢？就像<code>margin</code>属性的效果那样？答案是有，就是将<code>margin-box</code>设置为参考盒模型，然后使用<code>margin</code>属性即可！</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: coral;</span><br><span class="line">    <span class="attribute">clip-path</span>: <span class="built_in">circle</span>();</span><br><span class="line">    <span class="attribute">shape-outside</span>: <span class="built_in">circle</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232141.png?imageslim" alt="img" /></p>
<p>因为参考盒模型为<code>margin-box</code>，所以设置<code>margin</code>属性可以扩大<code>margin-box</code>的大小，因此浮动区域也相应地扩大了，也就达到了类似一般盒模型中<code>margin</code>的效果；</p>
<h3 id="shape-image-threshold"><a class="markdownIt-Anchor" href="#shape-image-threshold"></a> shape-image-threshold</h3>
<p>这个属性是专门用来设置图片形状提取时<strong>透明通道的阈值</strong>，范围为<code>0 ~ 1</code>，默认值为<code>0</code>；阈值为<code>n</code>代表图片中透明通道值<font color=#39f>大于<code>n</code>的区域都是浮动区域</font>。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attr">--img</span>: <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, <span class="built_in">rgba</span>(<span class="number">220</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>), <span class="built_in">rgba</span>(<span class="number">200</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--img);</span><br><span class="line">  <span class="attribute">shape-outside</span>: <span class="built_in">var</span>(--img);</span><br><span class="line">  <span class="attribute">shape-image-threshold</span>: <span class="number">0.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232150.png?imageslim" alt="img" /></p>
<p>由于将阈值设置成了<code>0.5</code>，根据上面渐变色的特点可知，透明度为<code>0.5</code>的分界线刚好在左上-右下对角线上，上面这个例子也能看出；不仅如此，<code>chrome</code>浏览器还会贴心地把浮动区域给标记出来：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232202.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232212.gif?imageslim" alt="img" /></p>
<p>上面这个动图就是阈值从<code>0</code>到<code>1</code>递增的过程，可以看到阈值也是能插值的；</p>
<h2 id="相关应用"><a class="markdownIt-Anchor" href="#相关应用"></a> 相关应用</h2>
<p>上述属性的意图本来就很明显，就是设置不规则的浮动区域，到达更丰富更自然的图文混合效果；所以常用来配合带透明通道的图片进行更贴近图案的图文混合效果。</p>
<h3 id="透明通道图片图文混合"><a class="markdownIt-Anchor" href="#透明通道图片图文混合"></a> 透明通道图片图文混合</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232244.png?imageslim" alt="img" /></p>
<p>上面这个苹果<code>Logo</code>就是带透明通道的，可以看到文字与图片中的图案有更好的贴近效果；</p>
<p>这种效果很适合用来对图片进行讲述的排版，有点类似科普书中那种图文讲解排版，比如这个<a href="https://codepen.io/dudleystorey/pen/FvJDB">作品</a>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232302.png?imageslim" alt="img" /></p>
<h3 id="异形文字排列区域"><a class="markdownIt-Anchor" href="#异形文字排列区域"></a> 异形文字排列区域</h3>
<p>利用各种浮动区域的拼接或者组合，可以将文字包围在一个任意形状中，看起来会有很震撼的效果，比如下面这个<a href="https://codepen.io/KristopherVanSant/full/yEKNVR">作品</a>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232320.png?imageslim" alt="img" /></p>
<p>通过左右两个多边形浮动区域，将文字挤在在一个心形的区域中，很有创意；<a href="https://codepen.io/yuanchuan">袁川大佬</a>也有一个类似的<a href="https://codepen.io/yuanchuan/full/xoKMKj">作品</a>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232337.png?imageslim" alt="img" /></p>
<p>可以看到这个作品整体呈现脸的轮廓，而那些符号都是随机生成的文字，右侧是有一个由多边形绘制而成的脸轮廓形状的浮动区域，所以左侧的文字贴近右侧浮动区域时就形成了脸的轮廓；当然，这个作品的亮点还不只有<code>shape-outside</code>，这里面还用到了滤镜来组合调制颜色，以及文字渐隐处理所用到的<code>mask</code>，还有随机生成文字用到的<code>CSS</code>变量等等；</p>
<h3 id="更复杂的文字排版"><a class="markdownIt-Anchor" href="#更复杂的文字排版"></a> 更复杂的文字排版</h3>
<p>虽说shape-outside属性的初衷是为了不规则形状的浮动，但是也可以用来进行更加复杂和不规则的文字排版，比如有个大神就用<a href="https://adrianroselli.com/2018/12/a-css-venn-diagram.html">CSS grid布局 + shape-outside</a>实现了维恩图文字排版：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200823232347.png?imageslim" alt="img" /></p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://www.zhangxinxu.com/wordpress/2019/02/css-css3-shapes/">写给自己看的CSS shapes布局教程 «  张鑫旭-鑫空间-鑫生活</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://drafts.csswg.org/css-shapes/#shape-outside-property">https://drafts.csswg.org/css-shapes/#shape-outside-property</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>transform应用场景的探索</title>
    <url>/post/css-transform-apply/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>transform</code>属性是<code>CSS</code>基于图形学中<font color=#39f>矩阵变换和投影变换</font>实现的产物，因此理论上基于矩阵变换和投影变换的视角效果都可以使用<code>transform</code>实现；诸如<code>canvas/webGL</code>中常见的立体/3D效果，物理运动效果等等，都可以等价转化为<code>transform</code>中的变换函数，只不过<code>CSS</code>的控制粒度目前<font color=#f00>只能局限于关键帧</font>，无法对动效进行每一帧的控制（那种通过<code>js</code>来修改<code>css</code>的方式也算不上是控制每一帧，倒是目前还在实现中的<code>CSS Houdini</code>规范可以做到）；</p>
<p>下面只是一些简单的初步探索，后续可能会发现更多有趣的应用。</p>
<span id="more"></span>
<h2 id="立体hover效果"><a class="markdownIt-Anchor" href="#立体hover效果"></a> 立体hover效果</h2>
<p>实现逼真的立体效果，肯定需要开启透视投影；而透视投影可以对某个元素单独设置，也可以对容器元素进行设置；</p>
<ul>
<li><strong>单个元素</strong>：单个元素可以直接使用<code>perspective()</code>这个<code>transform-function</code>，这样当前元素就会具有透视投影效果，而不需要依赖其容器元素；</li>
<li><strong>容器元素</strong>：容器元素则可以直接通过<font color=#f00><code>perspective</code>属性</font>进行设置，这样就相当于创建了一个独立的相机空间，也就是其子元素默认具有相同的投影设置（前提是容器元素的<code>transform-style``为preserve-3d</code>）；这种方式再配合<code>z</code>坐标（即<code>translateZ</code>或者能够改变<code>z</code>坐标的变换），就能很方便地对整个容器内元素进行立体效果模拟；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816165718.gif?imageslim" alt="img" /></p>
<p><code>Demo</code>地址：<a href="https://codepen.io/xxf1996/pen/XWdJvNv">3D transform button hover effect</a></p>
<h2 id="模拟物理运动"><a class="markdownIt-Anchor" href="#模拟物理运动"></a> 模拟物理运动</h2>
<h3 id="弹性形变"><a class="markdownIt-Anchor" href="#弹性形变"></a> 弹性形变</h3>
<p>在真实世界中，物体的运动或者冲击通常会产生形变，如果在类似的运动动画中加上模拟形变的效果，就会显得更加的真实；同样地，<code>transform</code>也可以模拟这些运动形变，<font color=#39f>模拟的诀窍就是观察这些运动形变的关键帧特点，以及形变和速度变化/大小之间的关系</font>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816165740.gif?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816165801.gif?imageslim" alt="img" /></p>
<p>上述这些形变都是<strong>弹性形变</strong>，属于比较简单和直观的，<font color=#39f>通常是在一个或两个方向上不停地震荡</font>，然后趋于稳定，因此模拟起来比较简单；下面是<code>Demo</code>地址：</p>
<ul>
<li><a href="https://codepen.io/xxf1996/full/WNwvGRy">CodePen - css transform animation: physical movement</a></li>
<li><a href="https://codepen.io/xxf1996/full/VwaLygW">CodePen - css transform animation: physical movement 2</a></li>
</ul>
<h3 id="刚体碰撞"><a class="markdownIt-Anchor" href="#刚体碰撞"></a> 刚体碰撞</h3>
<p>如果是要模拟诸如<font color=#f00>刚体碰撞</font>这样的效果，那就会有点棘手，因为其中除了会有物体变换，还会有变换中心（<code>transform-origin</code>）的改变，这样就<font color=#39f>需要观察关键帧在对应时间点应该使用哪个位置作为变换中心</font>了；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816165817.gif?imageslim" alt="img" /></p>
<p><code>Demo</code>地址：<a href="https://codepen.io/xxf1996/full/poyJOwQ">CodePen - css transform animation: rigid body motion</a></p>
<blockquote>
<p>注：刚体碰撞是刚体运动的一种，所谓的<font color=#39f>刚体运动简单地来说就是只有旋转和平移变换</font>，即不发生形变；</p>
</blockquote>
<h2 id="视差滚动h5"><a class="markdownIt-Anchor" href="#视差滚动h5"></a> 视差滚动H5</h2>
<p>所谓的视差滚动简单的可以理解为：视觉层面上有不同景深（即<code>z</code>坐标）的平面，<font color=#39f>当滚动时不同景深之间的移动速度有差异</font>，这种差异就会形成视差；</p>
<p>利用<code>transform</code>的透视投影确实可以做到简单的视差滚动效果，但考虑到很多视差效果的H5交互作品通常具有很多场景元素，这时纯靠CSS那显然是吃力的，所以借助成熟的<code>3D</code>渲染框架来实现比较好，比如：<code>PIXI</code>，这类框架一般是基于图形学和游戏制作的框架概念实现的，因此更适合制作较更多元素更复杂的动画/交互展示；</p>
<p>这里有两个优秀的应用视差效果的<code>H5</code>可以推荐一下：</p>
<ul>
<li><a href="http://go.163.com/2017/1231/taidu/">态度日历 让每一天更有趣</a></li>
<li><a href="https://www.jiandoukeji.com/h5/2018/ala/project/jiandou/life/index.html">别不相信，你是一颗星星</a></li>
</ul>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://codepen.io/yuhomyan/pen/OJMejWJ">Candy Color Button Animation</a>：很棒的按钮hover效果</li>
<li><a href="https://codepen.io/alphardex/pen/WNNVJeZ">Rotating Text</a></li>
<li><a href="https://blog.prototypr.io/this-aint-disney-a-practical-guide-to-css-transitions-and-animations-a8b87e7c5531">https://blog.prototypr.io/this-aint-disney-a-practical-guide-to-css-transitions-and-animations-a8b87e7c5531</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/28239508">Android 中基于物理特性的动画简介 - 知乎</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%BD%A2%E8%AE%8A">https://zh.wikipedia.org/wiki/形變</a></li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>计算机图形</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>transform相关H5案例</title>
    <url>/post/css-transform-h5/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>现在<code>H5</code>中应用了大量的<code>CSS</code>动效，而这些动效很多都与<code>transform</code>属性相关（没办法，<code>transform</code>就是天生适合产生动效的），借助和分析比较典型的<code>H5</code>案例可以更好地应用<code>transform</code>属性；</p>
<span id="more"></span>
<h2 id="恕我直言一看就不是什么正经猫网易"><a class="markdownIt-Anchor" href="#恕我直言一看就不是什么正经猫网易"></a> 恕我直言，一看就不是什么正经猫【网易】</h2>
<ul>
<li><strong>活动地址</strong>：<a href="http://gongyi.163.com/special/meowkingdom/">http://gongyi.163.com/special/meowkingdom/</a></li>
<li><strong>活动类型</strong>：创意<code>H5</code>游戏</li>
<li><strong>简介</strong>：这个活动的主体就是一个<strong>模拟俄罗斯方块</strong>的游戏，只不过把方块的形状用相应的不正经的猫姿势进行了替换；游戏使用的是<code>PIXI</code>库进行搭建的，其余状态都是都是普通的<code>H5</code>元素，有比较多的动画，动画基本上都是图片拆解，然后部分使用<code>transform</code>进行动态变化；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171610.png?imageslim" alt="img" /></p>
<p>上面这个是游戏部分，跟<code>transform</code>相关的部分是其他地方；</p>
<h3 id="动画拆解"><a class="markdownIt-Anchor" href="#动画拆解"></a> 动画拆解</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171625.gif?imageslim" alt="img" /></p>
<p>从上图可以看出，游戏前画面是有多处<code>css</code>动画的，而这些动画大多和<code>transform</code>有关：</p>
<ul>
<li>
<p>中心旋转：即变换中心为默认的<code>center center</code>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171641.gif?imageslim" alt="img" /></p>
</li>
<li>
<p>边缘旋转：此处变换中心是图片的右边缘中心，即<code>right center</code>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171650.gif?imageslim" alt="img" /></p>
</li>
<li>
<p>缩放 + <code>opacity</code>：放大 + 不透明度变低；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171658.gif?imageslim" alt="img" /></p>
</li>
<li>
<p>帧图片播放动画：这个马赛克动画实际上就是只有两帧的动画图片，然后循环播放；这个抖动本来还以为也是<code>transform</code>模拟出来的，但看源码实际上就是一个四帧的动画图片进行的播放，毕竟仔细看这个动画有扭曲变化，这个<code>transform</code>目前真的无能无力……</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171710.gif?imageslim" alt="img" /><br />
<img src="https://pic.xiexuefeng.cc/markdown/20200816171728.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171737.gif?imageslim" alt="img" /><br />
<img src="https://pic.xiexuefeng.cc/markdown/20200816171749.png?imageslim" alt="img" /></p>
</li>
<li>
<p><code>backgroud-position</code>：这个地方看似有点像缩放，但实际上就是图片在<code>y</code>方向变化而已；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171802.gif?imageslim" alt="img" /></p>
</li>
</ul>
<h2 id="2014腾讯互动娱乐年度发布会邀请函"><a class="markdownIt-Anchor" href="#2014腾讯互动娱乐年度发布会邀请函"></a> 2014腾讯互动娱乐年度发布会邀请函</h2>
<ul>
<li><strong>活动地址</strong>：<a href="http://up.qq.com/2014/invitation/main.html">http://up.qq.com/2014/invitation/main.html</a></li>
<li><strong>活动类型</strong>：单屏滑动页面</li>
<li><strong>简介</strong>：这是一个典型的单屏滑动活动页，基本上就是滑动切换上下屏，每屏有不同的内容；主要关注点就是切换上下屏之间的过渡动画效果，以及每屏出现时小物件的活动轨迹和动画；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171816.gif?imageslim" alt="img" /></p>
<p>从上面看出，这里面确实有大量的<code>CSS</code>动画，而且很多都是和<code>transform</code>相关的，所以还是重点关注一下比较有趣的地方；</p>
<h3 id="值得注意的地方"><a class="markdownIt-Anchor" href="#值得注意的地方"></a> 值得注意的地方</h3>
<blockquote>
<p>注：下面的gif图所展现的不一定是原速，因为可能是通过chrome浏览器自带的animation面板进行手动录制的；</p>
</blockquote>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171906.gif?imageslim" alt="img" /></p>
<p>关注游戏机这个图标的动画，可以明显的看出这个动画是组合动画，分为几个阶段：</p>
<ul>
<li>
<p>中心旋转 + 放大 + <code>opacity</code>变大</p>
</li>
<li>
<p>旋转 + 平移：这个阶段动画看起来像是沿着边缘进行旋转，但实际上看源码是<font color=#39f>边平移边旋转</font>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171925.png?imageslim" alt="img" /></p>
</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171935.gif?imageslim" alt="img" /></p>
<p>这个地方实际上是<font color=#39f>一组元素形成的扩散动画</font>，每个元素本身的动画都是一致的，就是平移 + 旋转 + 不透明度变化，只是每个元素平移的方向不同，形成了扩散效果；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816171951.gif?imageslim" alt="img" /></p>
<p>这个地方的三角形运动轨迹形似<code>S</code>，实际上动画就是利用<font color=#39f>连续两次的平移 + 旋转</font>，然后<strong>旋转方向有所不同</strong>，形成连续且丝滑的运动轨迹；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816172001.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816172010.gif?imageslim" alt="img" /></p>
<p>这段开门的动画主要是利用透视投影，然后再进行绕<code>Y</code>轴向后旋转，形成立体的真实感；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200816172021.png?imageslim" alt="img" /></p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://www.zhihu.com/question/33489738">有什么好的微信H5活动案例？ - 知乎</a></li>
<li><a href="http://www.faceh5.com/case?page=list">H5列表</a>：<code>H5</code>案例网站</li>
<li><a href="https://www.h5anli.com/">H5案例分享 - 创意H5案例，一搜即得</a>：<code>H5</code>案例网站</li>
<li><a href="https://www.uisdc.com/h5-play-way">H5玩法知多少？腾讯超多实战案例让你大开眼界！ | 优设网 - UISDC</a></li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>H5</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>transform属性的数学原理</title>
    <url>/post/css-transform-math/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>transform</code>本质上就是一个仿射变换（即线性变换 + 平移），从<code>CSS</code>给定的<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function">transform-function</a>可以看出，内置的函数将变换分为了<code>2D</code>变换和<code>3D</code>变换两种，但是从<code>CSS</code>规范来看，<code>2D</code>变换函数也只不过是<code>3D</code>变换函数的特殊形式而已，所以<code>transform</code>属性从原理上来说就是<font color=#f00>一个<code>3D</code>仿射变换函数</font>。</p>
<blockquote>
<p>关于仿射变换的详细数学解释，可以参考：<br>如何通俗地讲解「仿射变换」这个概念？ - 马同学的回答 - 知乎<br />
<a href="https://www.zhihu.com/question/20666664/answer/157400568">https://www.zhihu.com/question/20666664/answer/157400568</a></p>
</blockquote>
<p>仿射变换的核心就是变换矩阵了，因此<code>transform</code>属性的两个核心函数就是<code>matrix()</code>和<code>matrix3d()</code>；</p>
<span id="more"></span>
<h2 id="matrix函数"><a class="markdownIt-Anchor" href="#matrix函数"></a> matrix()函数</h2>
<p>仿射变换通常是<font color=#f00>通过齐次坐标</font>进行变换的，因此<code>2D</code>变换矩阵也就相应地变成了<code>3x3</code>的齐次矩阵：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>t</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>t</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>⋅</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}
a &amp; c &amp; t_{x} \\
b &amp; d &amp; t_{y} \\
0 &amp; 0 &amp; 1
\end{bmatrix} \cdot
\begin{bmatrix}
x \\
y \\
1
\end{bmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>上面就是<code>matrix()</code>函数的一般数学形式了，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo separator="true">,</mo><mi>d</mi><mo separator="true">,</mo><msub><mi>t</mi><mi>x</mi></msub><mo separator="true">,</mo><msub><mi>t</mi><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">a, b, c, d, t_{x}, t_{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>就是该函数的六个参数了；属于<code>2D</code>变换的<code>transform-function</code>有：</p>
<ul>
<li>translate/translateX/translateY</li>
<li>scale/scaleX/scaleY</li>
<li>rotate</li>
<li>skew/skewX/skewY</li>
</ul>
<p>也就是说上面这些变换函数<font color=#39f>完全可以通过<code>matrix()</code>函数进行等价替换</font>；这里做了一个<a href="https://codepen.io/xxf1996/full/XWdJgXB">Demo</a>来体现<code>matrix()</code>函数与这些变换函数等价的体现；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200815181015.png?imageslim" alt="img" /></p>
<p>每种仿射变换之间的形式还是有所区别的，有必要弄清楚每种变换对应矩阵形式（之前就是对斜切变换的矩阵一直有误解……）：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>M</mi><mtext>平移</mtext></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>t</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>t</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>M</mi><mtext>缩放</mtext></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>s</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>s</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>M</mi><mtext>旋转</mtext></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>M</mi><mtext>斜切</mtext></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>α</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mi>β</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
M_{平移} &amp;=
\begin{bmatrix}
1 &amp; 0 &amp; t_{x} \\
0 &amp; 1 &amp; t_{y} \\
0 &amp; 0 &amp; 1
\end{bmatrix} \\[4ex]
M_{缩放} &amp;=
\begin{bmatrix}
s_x &amp; 0 &amp; 0 \\
0 &amp; s_y &amp; 0 \\
0 &amp; 0 &amp; 1
\end{bmatrix} \\[4ex]
M_{旋转} &amp;=
\begin{bmatrix}
cos\alpha &amp; -sin\alpha &amp; 0 \\
sin\alpha &amp; cos\alpha &amp; 0 \\
0 &amp; 0 &amp; 1
\end{bmatrix} \\[4ex]
M_{斜切} &amp;=
\begin{bmatrix}
1 &amp; tan\alpha &amp; 0 \\
tan\beta &amp; 1 &amp; 0 \\
0 &amp; 0 &amp; 1
\end{bmatrix}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:17.20606em;vertical-align:-8.35303em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:8.85303em;"><span style="top:-10.85303em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">平</span><span class="mord cjk_fallback mtight">移</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-6.41802em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">缩</span><span class="mord cjk_fallback mtight">放</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.9830100000000002em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">旋</span><span class="mord cjk_fallback mtight">转</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:2.452000000000001em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">斜</span><span class="mord cjk_fallback mtight">切</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.35303em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:8.85303em;"><span style="top:-10.85303em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-6.41802em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-1.9830100000000002em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span><span style="top:2.452000000000001em;"><span class="pstrut" style="height:4.05101em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.35303em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="matrix3d函数"><a class="markdownIt-Anchor" href="#matrix3d函数"></a> matrix3d()函数</h2>
<p>同理，<code>matrix3d()</code>就是<code>3D</code>变换矩阵了，对应的就是<code>4x4</code>齐次矩阵：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>4</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>b</mi><mn>4</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>c</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>c</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>c</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>c</mi><mn>4</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mn>4</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>⋅</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{bmatrix}
a_1 &amp; a_2 &amp; a_3 &amp; a_4 \\
b_1 &amp; b_2 &amp; b_3 &amp; b_4 \\
c_1 &amp; c_2 &amp; c_3 &amp; c_4 \\
d_1 &amp; d_2 &amp; d_3 &amp; d_4
\end{bmatrix} \cdot
\begin{bmatrix}
x \\
y \\
z \\
1
\end{bmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.80303em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:4.80303em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>因此，<code>matrix3d()</code>函数就有16个参数，需要注意参数的顺序是<font color=#39f>列主导</font>的，也就是：</p>
<blockquote>
<p>matrix3d(a1, b1, c1, d1, a2, b2, c2, d2, a3, b3, c3, d3, a4, b4, c4, d4)</p>
</blockquote>
<p>为何这里不省略一些矩阵元素，像<code>matrix()</code>那样呢？大概是<code>matrix3d</code>除了模拟仿射变换，还要提供透视投影变换，因此需要完整的矩阵元素；属于3D变换的<code>transform-function</code>有：</p>
<ul>
<li>translateZ</li>
<li>scaleZ</li>
<li>rotateX/rotateY/rotateZ/rotate3d</li>
<li>perspective</li>
</ul>
<p>也就是说上面的变换函数都可以使用<code>matrix3d()</code>函数进行等价替换；平移和缩放的3D变换矩阵形式同2D形式无本质差异，就是相应的扩展了一个维度而已，值得关注的是绕任意轴进行旋转及透视投影相关的变换矩阵；</p>
<h4 id="rotate3d函数"><a class="markdownIt-Anchor" href="#rotate3d函数"></a> rotate3d()函数</h4>
<p><code>rotate3d()</code>函数实际上就是一个绕任意轴进行旋转的变换，它接受旋转轴的方向及旋转角度；</p>
<blockquote>
<p>rotate3d(x, y, z, α)</p>
</blockquote>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200815181028.png?imageslim" alt="img" /></p>
<p>上面就是对应的3D旋转变换矩阵，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x, y, z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>就是旋转轴的方向，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>为旋转角度；</p>
<h4 id="perspective函数"><a class="markdownIt-Anchor" href="#perspective函数"></a> perspective()函数</h4>
<p>该变换函数的作用就是设置当前视点距离屏幕（<code>z = 0</code>）平面的距离，从而形成相应的透视投影效果；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200815181037.png?imageslim" alt="img" /></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mstyle mathsize="1.2em"><mfrac><mn>1</mn><mi>d</mi></mfrac></mstyle></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}
1 &amp; 0 &amp; 0 &amp; 0 \\
0 &amp; 1 &amp; 0 &amp; 0 \\
0 &amp; 0 &amp; 1 &amp; 0 \\
0 &amp; 0 &amp; -\large{\frac{1}{d}} &amp; 1
\end{bmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.002352em;vertical-align:-2.2511760000000005em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.751176em;"><span style="top:-4.911176em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.7111759999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.5111759999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1628239999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2511760000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.751176em;"><span style="top:-4.911176em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7111759999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.5111759999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1628239999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2511760000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.751176em;"><span style="top:-4.911176em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7111759999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.5111759999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.1628239999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord sizing reset-size6 size7"><span class="mord"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8236266666666667em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2511760000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.751176em;"><span style="top:-4.911176em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.7111759999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.5111759999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.1628239999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2511760000000005em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function"><transform-function> - CSS: Cascading Style Sheets | MDN</a></li>
<li><a href="https://drafts.csswg.org/css-transforms-2">CSS Transforms Module Level 2</a>：transform第二阶段规范，主要涉及3D变换和投影相关</li>
<li><a href="https://drafts.csswg.org/css-transforms-1/">CSS Transforms Module Level 1</a>：transform第一阶段规范，主要涉及2D变换</li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS过渡效果（transition）</title>
    <url>/post/css-transition/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>从效果上来看，过渡效果有点像<code>css</code>动画的<strong>简化版</strong>，即默认<strong>两个关键帧</strong>（初始和结束），有点像指定了<code>@keyframes</code>里面的<code>from</code>和<code>to</code>，其它的过渡属性跟动画属性的效果大都一致。这种效果实际上就是<strong>两个关键帧之间的补间动画</strong>。</p>
<span id="more"></span>
<h2 id="transition属性"><a class="markdownIt-Anchor" href="#transition属性"></a> transition属性</h2>
<p><code>transition</code>属性实际上是多个过渡属性的缩写，每个过渡属性负责一个特性，组合起来就能实现想要的过渡效果；</p>
<ul>
<li><code>transition-property</code>：指定过渡的<code>css</code>属性；除了可以进行过渡效果的<code>css</code>属性名之外，还有两个关键字：<code>all</code>和<code>none</code>；<code>all</code>就是<strong>所有可以进行过渡效果</strong>的<code>css</code>属性都会开启过渡效果，<code>none</code>就是没有任何过渡效果。</li>
<li><code>transition-duration</code>：指定过渡效果的<strong>周期</strong>；单位为<code>s</code>或<code>ms</code>，整数部分为<code>0</code>时可以不写，如：<code>0.5s</code>可以写成<code>.5s</code>。</li>
<li><code>transition-timing-function</code>：过渡效果的缓动函数（<code>easing function</code>）；所谓的缓动函数就是使得<strong>当前值平滑地过渡到目标值</strong>的一类<strong>插值</strong>函数。</li>
<li><code>transition-delay</code>：过渡效果的<strong>延迟时间</strong>；即触发过渡后等待的时间。</li>
</ul>
<p>过渡属性的简写有很多种组合，不过最常见的就是：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transition</span>: property duration (timing-function) (delay);</span><br></pre></td></tr></table></figure>
<p>除此之外，过渡属性可以<strong>一次定义多个过渡效果</strong>，用<code>,</code>隔开即可。</p>
<h3 id="可以开启过渡效果的css属性"><a class="markdownIt-Anchor" href="#可以开启过渡效果的css属性"></a> 可以开启过渡效果的css属性</h3>
<p>详细的所有可过渡/可动画的<code>css</code>属性可以参考<code>MDN</code>的整理：</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_animated_properties">CSS animated properties - CSS（层叠样式表） | MDN</a></p>
<h3 id="关于缓动函数timing-function"><a class="markdownIt-Anchor" href="#关于缓动函数timing-function"></a> 关于缓动函数（timing-function）</h3>
<p>简单来说，缓动函数的横坐标<code>t</code>范围为<code>[0, 1]</code>，对应<strong>一个动画周期</strong>；而纵坐标<code>y</code>范围为<code>[初始值, 目标值]</code>，当前有时候为了表现一些“<strong>激烈</strong>”的动画效果，<code>y</code>的值可能会<strong>超出</strong>这个范围；事实上，<code>css</code>里面的<strong>内置缓动函数</strong>大多是<strong>三次贝塞尔曲线</strong>得到的。</p>
<blockquote>
<p>Timing functions determine how intermediate values of the transition are calculated. <strong>Most timing functions</strong> can be specified by providing the graph of the corresponding function, <strong>as defined by four points defining a cubic bezier</strong>. <br><br />
—— <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions">Using CSS transitions - CSS: Cascading Style Sheets | MDN</a></p>
</blockquote>
<p><code>css</code>中有一些内置的缓动函数：</p>
<ul>
<li><code>linear</code>：顾名思义，这个就是单纯的线性函数，一条直线；等同于<code>cubic-bezier(0.0, 0.0, 1.0, 1.0)</code>。</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200119165811.png?imageslim" alt="imgge" /></p>
<ul>
<li><code>ease-in</code>：<code>ease</code>意为<strong>缓慢</strong>，<code>in</code>可以理解为“<strong>开始</strong>”；所以<code>ease-in</code>实际上可以理解为“开始比较缓慢”的函数，缓慢也就是斜率（变化率）比较低。等同于<code>cubic-bezier(0.42, 0.0, 1.0, 1.0)</code>。</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200119170013.png?imageslim" alt="imgge" /></p>
<ul>
<li><code>ease-out</code>：同理，<code>out</code>可以理解为“<strong>结束</strong>”；<code>ease-out</code>函数也就是“结束比较缓慢”的效果；等同于<code>cubic-bezier(0.0, 0.0, 0.58, 1.0)</code>。</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200119170053.png?imageslim" alt="imgge" /></p>
<ul>
<li><code>ease-in-out</code>：同理，开始和结束两端都比较缓慢；等同于<code>cubic-bezier(0.42, 0.0, 0.58, 1.0)</code>。</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200119170254.png?imageslim" alt="20200119170254" /></p>
<ul>
<li><code>ease</code>：从<strong>谷歌浏览器的缓动函数工具</strong>来看，这个函数具有“开始一小段变化较快，其后渐入缓慢”的特点；等同于<code>cubic-bezier(0.25, 0.1, 0.25, 1.0)</code>。</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200119170313.png?imageslim" alt="20200119170313" /></p>
<p><strong>注</strong>：以上缓动函数的图片均来自<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function">MDN</a>；</p>
<p>除了这些内置的缓动函数，<code>timing-function</code>还有一些强大的函数用来<strong>生成缓动函数</strong>；</p>
<ul>
<li><code>cubic-bezier(x1, y1, x2, y2)</code>：顾名思义，这是一个<strong>三次贝塞尔曲线函数</strong>；起点为<code>(0, 0)</code>，终点为<code>(1, 1)</code>；而<code>(x1, y1)</code>和<code>(x2, y2)</code>分别是两个控制点，<code>x</code>取值范围为<code>[0, 1]</code>，<code>y</code>的取值范围可以<strong>超出</strong><code>[0, 1]</code>，主要是用来模拟一些<strong>抖动效果</strong>；</li>
</ul>
<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/B%C3%A9zier_3_big.gif/240px-B%C3%A9zier_3_big.gif" alt="image" /></p>
<p>谷歌浏览器自带<strong>贝塞尔曲线绘制工具</strong>，只需要在<code>timing-function</code>那里点击小图标就会弹出，然后拖拽两个控制点就ok了。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200119170403.png?imageslim" alt="20200119170403" /><br />
<img src="https://pic.xiexuefeng.cc/markdown/20200119170349.png?imageslim" alt="20200119170349" /></p>
<ul>
<li><code>steps(n[, direction])</code>：生成<strong>阶梯式</strong>变化的缓动函数；<code>n</code>为步数，<code>direction</code>为阶梯跳跃的方式，有以下选项：
<ul>
<li><code>jump-start</code>：等同于<code>start</code>；在<code>t = 0</code>处发生一次跳跃。</li>
<li><code>jump-end</code>：等同于<code>end</code>；在<code>t = 1</code>处发生一次跳跃。</li>
<li><code>jump-both</code>：同理，在<code>t = 0</code>和<code>t = 1</code>处都发生跳跃。</li>
<li><code>jump-none</code>：<strong>默认值</strong>；在<code>t = 0</code>和<code>t = 1</code>处都<strong>不</strong>发生跳跃，即<strong>均分</strong>间距。</li>
</ul>
</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200119170419.png?imageslim" alt="20200119170419" /></p>
<p>（上图源自MDN的示例）</p>
<ul>
<li><code>step-start(n)</code>：等同于<code>steps(n, jump-start)</code>。</li>
<li><code>step-end(n)</code>：等同于<code>steps(n, jump-end)</code>。</li>
</ul>
<p>最后，<a href="https://easings.net/">https://easings.net/</a> 这个网站收录了很多常用的缓动函数，值得参考。</p>
<h2 id="transition相关事件"><a class="markdownIt-Anchor" href="#transition相关事件"></a> transition相关事件</h2>
<p>事实上，<code>DOM</code>里面也配套了一些<strong>过渡专用的事件</strong>用来监听<code>DOM</code>元素的<strong>过渡状态</strong>：</p>
<ul>
<li><code>transitionrun</code>：过渡效果<strong>被激活</strong>时触发，当有过渡延迟（<code>transition-delay</code>）时，会<strong>先于延迟结束</strong>触发；</li>
<li><code>transitionstart</code>：过渡效果开始时触发，当有延迟时，<strong>延迟结束后才会触发</strong>；即是指<strong>缓动函数开始时</strong>触发。</li>
<li><code>transitionend</code>：过渡效果<strong>结束时</strong>触发；</li>
</ul>
<p><strong>注</strong>：以上事件需要注意浏览器的<strong>兼容性</strong>！关于<code>transitionstart</code>和<code>transitionrun</code>的触发时机可以查看<a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/transitionrun_event">MDN</a>上面的示例，一目了然。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition">transition - CSS（层叠样式表） | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/timing-function"><timing-function> - CSS: Cascading Style Sheets | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions">Using CSS transitions - CSS: Cascading Style Sheets | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/transitionrun_event">HTMLElement: transitionrun event - Web APIs | MDN</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>动效</tag>
      </tags>
  </entry>
  <entry>
    <title>关于vertical-align属性</title>
    <url>/post/css-vertical-align/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>关于<code>vertical-align</code>属性被用得最多的场景就是用于对一些内联元素的<strong>垂直居中</strong>显示，然而事情永远不是我们想的那样简单，给了一个<code>middle</code>就能永远如我们所愿，很多时候基本就会发现图片和文字压根就没有垂直居中对齐……这个时候基本上都不知道为啥，<strong>试了一些其他属性值之后如果未果</strong>那么基本上就会用上<code>flex</code>布局暴力居中了，我一般就是这样做的 ￣□￣｜｜。</p>
<span id="more"></span>
<h2 id="vertical-align的作用"><a class="markdownIt-Anchor" href="#vertical-align的作用"></a> vertical-align的作用</h2>
<h3 id="对于内联元素"><a class="markdownIt-Anchor" href="#对于内联元素"></a> 对于内联元素</h3>
<blockquote>
<p>内联元素包括<code>display: inline</code>、<code>display: inline-*</code>和匿名内联元素（如文本节点等）；</p>
</blockquote>
<p><code>vertical-align</code>可以设置内联元素与其<strong>容器元素</strong>（父元素或<code>line boxes</code>）在<strong>垂直方向的对齐方式</strong>；要理解对齐方式，首先要理解以下几个概念：</p>
<ul>
<li>基线</li>
<li><code>x</code>高度</li>
<li><code>inline boxes</code></li>
<li><code>line box</code></li>
</ul>
<h3 id="相关概念"><a class="markdownIt-Anchor" href="#相关概念"></a> 相关概念</h3>
<h4 id="基线和-x-高度"><a class="markdownIt-Anchor" href="#基线和-x-高度"></a> 基线和 x 高度</h4>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321124522.jpg?imageslim" alt="img" /></p>
<p>可以看一下维基百科的一张图<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，一目了然；<code>x</code>高度指的就是小写字母<code>x</code>的高度，而基线指的就是小写字母<code>x</code>的<strong>底部边缘处</strong>；这张图的其他概念也扩展一下：</p>
<ul>
<li><code>ascent</code>：升部；即高于小写<code>x</code>字母以上的部分；</li>
<li><code>ascent height</code>：升部高度；某个字符位于升部区域的高度；</li>
<li><code>descent</code>：降部；即低于小写<code>x</code>字母以下的部分；</li>
<li><code>descent height</code>：降部高度；某个字符位于降部区域的高度；</li>
</ul>
<h4 id="inline-boxes-和-line-boxes"><a class="markdownIt-Anchor" href="#inline-boxes-和-line-boxes"></a> inline boxes 和 line boxes</h4>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321124549.jpg?imageslim" alt="img" /></p>
<p>这里借用张老师的一张图<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>，也是一目了然；</p>
<ul>
<li>
<p><code>inline box</code>：其实就是各种内联元素外面包裹的一层盒子，其高度与<code>font-size</code>和<code>line-height</code>有关；</p>
</li>
<li>
<p><code>line box</code>：顾名思义，指的就是一行内联元素所包裹的盒子，可以包含多个<code>inline box</code>。可以用鼠标选中内联元素，高亮的区域的高度就是其对应的<code>line box</code>的高度。</p>
</li>
</ul>
<h3 id="vertical-align的属性值"><a class="markdownIt-Anchor" href="#vertical-align的属性值"></a> vertical-align的属性值</h3>
<p><code>vertical-align</code>的对齐对象有两类，因此属性值作用的对象也有两类，一类是<strong>父元素</strong>，一类是<code>line boxes</code>（即每一行）；</p>
<h4 id="对齐对象为父元素"><a class="markdownIt-Anchor" href="#对齐对象为父元素"></a> 对齐对象为父元素</h4>
<blockquote>
<p>The following values only have meaning with respect to a parent <strong>inline element</strong>, or to the <strong>strut</strong> of a parent block container element.<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
</blockquote>
<ul>
<li><code>baseline</code>：<strong>默认值</strong>，使内联元素盒子（<code>inline box</code>，下同）基线与父元素的基线对齐；不过父元素的基线位置有多种情况，需要单独说明；</li>
<li><code>middle</code>：使内联元素盒子的中线与父元素基线向上<code>0.5</code>个<code>x</code>高度的位置对齐；很明显，我们平时把<code>middle</code>理解为内联元素的中线与父元素的中线对齐<font color=red><strong>是错误的</strong></font>！</li>
<li><code>text-top</code>：使内联元素盒子的顶部与父元素<code>content area</code>的顶部对齐；</li>
<li><code>text-bottom</code>：使内联元素盒子的底部与父元素<code>content area</code>的底部对齐；</li>
<li><code>sub</code>：使内联元素盒子的基线与父元素的<strong>下标基线</strong>对齐；</li>
<li><code>super</code>：使内联元素盒子的基线与父元素的<strong>上标基线</strong>对齐；</li>
<li><code>&lt;length&gt;</code>：使内联元素盒子的基线与父元素基线向上给定长度的位置对齐；<strong>可以为负值</strong>，负值则代表基线向下给定长度的位置；</li>
<li><code>&lt;percentage&gt;</code>：与<code>&lt;length&gt;</code>同理，百分比相对的是内联元素的<code>line-height</code>；</li>
</ul>
<h4 id="关于-inline-box"><a class="markdownIt-Anchor" href="#关于-inline-box"></a> 关于 inline box</h4>
<p>这里内联盒子的范围可以参考<code>W3C</code>的官方定义：</p>
<blockquote>
<p>In the following definitions, for inline non-replaced elements, the box used for alignment is the box whose height is the ‘line-height’ (containing the box’s glyphs and the half-leading on each side, see above). For all other elements, the box used for alignment is the margin box.<sup class="footnote-ref"><a href="#fn3" id="fnref3:1">[3:1]</a></sup></p>
</blockquote>
<p>简言之，对不可替换元素，这个<code>inline box</code>的高度就是<code>line-height</code>；反之则是<code>margin-box</code>；</p>
<blockquote>
<p>On a block container element whose content is composed of inline-level elements, ‘line-height’ specifies the minimal height of line boxes within the element. The minimum height consists of a minimum height above the baseline and a minimum depth below it, exactly as if each line box starts with a zero-width inline box with the element’s font and line height properties. We call that imaginary box a “strut.”<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
</blockquote>
<h4 id="关于没有基线的元素"><a class="markdownIt-Anchor" href="#关于没有基线的元素"></a> 关于没有基线的元素</h4>
<p>对于<font color=red><strong>没有基线的元素</strong></font>来说，其基线用<code>margin-box</code>区域的底边缘来替代！然而对于表现形式为<font color=red><code>inline-block</code></font>的内联元素来说，其基线的确定要<strong>稍微特殊一点</strong>：当<code>inline-block</code>元素内部没有任何内联子元素或者<code>overflow</code>的值不为<code>visible</code>时，其基线位置还是<code>margin-box</code>的底边缘，否则就是其内部最后一个<code>line box</code>的基线位置！</p>
<blockquote>
<p>The baseline of an ‘inline-block’ is <strong>the baseline of its last line box</strong> in the normal flow, <strong>unless</strong> it has either no in-flow line boxes or if its ‘overflow’ property has a computed value other than ‘visible’, <strong>in which case the baseline is the bottom margin edge</strong>.<sup class="footnote-ref"><a href="#fn3" id="fnref3:2">[3:2]</a></sup></p>
</blockquote>
<h4 id="关于-content-area-及其顶部位置"><a class="markdownIt-Anchor" href="#关于-content-area-及其顶部位置"></a> 关于 content area 及其顶部位置</h4>
<p><code>content area</code>是什么？<code>content area</code>的顶部位置又是如何确定的？本来我也没想过深究这些，直到我准备查看一下<code>text-top</code>属性值的效果时，我简直一脸懵逼，不知道发生了什么……看个例子：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: lightcyan;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pic</span> &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: text-top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;pic&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://placekitten.com/40/40&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321124616.jpg?imageslim" alt="img" /></p>
<p>很明显<code>&lt;img&gt;</code>的对齐区域应该是其<code>margin-box</code>，那么为何其父元素的<code>content area</code>的顶部不是<code>&lt;div&gt;</code>的顶部？可能的解释就是，其对齐的父元素不是外层的<code>&lt;div&gt;</code>，而是<code>line box</code>！那么如何确定<code>line box</code>的<code>content area</code>？</p>
<p>关于<code>content area</code>的高度，<code>W3C</code>有这么一段说明：</p>
<blockquote>
<p>The <strong>height of the content area</strong> should be based on the font, but this specification does not specify how. A UA may, e.g., use the em-box or <strong>the maximum ascender and descender of the font</strong>.<sup class="footnote-ref"><a href="#fn3" id="fnref3:3">[3:3]</a></sup></p>
</blockquote>
<p>据我观察，谷歌浏览和火狐浏览器应该都是采用了字体的最大升部高度和最大降部高度组成高度；即：</p>
<blockquote>
<p><code>content area height</code> = <code>x</code>高度 + 最大升部高度 + 最大降部高度</p>
</blockquote>
<p>因为这个<code>line box</code>的顶部位置正好可以通过<code>line-height - font-size * 1.4</code>计算得到（这个<code>1.4</code>根据具体字体可能有差异）；</p>
<p>当<code>content area</code>的高度小于<code>line box</code>的高度时，那么<code>line box</code>的<code>content area</code>顶部就是：</p>
<blockquote>
<p><code>line box height</code> - <code>content area height</code></p>
</blockquote>
<p>反之，那么<code>line box</code>的<code>content area</code>顶部就是<code>line-box</code>的顶部；</p>
<p>可以利用上面的公式大概计算一下，怎样可以使得上述的<code>text-top</code>能够对齐到<code>&lt;div&gt;</code>的顶部，即<code>line box</code>的<code>content area</code>的高度等于<code>line-height</code>；由于<code>line-height</code>设置为<code>50px</code>，所以推出<code>font-size</code>为<code>50/1.4</code>，约等于<code>36px</code>；看下<code>font-size</code>为<code>36px</code>的情况：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321124635.jpg?imageslim" alt="img" /></p>
<p>差不多就是这个逻辑；</p>
<h4 id="对齐对象为-line-box"><a class="markdownIt-Anchor" href="#对齐对象为-line-box"></a> 对齐对象为 line box</h4>
<ul>
<li><code>top</code>：内联元素<strong>及其后代</strong>的顶部与<code>line box</code>的顶部对齐；</li>
<li><code>bottom</code>：内联元素<strong>及其后代</strong>的底部与<code>line box</code>的底部对齐；</li>
</ul>
<p>除了上面的简单定义，<code>W3C</code>的规范里还提到了一点：</p>
<blockquote>
<p>The inline-level boxes are aligned vertically according to their ‘vertical-align’ property. In case they are aligned <strong>‘top’ or ‘bottom’</strong>, they must <strong>be aligned so as to minimize the line box height</strong>. <sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
</blockquote>
<p>也就是说，使用<code>top</code>和<code>bottom</code>对齐时，会使得<code>line box</code>的高度保持在尽量小的程度；而<code>line box</code>的<font color=red>最小高度</font>就是<code>line-height</code>，这一点规范上也有说明：</p>
<blockquote>
<p>On a block container element whose content is composed of inline-level elements, <strong>‘line-height’ specifies the minimal height</strong> of line boxes within the element<sup class="footnote-ref"><a href="#fn4" id="fnref4:1">[4:1]</a></sup></p>
</blockquote>
<h4 id="关于-line-box-及其高度"><a class="markdownIt-Anchor" href="#关于-line-box-及其高度"></a> 关于 line box 及其高度</h4>
<p>关于<code>line box</code>，<code>W3C</code>有这么一段定义：</p>
<blockquote>
<p>In an inline formatting context, boxes are laid out horizontally, one after the other, beginning at the top of a containing block. Horizontal margins, borders, and padding are respected between these boxes. The boxes may be aligned vertically in different ways: their bottoms or tops may be aligned, or the baselines of text within them may be aligned. <strong>The rectangular area that contains the boxes that form a line is called a line box.</strong><sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></p>
</blockquote>
<p>简言之，就是<strong>每一行</strong>上包裹这一行内所有<code>inline box</code>的那个区域就是<code>line box</code>；而<code>line box</code>的高度则是由其内部<strong>最靠上</strong>的<code>inline box</code>顶部到<strong>最靠下</strong>的<code>inline box</code>底部之间的距离（因为可能各个<code>inline box</code>之间的高度和垂直对齐方式不一致）：</p>
<blockquote>
<p>The height of a line box is determined as follows:</p>
<ol>
<li>…</li>
<li>…</li>
<li>The line box height is <strong>the distance between the uppermost box top and the lowermost box bottom</strong>. (This includes the strut, as explained under ‘line-height’ below.)<sup class="footnote-ref"><a href="#fn5" id="fnref5:1">[5:1]</a></sup></li>
</ol>
</blockquote>
<h3 id="对于单元格元素"><a class="markdownIt-Anchor" href="#对于单元格元素"></a> 对于单元格元素</h3>
<blockquote>
<p>单元格元素包括<code>&lt;td&gt;</code>及<code>display: table-cell</code>的元素；</p>
</blockquote>
<p><code>vertical-align</code>除了可以设置内联元素的垂直对齐方式外，还能用于设置单元格的垂直对齐方式，其属性值有：</p>
<ul>
<li><code>baseline</code>：使单元格的基线与当前行中<strong>其它所有以基线对齐方式</strong>的单元格的基线对齐；</li>
<li><code>top</code>：使单元格的<code>padding-box</code>的顶边缘与当前行的顶部对齐；</li>
<li><code>bottom</code>：使单元格的<code>padding-box</code>的底边缘与当前行的底部对齐；</li>
<li><code>middle</code>：使单元格的<code>padding-box</code>居中；</li>
</ul>
<h2 id="幽灵空白节点"><a class="markdownIt-Anchor" href="#幽灵空白节点"></a> （幽灵）空白节点</h2>
<p><strong>空白节点的特征</strong>就是：本身是一个<code>inline box</code>，宽度为<code>0</code>，但是具有（<strong>继承</strong>）<code>font</code>和<code>line-height</code>属性；因此空白节点本身是看不见的。关于这种空白节点，貌似找不到很明显的官方定义；张老师把这种空白节点称之为“幽灵空白节点”，因为这些空白节点都是无意或者<code>html</code>在解析的过程中自动产生的，且不能直接控制，所以谓之“幽灵”。</p>
<p>理解空白节点的存在对于弄清楚之前使用<code>vertical-align: middle</code>等属性值为何不生效（或者不符合预期）是必须的。</p>
<h3 id="空白节点的来源"><a class="markdownIt-Anchor" href="#空白节点的来源"></a> 空白节点的来源</h3>
<p>大致有两处来源：</p>
<ul>
<li>
<p>标签后面<strong>换行符</strong>或<strong>空格</strong>产生的；如：</p>
  <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: lightcyan;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pic</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
  <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;pic&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://placekitten.com/40/40&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321124653.jpg?imageslim" alt="img" /></p>
<p>可以看到图片底部留有空隙，空隙产生的原因就是<code>&lt;img&gt;</code>后面进行了换行，因此<code>html</code>解析后多出一个空白节点；空白节点虽然宽度为<code>0</code>，但是继承了<code>line-height</code>属性，因此其高度就是<code>line-height</code>，所以<code>&lt;img&gt;</code>元素的<code>margin-box</code>底部会与空白节点的<code>inline box</code>基线进行对齐！</p>
</li>
<li>
<p><code>line box</code>内部默认第一个<code>inline box</code>就是空白节点；</p>
<blockquote>
<p>exactly as if <strong>each line box starts with a zero-width inline box</strong> with the element’s font and line height properties. We call that imaginary box a <strong>“strut”</strong><sup class="footnote-ref"><a href="#fn4" id="fnref4:2">[4:2]</a></sup></p>
</blockquote>
<p><code>W3C</code>把这种空白节点称之为“<strong>strut</strong>”，意为“支柱”；可能是撑起行高的作用。</p>
</li>
</ul>
<h3 id="空白节点的影响"><a class="markdownIt-Anchor" href="#空白节点的影响"></a> 空白节点的影响</h3>
<h4 id="导致图片不能正常居中"><a class="markdownIt-Anchor" href="#导致图片不能正常居中"></a> 导致图片不能正常居中</h4>
<p>有时候我们可能想使用<code>line-height</code>等于<code>height</code>加上<code>vertical-align: middle</code>使图片在某区域中垂直居中这种套路，结果发现图片总是中间偏下一点：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: lightcyan;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pic</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;pic&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://placekitten.com/40/40&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321124707.jpg?imageslim" alt="img" /></p>
<p>这个就是空白节点捣的鬼，由于空白节点继承了<code>line-height</code>，进而有了基线位置，因此<code>line box</code>的基线位置就变了空白节点的基线位置，然而字体基线位置并不是在中线位置往下<code>0.5</code>个<code>x</code>高度的地方，而是更下一点的位置，也就是“<strong>基线下沉</strong>”。因此，此时基线往上<code>0.5</code>个<code>x</code>高度之后的位置并不是<code>inline box</code>的中线位置，而且偏下一些的位置；至于到底偏下多少，这取决于<strong>字体及字体大小</strong>。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321124723.jpg?imageslim" alt="img" /></p>
<p>可以在<code>&lt;img&gt;</code>加上一个<code>x</code>来查看基线位置（可以当做“显形”的空白节点），蓝色框就是文本节点的<code>inline box</code>区域，可以看到基线位置明显偏下（<code>inline box</code>整体居中），因此<code>&lt;img&gt;</code>对齐的地方根本不是<code>inline box</code>的中线位置，所以就会偏下。</p>
<p><strong>解决办法</strong>：虽然不能直接控制空白节点的样式，但是由于空白节点<strong>继承</strong><code>font</code>和<code>line-height</code>属性，所以可以操纵外层元素的<code>font-size</code>来影响空白节点的基线位置。设置外层<code>font-size: 0</code>，可以使得空白节点的<code>line-height</code>为<code>0</code>，因此其高度也为<code>0</code>，那么所有的“线”都重合了，处于<code>line box</code>的中线处，所以<code>&lt;img&gt;</code>此时对齐的位置就是<code>line box</code>的中线：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321124741.jpg?imageslim" alt="img" /></p>
<h2 id="其它问题"><a class="markdownIt-Anchor" href="#其它问题"></a> 其它问题</h2>
<h3 id="图标和文字不能垂直居中对齐"><a class="markdownIt-Anchor" href="#图标和文字不能垂直居中对齐"></a> 图标和文字不能垂直居中对齐</h3>
<p>同一行中，混有图标和文字时，若使父级元素的<code>height</code>等于<code>line-height</code>，图标高度也等同于父级元素的高度，但是可以看到文字并非和图片一样垂直居中，而是<strong>偏下</strong>一些。如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: lightcyan;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pic</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;pic&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./test.png&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>x开头的一段话<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321124757.jpg?imageslim" alt="img" /></p>
<p>可以分析一下，由于<code>vertical-align</code>的默认值就是<code>baseline</code>，因此图片和文字都是基线对齐其父元素，即外层<code>line box</code>的基线位置；从上图可以很明显看出，此时<code>line box</code>的基线位置就是<code>&lt;div&gt;</code>区域的底部边缘，因此文字基线就会对齐底部，而非想象中的居中。</p>
<p>那么把对齐方式都改为<code>middle</code>又如何？</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321124811.jpg?imageslim" alt="img" /></p>
<p>显然，由于<strong>基线下沉</strong>的影响，文字对齐的位置会相对中间线偏下一点点。</p>
<p><strong>解决办法</strong>：只需要将图标的对齐方式设置为<code>top</code>即可，此时图标和文字就会居中对齐：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321124831.jpg?imageslim" alt="img" /></p>
<p>因为<code>top</code>对齐会使得<code>line box</code>的高度保持在最低，此时由于<code>inline box</code>的高度都没有超过<code>line-height</code>，因此此时<code>line box</code>的高度就是<code>line-height</code>的高度。</p>
<h3 id="为何修改对齐方式会导致line-box基线位置变化"><a class="markdownIt-Anchor" href="#为何修改对齐方式会导致line-box基线位置变化"></a> 为何修改对齐方式会导致line box基线位置变化</h3>
<p>虽然可以说<code>x</code>底部边缘位置就是<code>line box</code>的基线所在位置，但是为何修改<code>inline box</code>的对齐方式会导致<code>line box</code>的基线位置发生改变？关键就在于如何确定<code>line box</code>的基线位置，然而要命的就是<code>CSS</code>规范里面竟然<font color=red><strong>没有定义</strong></font><code>line box</code>的基线位置！！！</p>
<blockquote>
<p>there are multiple solutions and CSS 2.1 <strong>does not define the position of the line box’s baseline</strong><sup class="footnote-ref"><a href="#fn5" id="fnref5:2">[5:2]</a></sup></p>
</blockquote>
<p>看到这里我突然觉得为啥围绕着竖直对齐为何会产生那么多说不清的地方了……因为很多对齐方式基本上都是根据<code>line box</code>的基线位置进行对齐，然而<code>line box</code>的基线位置居然没有官方定义。</p>
<p><strong>？？？</strong></p>
<p>然而实际上浏览器在实现渲染的时候，肯定会有关于<code>line box</code>基线位置的定义的，不过不知道该去哪里能找到这份定义，不然就一直在这个地方纠结不清了。</p>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>为何使用<code>vertical-align</code>属性的时候会心里没底，查完那么多资料我终于明白了，因为牵扯到的规范实在是太多了！</p>
<p>还有，这次之所以引用了那么多的<code>W3C</code>规范，是因为根据<code>MDN</code>的资料和网上一些文章压根不足以解答心中的疑惑。因此，去查看一手资料是最直接了当的方式，也免得道听途说误解了什么。不过这样查资料确实挺耗费时间的，但得到的收获也少不了。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ul>
<li><a href="https://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/">CSS深入理解vertical-align和line-height的基友关系 « 张鑫旭-鑫空间-鑫生活</a></li>
<li><a href="https://juejin.im/post/5e64ee1df265da573e6734ed">关于 vertical-align 你应该知道的一切 - 掘金</a></li>
<li><a href="https://www.zhangxinxu.com/wordpress/2015/06/about-letter-x-of-css/">字母’x’在CSS世界中的角色和故事 « 张鑫旭-鑫空间-鑫生活</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/vertical-align">vertical-align - CSS（层叠样式表） | MDN</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://zh.wikipedia.org/wiki/X%E5%AD%97%E9%AB%98">X字高 - 维基百科，自由的百科全书</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://www.zhangxinxu.com/wordpress/2010/01/css-float%e6%b5%ae%e5%8a%a8%e7%9a%84%e6%b7%b1%e5%85%a5%e7%a0%94%e7%a9%b6%e3%80%81%e8%af%a6%e8%a7%a3%e5%8f%8a%e6%8b%93%e5%b1%95%e4%b8%80/">CSS float浮动的深入研究、详解及拓展(一) « 张鑫旭-鑫空间-鑫生活</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://www.w3.org/TR/CSS2/visudet.html#propdef-vertical-align">https://www.w3.org/TR/CSS2/visudet.html#propdef-vertical-align</a> <a href="#fnref3" class="footnote-backref">↩︎</a> <a href="#fnref3:1" class="footnote-backref">↩︎</a> <a href="#fnref3:2" class="footnote-backref">↩︎</a> <a href="#fnref3:3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://www.w3.org/TR/CSS2/visudet.html#propdef-line-height">https://www.w3.org/TR/CSS2/visudet.html#propdef-line-height</a> <a href="#fnref4" class="footnote-backref">↩︎</a> <a href="#fnref4:1" class="footnote-backref">↩︎</a> <a href="#fnref4:2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://www.w3.org/TR/CSS2/visudet.html#line-height">https://www.w3.org/TR/CSS2/visudet.html#line-height</a> <a href="#fnref5" class="footnote-backref">↩︎</a> <a href="#fnref5:1" class="footnote-backref">↩︎</a> <a href="#fnref5:2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="https://www.w3.org/TR/CSS2/visuren.html#inline-formatting">https://www.w3.org/TR/CSS2/visuren.html#inline-formatting</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>灵活的flex布局</title>
    <url>/post/css3-flex/</url>
    <content><![CDATA[<h2 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h2>
<p>flexbox模型又称伸缩布局盒模型，是css3新引入的一种布局机制，可以很方便的进行多列布局；可以从两个角度来看待flex属性：一个就是flex容器，另一个就是flex项目。</p>
<p><strong>flex容器</strong>：顾名思义就是用来承载flex布局的容器盒子，即其内部的元素遵循flex布局机制；</p>
<p><strong>flex项目</strong>：即装在flex容器中的元素；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180417/b6B17ia4LG.png?imageslim" alt="flex布局机制" /></p>
<span id="more"></span>
<h2 id="flex容器"><a class="markdownIt-Anchor" href="#flex容器"></a> flex容器</h2>
<p>flex容器有6种属性来控制其内部元素的整体排布规定：</p>
<ul>
<li><strong>flex-direction</strong>：flex容器的主轴方向（row | row-reverse | column | column-reverse）；</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>row</td>
<td>水平方向（从左开始）</td>
</tr>
<tr>
<td>row-reverse</td>
<td>逆水平方向（从右开始）</td>
</tr>
<tr>
<td>column</td>
<td>竖直方向（从上开始）</td>
</tr>
<tr>
<td>column-reverse</td>
<td>逆竖直方向（从下开始）</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>flex-wrap</strong>：flex容器的换行方式（nowrap | wrap | wrap-reverse）；</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>nowrap</td>
<td>不换行，即当主轴尺寸固定时，当空间不足时，项目尺寸会随之调整而并不会挤到下一行。</td>
</tr>
<tr>
<td>wrap</td>
<td>项目主轴总尺寸超出容器时换行，第一行在上方</td>
</tr>
<tr>
<td>wrap-reverse</td>
<td>换行，第一行在下方</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>flex-flow</strong>：上面两个的总和（主轴方向+换行方式）</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">flex-flow</span>: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>justify-content</strong>：主轴的对齐方式（flex-start | flex-end | center | space-between | space-around）</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>flex-start</td>
<td>向主轴方向的<strong>起点</strong>的方向对齐</td>
</tr>
<tr>
<td>flex-end</td>
<td>向主轴方向的<strong>终点</strong>的方向对齐</td>
</tr>
<tr>
<td>center</td>
<td>居于主轴的中间</td>
</tr>
<tr>
<td>space-betwwen</td>
<td>两端对齐，项目之间的间隔相等，即剩余空间等分成间隙。</td>
</tr>
<tr>
<td>sapce-around</td>
<td><strong>每个项目两侧的间隔相等</strong>，所以项目之间的间隔比项目与边缘的间隔大一倍。</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>align-items</strong>：侧轴的对齐方式（flex-start | flex-end | center | baseline | stretch）</li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>flex-start</td>
<td>向侧轴方向的起点的方向对齐</td>
</tr>
<tr>
<td>flex-end</td>
<td>向侧轴方向的终点的方向对齐</td>
</tr>
<tr>
<td>center</td>
<td>居于侧轴的中间</td>
</tr>
<tr>
<td>baseline</td>
<td>项目的<strong>第一行文字的基线</strong>对齐</td>
</tr>
<tr>
<td>stretch</td>
<td><strong>默认值</strong>，即如果项目未设置高度或者设为 auto，将占满整个容器的高度。</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>align-content</strong>：多根轴的对齐方式（轴与轴之间，与主轴平行的轴，开启换行才有效！），选项有：flex-start | flex-end | center | space-between | space-around | stretch；</li>
</ul>
<h2 id="flex项目"><a class="markdownIt-Anchor" href="#flex项目"></a> flex项目</h2>
<ul>
<li><strong>order</strong>：定义项目在容器中的排列顺序，数值越小，排列越靠前，默认值为 0；</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">order</span>: &lt;integer&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>flex-basis</strong>：定义了在分配多余空间之前，项目占据的主轴空间，浏览器根据这个属性，计算主轴是否有多余空间，默认值为<code>auto</code>；auto，即项目本来的大小, 这时候 item 的宽高取决于 width 或 height 的值。</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">    <span class="attribute">flex-basis</span>: &lt;length&gt; | auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><strong>flex-grow</strong>：定义项目的放大比例</li>
<li><strong>flex-shrink</strong>：定义了项目的缩小比例</li>
<li><strong>flex</strong>：flex-grow, flex-shrink 和 flex-basis的简写</li>
<li><strong>align-self</strong>：允许单个项目有与其他项目不一样的对齐方式</li>
</ul>
<h2 id="flex布局示例"><a class="markdownIt-Anchor" href="#flex布局示例"></a> flex布局示例</h2>
<ol>
<li>柱状统计图：</li>
</ol>
<p><img src="https://pic.xiexuefeng.cc/markdown/180417/kDAjDIkF1A.png?imageslim" alt="柱状图" /></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: flex-end;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#333333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.col</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all .<span class="number">3s</span> ease-in;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.col</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">10px</span> darkblue, -<span class="number">2px</span> -<span class="number">2px</span> <span class="number">10px</span> darkblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.col</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ff3366</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.col</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">75%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#6699cc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.col</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>)&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">23%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: darkorange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.col</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">4</span>)&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">61%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: lightseagreen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.col</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">5</span>)&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">31%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: lightsalmon;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://zhuanlan.zhihu.com/p/25303493">30 分钟学会 Flex 布局</a>（图文丰富，一目了然！）</li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title>论css属性中的百分比与相对单位</title>
    <url>/post/css-percentage-relative/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>长期以来，每次在<code>css</code>属性中使用百分比或者其他一些相对单位时，心里总是有些迷惑，这些相对单位的<font color=red><strong>比较值或者说比较对象到底是谁</strong></font>（即相对标准是啥）？在使用的时候也不太自信，因为有时候会出现一些超出自己『意料之外』的情况出现，所以说对于这些相对单位的准确定义还是不太了解，因此看起来就是一知半解，说不清个一二三。随着对前端知识体系的深入学习，越来越来发现自己的这种『一知半解』，<font color=#36f><strong>看起来好像是明白，但实际上遇到问题时才发现自己什么都不知道</strong></font>，希望自己能够逐步地掌握精准的知识！</p>
<span id="more"></span>
<h2 id="百分比相关属性"><a class="markdownIt-Anchor" href="#百分比相关属性"></a> 百分比相关属性</h2>
<p>使用百分比最重要的肯定是要清楚它是什么的百分比，而『<font color=red><strong>百分比的计算值通常是以元素的包含块为对象进行计算</strong></font>』，所以首先需要明白包含块是什么以及如何确定一个元素的包含块！</p>
<h3 id="包含块"><a class="markdownIt-Anchor" href="#包含块"></a> 包含块</h3>
<p><font color=#36f><strong>包含块</strong></font>（<code>containing block</code>）：用来确定和影响元素的尺寸和位置属性的矩形区域；</p>
<blockquote>
<p>The size and position of an element are often impacted by its <strong>containing block</strong>. Percentage values that are applied to the width, height, padding, margin, and offset properties of an absolutely positioned element (i.e., which has its position set to absolute or fixed) are computed from the element’s containing block. ——MDN</p>
</blockquote>
<p>一个元素的包含块完全受其<code>position</code>属性值的影响：</p>
<ol>
<li>
<p><code>static</code>或<code>relative</code>：最近的块级（<code>display</code>属性值为<code>block</code>，<code>inline-block</code>或<code>list-item</code>）祖先元素的<font color=red><code>content-box</code></font>区域；或者最近的<font color=red><strong>建立格式上下文</strong></font>的祖先元素，比如：<code>table</code>容器，<code>flex</code>容器，<code>grid</code>容器或块级容器。</p>
</li>
<li>
<p><code>absolute</code>：最近的非<code>static</code>（fixed, absolute, relative, or sticky）祖先元素的<font color=red><code>padding-box</code></font>区域。</p>
</li>
<li>
<p><code>fixed</code>：可视窗口<code>viewport</code>本身（属于<code>continuous media</code>类型时）或页面区域<code>page area</code>（属于<code>paged media</code>类型时），即<strong>初始包含块</strong>；</p>
</li>
<li>
<p>当属性值为<code>fixed</code>或<code>absolute</code>时，其包含块还有可能是最近的<font color=red>含有<code>transform</code>或<code>perspective</code>值不为<code>none</code></font>的祖先元素的<code>padding-box</code>区域。</p>
</li>
</ol>
<p><font color=red><strong>注</strong></font>：<code>html</code>元素的包含块叫做<font color=#36f><strong>初始包含块</strong></font>（<code>initial containing block</code>），它具有可视窗口（用于连续媒体）或页面区域（用于分页媒体）的尺寸。</p>
<h3 id="百分比的使用"><a class="markdownIt-Anchor" href="#百分比的使用"></a> 百分比的使用</h3>
<table>
<thead>
<tr>
<th>属性</th>
<th>百分比参照对象</th>
</tr>
</thead>
<tbody>
<tr>
<td>width</td>
<td>包含块的宽度</td>
</tr>
<tr>
<td>height</td>
<td>包含块的高度</td>
</tr>
<tr>
<td>padding</td>
<td>包含块的<font color=red><strong>宽度</strong></font></td>
</tr>
<tr>
<td>margin</td>
<td>包含块的<font color=red><strong>宽度</strong></font></td>
</tr>
<tr>
<td>top</td>
<td>包含块的<strong>高度</strong></td>
</tr>
<tr>
<td>right</td>
<td>包含块的<strong>宽度</strong></td>
</tr>
<tr>
<td>bottom</td>
<td>包含块的<strong>高度</strong></td>
</tr>
<tr>
<td>left</td>
<td>包含块的<strong>宽度</strong></td>
</tr>
<tr>
<td>font-size</td>
<td><font color=red><strong>父元素</strong></font>的<code>font-size</code>值</td>
</tr>
<tr>
<td>tranlate()/translate3d()</td>
<td>元素自身的<code>padding-box</code>区域<br>x相对于宽度，y相对于高度，z？</td>
</tr>
</tbody>
</table>
<p><font color=red><strong>注</strong></font>：当包含块的<code>height</code>为<code>auto</code>且<code>position</code>为<code>static</code>或<code>relative</code>时，<font color=red><code>height</code>、<code>top</code>和<code>bottom</code></font>属性设置百分比无效，即百分比计算值为<code>0</code>！！！</p>
<h3 id="padding的例子"><a class="markdownIt-Anchor" href="#padding的例子"></a> padding的例子</h3>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:lightgreen;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#36f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20181207175219.jpg?imageslim" alt="mark" /></p>
<p>从<code>.box</code>的盒模型可以看到<code>padding</code>属性值为<code>50px</code>，正好是其包含块（<code>.container</code>的<code>content-box</code>）宽度的<code>10%</code>。</p>
<h2 id="相对单位"><a class="markdownIt-Anchor" href="#相对单位"></a> 相对单位</h2>
<table>
<thead>
<tr>
<th>相对单位</th>
<th>参照对象</th>
</tr>
</thead>
<tbody>
<tr>
<td>em</td>
<td>当前元素的<code>font-size</code>属性值；<br>若是设置当前元素的<code>font-size</code>值时，则是<font color=red><strong>父元素</strong></font>的<code>font-size</code>值；</td>
</tr>
<tr>
<td>rem</td>
<td>文档<font color=red><strong>根元素</strong></font><code>html</code>的<code>font-size</code>属性值；</td>
</tr>
<tr>
<td>ex</td>
<td>当前元素下<font color=red>小写<code>x</code>字母</font>的高度；受字体和字体大小的影响。</td>
</tr>
<tr>
<td>ch</td>
<td>当前元素下<font color=red>数字<code>0</code>的宽度</font>；受字体和字体大小的影响。</td>
</tr>
<tr>
<td>lh</td>
<td>当前元素的<code>line-height</code>属性值；<br>若是设置当前元素的<code>line-height</code>值时，则是<font color=red><strong>父元素</strong></font>的<code>line-height</code>值；</td>
</tr>
<tr>
<td>rlh</td>
<td>根元素的<code>line-height</code>属性值；</td>
</tr>
<tr>
<td>vw</td>
<td>可视窗口宽度的<code>1%</code></td>
</tr>
<tr>
<td>vh</td>
<td>可视窗口高度的<code>1%</code></td>
</tr>
<tr>
<td>vi</td>
<td>初始包含块的<code>inline</code>轴方向大小的<code>1%</code>；<br><code>inline</code>轴方向指的就是文字排列的方向；</td>
</tr>
<tr>
<td>vb</td>
<td>初始包含块的<code>block</code>轴方向大小的<code>1%</code>；<br><code>block</code>轴方向是<code>inline</code>轴垂直的方向；</td>
</tr>
<tr>
<td>vmin</td>
<td>min(vw, wh)</td>
</tr>
<tr>
<td>vmax</td>
<td>max(vw, vh)</td>
</tr>
</tbody>
</table>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/All_About_The_Containing_Block">布局和包含块 - CSS：层叠样式表 | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/percentage">percentage - CSS: Cascading Style Sheets | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/length">length - CSS：层叠样式表 | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties#inline-dimension">CSS Logical Properties and Values - CSS: Cascading Style Sheets | MDN</a></li>
<li>《css世界》 —— 8.1.2 理解 <code>font-size</code> 与 <code>ex</code>、 <code>em</code> 和 <code>rem</code> 的关系</li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>css3 3D transform</title>
    <url>/post/css3-transform-3d/</url>
    <content><![CDATA[<p><code>transform</code>是<code>css3</code>新增的功能，可以用来改变元素的形状和位置，分为<code>2D</code>和<code>3D</code>两种，实际上<code>2D</code>变换可以看做是<code>3D</code>变换的一种特殊形式。</p>
<h2 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h2>
<p>可以联想到计算机图形中的摄像机与物体的空间关系，以及透视投影原理，就能理解<code>3D transform</code>的基本原理了。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180511/9Bbb78kjL3.png?imageslim" alt="mark" /></p>
<center>透视投影原理</center>
<span id="more"></span>
<br>
<p><img src="https://pic.xiexuefeng.cc/markdown/180511/gJKkEFECgI.png?imageslim" alt="mark" /></p>
<center>透视投影的标准模型</center>
<h3 id="3d坐标系"><a class="markdownIt-Anchor" href="#3d坐标系"></a> 3D坐标系</h3>
<p>在浏览器中，一般二维坐标系的原点为左上角，而三维坐标系<code>z</code>轴的方向是由屏幕向外增大的，除此之外<code>x</code>轴和<code>y</code>轴的方向与二维坐标系无异。所以屏幕所在平面就相当于<code>z=0</code>平面。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180511/d897ICl1Ha.png?imageslim" alt="mark" /></p>
<h3 id="perspective属性"><a class="markdownIt-Anchor" href="#perspective属性"></a> perspective属性</h3>
<p><code>perspective</code>属性的值相当于视点（应该是投影平面）离屏幕（<code>z=0</code>平面）的距离，距离越远则成像的效果越接近于平行投影，也就是越没有立体效果，反之则更具有立体效果；需要注意的是<font color=red><strong>该属性作用于其子元素</strong></font>，因此常放置在容器元素中！</p>
<p>一般要体现出立体效果，还需要结合<code>translateZ</code>来对元素的<code>z</code>坐标进行控制；</p>
<h3 id="perspective-origin属性"><a class="markdownIt-Anchor" href="#perspective-origin属性"></a> perspective-origin属性</h3>
<p><code>perspective-origin</code>属性表示视点在成像平面（即屏幕）所在的位置，默认为<code>center center</code>，即平面的正中心位置。参数值选项与<code>transform-origin</code>一样，只不过没有<code>z</code>轴的参数（？）。</p>
<h3 id="transform-style属性"><a class="markdownIt-Anchor" href="#transform-style属性"></a> transform-style属性</h3>
<p>通过设置<code>transform-style</code>的属性，可以控制其<strong>子元素</strong>的呈现方式，也就是投影方式。当属性为<code>flat</code>（默认值）时，其子元素为<code>2D</code>呈现，即平行投影；当属性为<code>preserve-3d</code>时，为<code>3D</code>呈现，即透视投影。<font color=red><strong>由于其作用在其子元素上，所以一般用来当做立体容器来使用</strong></font>。</p>
<h3 id="transform-origin"><a class="markdownIt-Anchor" href="#transform-origin"></a> transform-origin</h3>
<p>顾名思义，<code>transform-origin</code>属性就是用来设置元素的<strong>坐标原点</strong>位置，而<code>transform</code>的变换需要依靠坐标原点。其默认值为<code>center center</code>，即元素的正中心；而在三维变换中，还有另一个<code>transform-origin-z</code>属性用来设置原点的<code>z</code>轴坐标，其默认值为<code>0</code>，即屏幕平面；<code>transform-origin-z</code>属性目前只有谷歌浏览器支持，所以需要加<code>-webkit-</code>前缀。不过，<code>transform-origin</code>是<strong>可以接受第三个参数</strong>的，其默认值也是<code>0</code>！</p>
<p>参数值：</p>
<table>
<thead>
<tr>
<th style="text-align:center">值</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">x-axis</td>
<td style="text-align:center">定义视图被置于 X 轴的何处。可能的值： 	 	left 	center 	right 	<em>length</em> 	<em>%</em></td>
</tr>
<tr>
<td style="text-align:center">y-axis</td>
<td style="text-align:center">定义视图被置于 Y 轴的何处。可能的值： 	 	top 	center 	bottom 	<em>length</em> 	<em>%</em></td>
</tr>
<tr>
<td style="text-align:center">z-axis</td>
<td style="text-align:center">定义视图被置于 Z 轴的何处。可能的值： 	 	<em>length</em></td>
</tr>
</tbody>
</table>
<h3 id="backface-visibility属性"><a class="markdownIt-Anchor" href="#backface-visibility属性"></a> backface-visibility属性</h3>
<p><code>backface-visibility</code>属性决定元素旋转后背面是否可见，默认值为<code>visible</code>（可见），设置为<code>hidden</code>后背面不可见。</p>
<h2 id="基本变换类型"><a class="markdownIt-Anchor" href="#基本变换类型"></a> 基本变换类型</h2>
<p>其实学过计算机图形就差不多知道，在三维空间中，物体自身的所有变换都可以通过一个<code>4x4</code>的变换矩阵来表示：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180511/lAgic2hci2.gif" alt="mark" /></p>
<p>二维的变换可以用一个<code>3x3</code>矩阵来表示：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180511/Dj7a6mimGe.gif" alt="mark" /></p>
<p>计算方式就是将变换矩阵与元素的二维或三维坐标进行相乘，就能得到变换后的新坐标：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180511/CgeDKIg9JK.gif" alt="mark" /></p>
<p>所有的变换都是以<code>transform-origin</code>属性值作为<font color=red><strong>坐标原点</strong></font>，然后计算的。</p>
<h3 id="translate"><a class="markdownIt-Anchor" href="#translate"></a> translate</h3>
<p>即平移，平移就是相对于目前位置发生偏移；有<code>translate()</code>，<code>translateX()</code>，<code>translateY()</code>，<code>translateZ()</code>，<code>translate3d()</code>这几种可供选择。</p>
<h3 id="rotate"><a class="markdownIt-Anchor" href="#rotate"></a> rotate</h3>
<p>即旋转，依照旋转轴（如<code>X</code>轴）对元素进行旋转；变换函数名字与上面类似。</p>
<h3 id="scale"><a class="markdownIt-Anchor" href="#scale"></a> scale</h3>
<p>即缩放，相对于目前的坐标对点的坐标进行相应的放大或缩小；变换函数与上面类似。</p>
<h3 id="skew"><a class="markdownIt-Anchor" href="#skew"></a> skew</h3>
<p>即错切，通过在<code>X</code>轴方向（水平方向）上平移<code>x</code>坐标或在<code>Y</code>轴方向（垂直方向）上平移<code>y</code>坐标形成倾斜；只有二维的变换函数<code>skew()</code>，<code>skewX()</code>和<code>skewY()</code>；</p>
<h3 id="matrix"><a class="markdownIt-Anchor" href="#matrix"></a> matrix</h3>
<p>定义变换矩阵，分为<code>matrix()</code>（即二维的，<code>3x3</code>矩阵）和<code>matrix3d()</code>（即三维的，<code>4x4</code>矩阵）。可以说矩阵变换是上述所有变换的基础，即上述所有变换都可以通过矩阵变换实现！</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="http://www.w3school.com.cn/cssref/pr_transform-origin.asp">CSS3 transform-origin 属性</a></li>
<li><a href="https://www.w3ctech.com/topic/833">CSS3 Transform-3D空间变换成像原理浅析 - w3ctech</a></li>
<li><a href="https://blog.csdn.net/gloriazhang2013/article/details/69400152">透视投影的原理和实现 - CSDN博客</a></li>
<li><a href="https://blog.csdn.net/ruangong1203/article/details/54586051">css3 transform matrix 深入理解 - CSDN博客</a></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title>Cursor MCP实战之还原Figma设计稿</title>
    <url>/post/cursor-mcp-figma-design-restoration/</url>
    <content><![CDATA[<h1 id="mcp-是什么"><a class="markdownIt-Anchor" href="#mcp-是什么"></a> MCP 是什么？</h1>
<blockquote>
<p>MCP（Model Context Protocol，模型上下文协议）是由 Anthropic 在 2024 年底推出的一种开放协议，旨在通过标准化接口实现大语言模型（LLM）与外部数据源及工具的无缝集成。其核心采用客户端 - 服务器架构，客户端（如 AI 驱动的 IDE、聊天机器人）可通过协议发现并调用本地或远程的 MCP 服务器（如文件系统工具、GitHub 接口等），LLM 在推理过程中自主判断是否需要调用工具，再由服务器执行具体操作并将结果返回给模型，形成动态交互的工作流。该协议通过统一标准化的工具调用方式，解决了传统 AI 应用开发中碎片化 Agent 集成的问题，类似 USB-C 接口统一设备连接。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>简单地来说，MCP 赋予了 LLMs 进行<strong>标准化</strong>调用工具及获取数据的能力，由于是标准化协议，所有基于 MCP 实现的工具（Server）都可以被 MCP 客户端（如 Cursor、windsurf 这类 IDE）进行调用，其作用很类似当年微软提出的 LSP（该协议使得同一个编程语言 Server 能够在实现了 LSP 协议的客户端进行调用，大大地提高了 IDE 之间的编程语言插件复用效率）。同样地，由于 MCP 的存在，目前扩展 LLMs 能力的开发流程变得统一起来，因此尽管该协议目前（2025-03）才刚提出几个月，社区就已经实现了大量的基于 MCP 的工具，且该协议目前由 Anthropic 主推（这家公司的模型大家应该都不陌生吧，旗下的 Claude 就是目前编程模型界的 Top1），并得到了 Cursor、windsurf 和 Cline 等主流 AI IDE 和插件的支持，因此我很看好 MCP 的前景和发展潜力。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503141828648.png?imageslim" alt="image.png" /></p>
<span id="more"></span>
<p>关于 MCP 的技术细节和架构，我就不赘述了，除了官方文档 <sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup>，感兴趣的推荐看看这篇文章——<a href="https://guangzhengli.com/blog/zh/model-context-protocol/">MCP 终极指南</a>。</p>
<p>目前社区涌现出了很多优秀的 MCP server，有一些汇总的清单可以进行索引：</p>
<ul>
<li><a href="https://github.com/modelcontextprotocol/servers">modelcontextprotocol/servers: Model Context Protocol Servers</a> ：MCP 官方推荐名单</li>
<li><a href="https://mcp.ad/">MCP Servers</a> ：包括 Server 和 Client</li>
<li><a href="https://cursor.directory/mcp">MCP Servers for Cursor</a>：Cursor 官方推荐名单</li>
<li><a href="https://github.com/punkpeye/awesome-mcp-servers">punkpeye/awesome-mcp-servers: A collection of MCP servers.</a>：awesome 是开源社区传统习俗了，收录名单比较全</li>
</ul>
<p>按照这种发展速度，我觉得 AI IDE 里迟早有一天会出现 MCP server market 的😂。</p>
<h1 id="figma-context-mcp"><a class="markdownIt-Anchor" href="#figma-context-mcp"></a> Figma-Context-MCP</h1>
<p>之所以会有这篇文章，全是因为我在 MCP server 名单里看到了 <a href="https://github.com/GLips/Figma-Context-MCP">Figma-Context-MCP</a> 这个工具，我心想该不会现在真的可以直接从 Figma 文件还原 UI 稿了。于是我抱着试一试的心态准备用 Cursor 实现一个移动端页面，这一试给我吓到了，效果实在惊人。只能说念念不忘必有回响😅，前不久在用 Cursor 的时候我还在思考该怎么接入 UI 设计稿呢，这就解决了……</p>
<p>至于这个东西怎么用，特别简单，仅仅一句命令行就可以启动该 MCP server：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npx figma-developer-mcp --figma-api-key=&lt;your-figma-api-key&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">pnpx figma-developer-mcp --figma-api-key=&lt;your-figma-api-key&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">yarn dlx figma-developer-mcp --figma-api-key=&lt;your-figma-api-key&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">bunx figma-developer-mcp --figma-api-key=&lt;your-figma-api-key&gt;</span><br></pre></td></tr></table></figure>
<p>然后在 Cursor Settings 中添加该 Server 即可：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503141859619.png?imageslim" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503141900402.png?imageView2/2/w/400" alt="image.png" /></p>
<p>显示绿色即成功建立 SSE 连接：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503141902899.png?imageslim" alt="image.png" /></p>
<p>从图中不难看出，该 Server 提供两个工具：</p>
<ul>
<li>get_figma_data：从提供的 Figma url 获取 UI 稿节点的结构化数据</li>
<li>download_figma_images：下载 UI 稿中的图片资源到本地</li>
</ul>
<h1 id="实战部分"><a class="markdownIt-Anchor" href="#实战部分"></a> 实战部分</h1>
<blockquote>
<p><strong>注</strong>：以下使用的模型为 <code>Claude-3.7-sonnet</code>，项目框架为 <code>Vue3</code></p>
</blockquote>
<h2 id="ui-稿"><a class="markdownIt-Anchor" href="#ui-稿"></a> UI 稿</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503141145191.png?imageView2/2/w/360" alt="image.png" /></p>
<ul>
<li>地址：<a href="https://www.figma.com/design/H9pHzN4Danv46y5uHcXP8V/Payline-Payment-Method-(Community)?node-id=0-620&amp;t=z5CzClNWcRTquCVy-4">https://www.figma.com/design/H9pHzN4Danv46y5uHcXP8V/Payline-Payment-Method-(Community)?node-id=0-620&amp;t=z5CzClNWcRTquCVy-4</a></li>
</ul>
<p>这是我随便从 Figma 社区找的一个公开设计稿，不难看出这是一个移动端购物结算页面，结构不算复杂，但手写代码总归需要花点时间的。</p>
<h2 id="传统手工代码估时"><a class="markdownIt-Anchor" href="#传统手工代码估时"></a> 传统手工代码估时</h2>
<p>各位可以试着给实现该页面估一个时，因为后面对比环节杀伤力很大🤓。</p>
<ul>
<li><strong>极其乐观档</strong>：1h，假设代码特别熟练，键盘敲出火花</li>
<li><strong>疑似有点工贼档</strong>：4h，算给你面子了</li>
<li><strong>日常摸鱼档</strong>：8h，这才是常态</li>
</ul>
<h2 id="仅一次提示完成的效果"><a class="markdownIt-Anchor" href="#仅一次提示完成的效果"></a> 仅一次提示完成的效果</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503141149452.png?imageView2/2/w/400" alt="image.png" /><br />
<img src="https://pic.xiexuefeng.cc/markdown/202503141943296.png?imageView2/2/w/400" alt="image.png" /></p>
<p>很直白的提示词，贴出链接然后让 AI 实现页面并拆分组件，然后 Cursor 就一次性完了页面和组件的实现，得到效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503141146830.png?imageView2/2/w/360" alt="image.png" /></p>
<p>当我看到这个效果的时候，说实话特别震惊，也特别<strong>兴奋</strong>；尽管这个实现有问题，样式和布局都出现了错误，但我个人认为这种代码效果已至少已经完成了 UI 稿的 60%，剩下的样式我觉得手动花个 10 分钟就差不多可以还原了。然而，Cursor 配合 Figma MCP server 还原到这种级别的效果仅仅花了<strong>两分钟</strong>左右😅！不仅如此，我们还得了合理拆分的组件，以及推测得到的页面交互逻辑实现（它真的，我哭死，推测得还蛮准的）：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503141946973.png?imageView2/2/w/300" alt="image.png" /></p>
<p>在实现 Figma UI 稿的同时，如果把页面的产品交互文档也喂给 LLM，我相信连基本的交互逻辑也能帮你实现好，这已经不是简单的初始化模板的程度了。所以两分钟能实现到这种程度的细节，我们人类拿传统手工编写代码的模式怎么比得上这种效率呢，这速度都快提高一个数量级了😂；但好消息是这种大杀器工具可以为我们所用，不用白不用😎。</p>
<h2 id="最终效果"><a class="markdownIt-Anchor" href="#最终效果"></a> 最终效果</h2>
<p>秉承着<strong>能聊天就不写一行代码</strong>的原则，接下来我又花了<strong>一个多小时</strong>死磕 AI 帮我把样式尽可能 100% 地还原，这就是最后的效果：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503141307070.png?imageView2/2/w/360" alt="image.png" /></p>
<p>可以看出，还存在一些细节问题，主要的问题就是 SVG 图标没有完全从 Figma 设计稿中进行复制，而是自行发挥进行生成了类似的，其他的细节问题就几乎很少了。</p>
<h2 id="兴奋之余"><a class="markdownIt-Anchor" href="#兴奋之余"></a> 兴奋之余</h2>
<p>尽管两分钟还原的 UI 稿细节很让人兴奋，但随后还原剩余的细节居然要花了一个多小时这一点怎么想都有点不太对劲，其实这也是目前很多 LLM 能力上的缺陷——即无法<strong>一次性充分实现</strong>特别细节的地方，因此需要耐心一点<strong>逐个地</strong>告诉它具体是哪个地方的细节不对，而目标的效果应该如何。当然，也有提示词方面需要迭代尝试和 LLM 对于结构化数据理解不够的问题，比如一开始 LLM 对于购物项这一部分的布局实现有问题，于是我试着给出具体节点的 Figma 结构让 UI 进行修复：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503150928195.png?imageView2/2/w/400" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503150929134.png?imageView2/2/w/400" alt="image.png" /></p>
<p>经过几次沟通尝试后，我发现 AI 嘴里说着理解了实现有错误要进行修改，但是仍然没有修复指出的 UI 实现问题——哪怕是指出具体错误在哪里，它好像没法只从文字和 Figma 结构数据修复此处的问题，于是乎我把这一部分的设计稿截图发给 AI 然后再让其进行修复，果然就成功了：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503150933362.png?imageView2/2/w/300" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503150934969.png?imageView2/2/w/400" alt="image.png" /></p>
<p>所以不难发现目前的 LLM 还无法只从 Figma 结构化数据中就还原所有的细节，需要<strong>结合设计稿图片</strong>提高正确率。</p>
<h2 id="一个-figma-小技巧"><a class="markdownIt-Anchor" href="#一个-figma-小技巧"></a> 一个 Figma 小技巧</h2>
<p>在上面提到的把具体节点的 Figma 结构提供给 AI 时，有时候会遇到提供的 Figma 设计稿并没有严格按照结构层级进行组织的情况，因为有的设计师习惯直接扁平化把所有的页面元素放在同一层级，比如：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503150945446.png?imageView2/2/w/600" alt="image.png" /></p>
<p>左侧的购物项理论上就是一个完整的局部结构，但这个设计稿并没有完全按照层级的概念进行组织，因此这里没法直接复制成一个 Figma link：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503150948399.png?imageView2/2/w/600" alt="image.png" /></p>
<p>而目前没有链接就没法让 Figma MCP 进行读取指定节点的结构数据，但我们可以通过选取该区域的所有元素，然后将其新建成一个 Group：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503150950999.png?imageView2/2/w/600" alt="image.png" /></p>
<p>这样我们就得到了一个包含完整元素的局部结构，选中新建的 Group 就能复制该节点的 Figma 链接了：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503150958242.png?imageView2/2/w/800" alt="image.png" /></p>
<h1 id="切图仔又要回来了吗"><a class="markdownIt-Anchor" href="#切图仔又要回来了吗"></a> 切图仔又要回来了吗？</h1>
<p>在看到现在的 Agent 配合 MCP 工具能够如此迅速的还原 Figma 设计稿的时候，我不禁想起了被戏称为“切图仔”的古早的前端程序员，他们中很多人的职责都包括了简单的设计 UI 稿，然后把 UI 稿进行切图，顺便还原成页面代码。</p>
<p>”<strong>历史是螺旋上升的</strong>“，我觉得以目前 AI 的发展速度，以后包干设计和前端的”切图仔“真的能重出江湖了🙈，全干工程师也不是不可能。</p>
<h1 id="figma-context-mcp-常见问题"><a class="markdownIt-Anchor" href="#figma-context-mcp-常见问题"></a> Figma-Context-MCP 常见问题</h1>
<p>在 Cursor 中，默认调用 MCP 中工具时是需要人工批准的，所以如果一时间忘了批准，后面点击批准有概率出现请求超时导致 AI 没有获取到 Figma 数据（此时 AI 会重新申请一次调用工具，但貌似会丢失 Figma 的 node-id 参数）：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503141344644.png?imageslim" alt="image.png" /></p>
<p>此时需要到 MCP 设置页面，点击右侧的刷新按钮重新建立 SSE 连接才能正常调用工具；除此之外，在聊天使用过程中，MCP 的 SSE 连接有一定概率在一定时间后自动断开，导致工具调用失败；根据 <a href="https://github.com/GLips/Figma-Context-MCP/issues/29">Local Server gets Body Timeout error · Issue #29 · GLips/Figma-Context-MCP</a> 里面提到的方法，打开 Cursor 的 Yolo 模式（该模式不需要人工批准 AI 调用工具的申请，默认批准所有操作）这种情况会好一些。</p>
<h1 id="基于-mcp-开发模式的思考"><a class="markdownIt-Anchor" href="#基于-mcp-开发模式的思考"></a> 基于 MCP 开发模式的思考</h1>
<h2 id="面向-agent-开发"><a class="markdownIt-Anchor" href="#面向-agent-开发"></a> 面向 Agent 开发</h2>
<p>显然，在更通用和更智能的单一 Agent 出来之前，基于 MCP 的 Agent 能力扩展是很有效率的开发模式，每个 MCP server 实际上就是解决某个<strong>特定领域</strong>问题的高效工具，因此很契合实际业务的使用；只不过以前我们写这类工具是给人去使用的，但是 MCP server 是写给 Agent 去使用的。</p>
<p>最近正好看到一篇文章——<a href="https://mp.weixin.qq.com/s/RlIkPf_0NvY1zPhAxaZMFw">别再为人编写代码——未来属于 AI Agents</a>，我觉得里面提到的观点很有意思。目前 LLM 和 Agent 对于代码开发的介入越来越深，涉及的流程也越来越广，而且这个趋势肉眼可见的还在增长之中，我们真的有必要一定要让 AI 遵循以前由人定下来的开发规则吗？我认为以 MCP 的潜力，以后搞不好开发团队会出现一些专门写 MCP server 这类 Agent 工具的岗位，就类似现在在公司内部写基建的团队。</p>
<h2 id="兼容模式"><a class="markdownIt-Anchor" href="#兼容模式"></a> 兼容模式</h2>
<p>我能理解大多数的公司和开发团队都不太想把时间花在试错上，只想用一个相对成熟且稳定的解决方案；目前基于 Agent 的开发模式还不是很成熟，但使用 Agent 进行开发和传统的手工代码开发之间完全不是对立的，相反，由于目前 Agent 输出的代码完全是模仿人的规范和习惯，所以完全是一种<strong>进可攻退可守</strong>的方式，反正觉得 Agent 不行你自己上不就好了😂。</p>
<h2 id="如何在还原-figma-设计稿时使用已存在的业务组件"><a class="markdownIt-Anchor" href="#如何在还原-figma-设计稿时使用已存在的业务组件"></a> 如何在还原 Figma 设计稿时使用已存在的业务组件？</h2>
<p>更实际的使用场景应该是在一个老项目中使用 MCP 工具，进行 Figma 设计稿还原的同时还要求 LLM 使用<strong>已存在</strong>的业务组件或者项目使用的通用 UI 组件库。其实这个解决应该很简单，可以在提示词中加上诸如”尽可能地使用 components 文件夹下的组件和 xxx 库中的组件“的话语，不过既然有了 MCP，何不写一个专用的 MCP server 提供可用的组件列表到 LLM 上下文中呢😎。</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://modelcontextprotocol.io/introduction">https://modelcontextprotocol.io/introduction</a> <a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>AI IDE</tag>
        <tag>MCP</tag>
        <tag>Figma</tag>
        <tag>Agent</tag>
      </tags>
  </entry>
  <entry>
    <title>webGL中圆角矩形的绘制</title>
    <url>/post/draw-webgl-rounded-rectangle/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>在写<code>HTML</code>这类自带样式设置的渲染语言时，可能写出一个圆角矩形仅仅就是一个样式设置就搞定了；但是有没有想过，直接在<code>webGL</code>中用原生的着色器算法写出一个类似<code>CSS</code>圆角样式的效果怎么做？</p>
<span id="more"></span>
<h2 id="四角等价圆角效果的实现"><a class="markdownIt-Anchor" href="#四角等价圆角效果的实现"></a> 四角等价圆角效果的实现</h2>
<blockquote>
<p>所谓的四角等价圆角效果就是指：暂时考虑四个角的圆角效果一致，且圆角在水平和竖直方向的半径是一致的，换言之就是四个角共用一个参数；因为像CSS圆角效果目前是可以分别控制四个角以及圆角水平及竖直方向的半径的。</p>
</blockquote>
<p>绘制算法简单的来说就是：</p>
<ol>
<li>找到矩形区域的像素；</li>
<li>抠掉圆角区域外的像素；</li>
<li>圆角边缘区域抗锯齿处理（光滑过渡）；</li>
</ol>
<h3 id="矩形区域"><a class="markdownIt-Anchor" href="#矩形区域"></a> 矩形区域</h3>
<p>无论外层抽象数据的矩形区域如何确认，用何种距离单位；输入到顶点着色器内时，都需要将顶点坐标转为<code>NDC</code>坐标（标准化设备坐标），这之间的转换无非就是一个<font color=#f00>二维坐标系之间的映射</font>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201114170052.png?imageslim" alt="img" /></p>
<p>得到了矩形区域的顶点坐标，输入到片元着色器内就可以得到插值后的片元坐标（可以看做是像素坐标），然后进一步根据片元坐标来判断相应片元是否处于圆角区域之外了；</p>
<h3 id="抠掉圆角区域外的像素"><a class="markdownIt-Anchor" href="#抠掉圆角区域外的像素"></a> 抠掉圆角区域外的像素</h3>
<p>有了插值化的顶点NDC坐标和圆角半径参数就可以对圆角外的区域进行计算了，考虑到实际上是以像素作为单位，因此可以构建一个以<font color=#39f>矩形左上角为原点</font>，单位为像素的<strong>本地化坐标系</strong>，这样便于进行计算；</p>
<ol>
<li>分别计算四个角对应的圆中心位置在矩形本地坐标系中的位置；</li>
<li>判断片元是否位于四个角的区域内；</li>
<li>若片元位于四个角的区域内，判断是否位于中心圆的区域之外，位于区域外即可舍去（抠掉）；</li>
</ol>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201114170116.png?imageslim" alt="img" /></p>
<p>上述做法听起来很不错，但是这种像素级别的图形光栅化都会有一个问题，那就是<font color=#f00>曲线边缘会出现锯齿</font>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201114170128.png?imageslim" alt="img" /></p>
<h3 id="抗锯齿处理"><a class="markdownIt-Anchor" href="#抗锯齿处理"></a> 抗锯齿处理</h3>
<p>通用的抗锯齿做法就是在边缘附近做一个光滑过渡，而非粗暴的直接在边缘处进行直接切割；</p>
<ol>
<li>以边缘处（阈值，此处为圆角半径长度）为中心，将<code>±1</code>像素长度的范围内的值进行插值；</li>
<li>插值函数可以直接用<code>GLSL</code>自带的<a href="https://thebookofshaders.com/glossary/?search=smoothstep"><code>smoothstep</code>方法</a>即可；</li>
</ol>
<p>上述方法得到的效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201114170138.png?imageslim" alt="img" /></p>
<p>可以看到圆角边缘处光滑多了；</p>
<h2 id="着色器代码"><a class="markdownIt-Anchor" href="#着色器代码"></a> 着色器代码</h2>
<p>下面是针对上述算法实现的一个片元着色器，仅供参考；</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">precision</span> <span class="keyword">highp</span> <span class="type">float</span>; <span class="comment">// 高精度</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec2</span> u_Screen; <span class="comment">// 屏幕尺寸</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec4</span> u_Background; <span class="comment">// 背景色</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">float</span> u_Radius; <span class="comment">// 圆角半径</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec2</span> u_Size; <span class="comment">// 矩形尺寸（px）</span></span><br><span class="line"><span class="keyword">varying</span> <span class="type">vec2</span> v_Local; <span class="comment">// 局部坐标</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">bool</span> u_LinearGradient; <span class="comment">// 是否为线性渐变填充</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec4</span> u_FromColor;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec4</span> u_ToColor;</span><br><span class="line"><span class="type">vec2</span> topLeft = <span class="type">vec2</span>(<span class="number">1.0</span>) + u_Radius;</span><br><span class="line"><span class="type">vec2</span> topRight = <span class="type">vec2</span>(u_Size.x - u_Radius, <span class="number">1.0</span> + u_Radius);</span><br><span class="line"><span class="type">vec2</span> bottomLeft = <span class="type">vec2</span>(<span class="number">1.0</span> + u_Radius, u_Size.y - u_Radius);</span><br><span class="line"><span class="type">vec2</span> bottomRight = u_Size - u_Radius;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma glslify: linearGradient = require(./shader-function/linearGradient.glsl)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** 判断是否为圆角外区域 */</span></span><br><span class="line"><span class="type">float</span> isCorner() &#123;</span><br><span class="line">  <span class="type">float</span> d = <span class="number">0.0</span>; <span class="comment">// 距离所属圆角中心的距离</span></span><br><span class="line">  <span class="keyword">if</span> (v_Local.x &lt; u_Radius + <span class="number">1.0</span> &amp;&amp; v_Local.y &lt; u_Radius + <span class="number">1.0</span>) &#123; <span class="comment">// 左上</span></span><br><span class="line">    d = <span class="built_in">distance</span>(v_Local, topLeft);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (v_Local.x &gt; u_Size.x - u_Radius &amp;&amp; v_Local.y &lt; u_Radius + <span class="number">1.0</span>) &#123; <span class="comment">// 右上</span></span><br><span class="line">    d = <span class="built_in">distance</span>(v_Local, topRight);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (v_Local.x &lt; u_Radius + <span class="number">1.0</span> &amp;&amp; v_Local.y &gt; u_Size.y - u_Radius) &#123; <span class="comment">// 左下</span></span><br><span class="line">    d = <span class="built_in">distance</span>(v_Local, bottomLeft);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (v_Local.x &gt; u_Size.x - u_Radius &amp;&amp; v_Local.y &gt; u_Size.y - u_Radius) &#123; <span class="comment">// 右下</span></span><br><span class="line">    d = <span class="built_in">distance</span>(v_Local, bottomRight);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1.0</span> - <span class="built_in">smoothstep</span>(u_Radius - <span class="number">1.0</span>, u_Radius + <span class="number">1.0</span>, d); <span class="comment">// ±1像素的过渡光滑处理</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main() &#123;</span><br><span class="line">  <span class="type">float</span> corner = isCorner();</span><br><span class="line">  <span class="type">vec4</span> bgColor = u_LinearGradient ? linearGradient(u_FromColor, u_ToColor, u_Size, v_Local) : u_Background;</span><br><span class="line">  <span class="keyword">if</span> (corner == <span class="number">0.0</span>) &#123;</span><br><span class="line">    <span class="keyword">discard</span>; <span class="comment">// 废弃像素渲染比透明色更好</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">gl_FragColor</span> = corner * bgColor;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://iamvdo.me/en/blog/smooth-corners-with-css-houdini">Smooth corners with CSS Houdini - Vincent De Oliveira</a>：用<code>Houdini</code>绘制光滑圆角</li>
<li><a href="https://pcwalton.github.io/2015/12/21/drawing-css-box-shadows-in-webrender.html">https://pcwalton.github.io/2015/12/21/drawing-css-box-shadows-in-webrender.html</a></li>
<li><a href="https://www.vbforums.com/showthread.php?861187-RESOLVED-How-to-develop-a-border-smooth(anti-aliased)-rounded-rect-button-user-control"> [RESOLVED] How to develop a border smooth(anti-aliased) rounded-rect button user control?-VBForums</a>：光滑圆角的绘制</li>
<li><a href="https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-and-alpha.html">WebGL 和阿尔法通道</a>：webGL中alpha通道混合的一些注意点</li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>计算机图形</tag>
        <tag>webGL</tag>
      </tags>
  </entry>
  <entry>
    <title>ESLint配置参数</title>
    <url>/post/eslint-config/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>要将代码规范落实不仅是靠个人自觉的遵守，还得需要一个工具可以进行强制性地检测校验，这样就能真正地将规范落实到实处。而<code>ESLint</code>就是用来检测<code>JS(X)/TS(X)</code>代码的不二选择。</p>
<span id="more"></span>
<h2 id="常用参数"><a class="markdownIt-Anchor" href="#常用参数"></a> 常用参数</h2>
<h3 id="extends"><a class="markdownIt-Anchor" href="#extends"></a> extends</h3>
<p>用来继承已有的<code>ESLint</code>配置，这个配置可以是内置的，也可以是<code>npm</code>插件；其值的格式有字符串和字符串数组两种；</p>
<h4 id="字符串"><a class="markdownIt-Anchor" href="#字符串"></a> 字符串</h4>
<p>当只是一个字符串时，这个字符串可以是：</p>
<ul>
<li>配置文件<strong>路径</strong>；</li>
<li>共享配置名称（即<code>npm</code>插件）；当<code>npm</code>插件名称为<code>eslint-config-*</code>格式时，可以省略前面的<code>eslint-config-</code>前缀，如：<code>eslint-config-airbnb</code>可以直接写成<code>airbnb</code>；</li>
<li><code>ESLint</code>内置集成的配置；如：<code>eslint:recommended</code>，<code>eslint:all</code>；</li>
</ul>
<h4 id="字符串数组"><a class="markdownIt-Anchor" href="#字符串数组"></a> 字符串数组</h4>
<p>数组形式，每个字符串都可以是上述格式；但是数组中<strong>后面的配置会覆盖前面的配置</strong>（当出现相同规则时）；如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">extends</span>: [</span><br><span class="line">        <span class="string">&#x27;plugin:vue/strongly-recommended&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;@vue/standard&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;@vue/typescript/recommended&#x27;</span> <span class="comment">// ts检测</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="env"><a class="markdownIt-Anchor" href="#env"></a> env</h3>
<p><code>env</code>参数可以设置代码环境，启用一个环境，<code>eslint</code>就能够自动识别对应环境所有的<strong>全局变量</strong>；常用的环境有：</p>
<ul>
<li><code>browser</code>：浏览器环境；</li>
<li><code>node</code>：<code>Node.js</code>环境；</li>
<li><code>shared-node-browser</code>：浏览器和<code>Node.js</code>通用的全局变量；</li>
<li><code>es6</code>：启用除了<code>modules</code>以外的所有<code>ECMAScript 6</code>特性；</li>
<li><code>jquery</code>：<code>jQuery</code>相关全局变量；</li>
<li><code>worker</code>：<code>Web Worker</code>环境；</li>
</ul>
<p>除了上述的环境，<code>eslint</code>还支持很多比较常用的库作为环境（支持其全局变量），详情可以参考<a href="https://cn.eslint.org/docs/user-guide/configuring#specifying-environments">官方文档</a>；</p>
<p><code>env</code>的设置方式很简单，其值为一个对象，当需要开启某个环境时，只需要将对应环境的值设置为<code>true</code>即可：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">env</span>: &#123;</span><br><span class="line">        <span class="attr">node</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="parseroptions"><a class="markdownIt-Anchor" href="#parseroptions"></a> parserOptions</h3>
<p><code>parserOptions</code>是用来设置要支持检测的<code>ES</code>语法版本的；其设置值也是一个<strong>对象</strong>，包含三个选项（键）：</p>
<ul>
<li><code>ecmaVersion</code>：用来设置支持的<code>ECMAScript</code>语言版本；可以是<code>3</code>，<code>5</code>，<code>6</code>这种经典版本号，也可以是用年份来设置版本号，如：<code>2015</code>（同<code>6</code>），<code>2020</code>（同<code>11</code>）；<code>ES6</code>及其之后的版本就可以使用对应的年份来设置版本号。<strong>默认值是<code>5</code></strong>。</li>
<li><code>sourceType</code>：具体作用细节还不清楚，网上找不到详细的资料；目前有两个选项，一个是<code>script</code>（脚本模式，<strong>默认值</strong>），另一个是<code>module</code>（<code>ES</code>模块）；</li>
<li><code>ecmaFeatures</code>：用于设置一些<strong>额外的语言特性</strong>，比如<code>JSX</code>等等；</li>
</ul>
<h4 id="ecmafeatures"><a class="markdownIt-Anchor" href="#ecmafeatures"></a> ecmaFeatures</h4>
<p>目前支持的额外语言特性有<code>4</code>个：</p>
<ul>
<li><code>jsx</code>：<code>JSX</code>语法；</li>
<li><code>impliedStrict</code>：全局<code>strict</code>模式；</li>
<li><code>globalReturn</code>：全局作用域使用<code>return</code>语句；</li>
<li><code>experimentalObjectRestSpread</code>：实验性功能，对象属性展开及剩余操作（目前该特性已经为<code>stage-4</code>了，<code>ES2018</code>）；</li>
</ul>
<p>该属性设置方式同<code>env</code>一样，设置为<code>true</code>则开启，反之<code>false</code>则关闭；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">parserOptions</span>: &#123;</span><br><span class="line">        <span class="attr">ecmaVersion</span>: <span class="number">2020</span>,</span><br><span class="line">        <span class="attr">ecmaFeatures</span>: &#123;</span><br><span class="line">            <span class="attr">jsx</span>: <span class="literal">false</span> <span class="comment">// 关闭对jsx的支持</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="parser"><a class="markdownIt-Anchor" href="#parser"></a> parser</h3>
<p>设置<code>ESLint</code>的解析器，解析器用来解析代码的语法树；其默认解析器为<code>Espree</code>，但是还有其他可以兼容的解析器（需要单独安装相应的<code>npm</code>包）：</p>
<ul>
<li><code>esprima</code></li>
<li><code>babel-eslint</code>：对<code>babel</code>的封装；</li>
<li><code>@typescript-eslint/parser</code>：支持对<code>TS</code>文件的解析；</li>
</ul>
<p>好像也可以直接在<code>parserOptions</code>里面设置<code>parser</code>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">parserOptions</span>: &#123;</span><br><span class="line">        <span class="attr">parser</span>: <span class="string">&#x27;@typescript-eslint/parser&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="root"><a class="markdownIt-Anchor" href="#root"></a> root</h3>
<p>由于<code>ESLint</code>配置默认遵循层叠原则，即每级目录可以单独配置<code>.eslintrc.*</code>相关文件，如果该级目录没有文件<strong>则会向上一级查找直至根目录</strong>；不过如果设置<code>root</code>为<code>true</code>之后，项目中所有的检测文件不再会遵循层叠原则，而是统一以根目录中的配置文件为准来检测代码。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">root</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="rules"><a class="markdownIt-Anchor" href="#rules"></a> rules</h3>
<p>除了继承已有的配置，还能手动修改通过<code>rules</code>属性来手动修改<code>ESLint</code>相关配置；每个检测规则都有其独特的键名，当要修改某条规则时，则使用键名然后设置相应的值即可；<code>ESLint</code>自带的规则表可以查看<a href="http://eslint.cn/docs/rules/">官方文档</a>，使用其它<code>ESLint</code>插件则需要查看对应插件给出的规则；</p>
<p>每个规则都遵循一些简单的设置：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200531213836.jpg?imageslim" alt="img" /></p>
<p>有些规则可能支持更详细的配置，比如数组，对象等等；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;no-console&#x27;</span>: <span class="string">&#x27;off&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;no-debugger&#x27;</span>: process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span> ? <span class="string">&#x27;error&#x27;</span> : <span class="string">&#x27;off&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;generator-star-spacing&#x27;</span>: <span class="string">&#x27;off&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;no-mixed-operators&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;vue/max-attributes-per-line&#x27;</span>: [</span><br><span class="line">      <span class="number">2</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&#x27;singleline&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">&#x27;multiline&#x27;</span>: &#123;</span><br><span class="line">          <span class="string">&#x27;max&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="string">&#x27;allowFirstLine&#x27;</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="overrides"><a class="markdownIt-Anchor" href="#overrides"></a> overrides</h3>
<p><code>overrides</code>可以匹配特定的文件，然后专门为其设置相应的<code>ESLint</code>配置（相当于一个<strong>优先级更高</strong>的配置文件）；</p>
<h4 id="files"><a class="markdownIt-Anchor" href="#files"></a> files</h4>
<p>通过这个参数可以<strong>来匹配特定的文件</strong>，其语法遵循<a href="https://github.com/isaacs/node-glob"><code>glob</code>匹配模式</a>；值的形式为数组，数组中每个字符串代表一个匹配模式，如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">overrides</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">files</span>: [</span><br><span class="line">            <span class="string">&#x27;**/__tests__/*.&#123;j,t&#125;s?(x)&#x27;</span>, <span class="comment">// 匹配jsx/tsx</span></span><br><span class="line">            <span class="string">&#x27;**/tests/unit/**/*.spec.&#123;j,t&#125;s?(x)&#x27;</span> <span class="comment">// 匹配单元测试脚本</span></span><br><span class="line">          ],</span><br><span class="line">          <span class="attr">env</span>: &#123;</span><br><span class="line">            <span class="attr">jest</span>: <span class="literal">true</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">files</span>: [</span><br><span class="line">            <span class="string">&#x27;*.js&#x27;</span> <span class="comment">// 匹配所有的js文件</span></span><br><span class="line">          ],</span><br><span class="line">          <span class="attr">rules</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;@typescript-eslint/no-var-requires&#x27;</span>: <span class="literal">false</span> <span class="comment">// 关闭typescript-eslint对js文件检测require语句</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://cn.eslint.org/docs/user-guide/configuring">Configuring ESLint - ESLint中文</a></li>
<li><a href="https://www.jianshu.com/p/ad1e46faaea2">Eslint 超简单入门教程 - 简书</a></li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>ESLint</tag>
      </tags>
  </entry>
  <entry>
    <title>域名解析二三事</title>
    <url>/post/domain-parse/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>最近想要把搭建的<code>api</code>服务器和部署项目的路径用二级域名进行关联，以方便进行访问，免得一大串的地址和端口暴露出来。但是发现有时候域名解析还真不是那种随意就能正确的得到自己想要的结果……</p>
<span id="more"></span>
<h2 id="一些域名解析类型"><a class="markdownIt-Anchor" href="#一些域名解析类型"></a> 一些域名解析类型</h2>
<p>域名的解析也分很多种，以下列出的是我用的比较多的几种类型。</p>
<h3 id="a类型"><a class="markdownIt-Anchor" href="#a类型"></a> A类型</h3>
<p><code>A</code>类型可以将主机记录（二级域名）指向一个<code>ipv4</code>类型的<code>ip</code>地址；但是需要注意的是，该类型<font color=red><strong>不能在<code>ip</code>地址后加上端口</strong></font>；比如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">主机记录：xx.test.com</span><br><span class="line">记录值：aa.bb.cc.dd</span><br></pre></td></tr></table></figure>
<p>上述记录的意思就是访问<code>xx.test.com</code>的时候实际上是访问<code>ip</code>地址为<code>aa.bb.cc.dd</code>的主机；但是如果在<code>ip</code>地址后加上端口号：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">记录值：aa.bb.cc.dd:port</span><br></pre></td></tr></table></figure>
<p>以上的记录值是<font color=red><strong>非法</strong></font>的；其实我就是想将<strong>某个二级域名直接解析到主机的某个端口</strong>，然后尝试无果……</p>
<h3 id="cname类型"><a class="markdownIt-Anchor" href="#cname类型"></a> CNAME类型</h3>
<p><code>CNAME</code>类型的记录可以将当前记录指向另一个域名；需要注意的是<font color=red><strong>仅仅是域名，不能在域名的后面添加路径或参数</strong></font>！！！</p>
<p>合法记录值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xx.test.com</span><br><span class="line">test.com</span><br><span class="line">www.test.com</span><br></pre></td></tr></table></figure>
<p><font color=red><strong>非法</strong></font>记录值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">test.com/path/</span><br><span class="line">test.com/123.html</span><br><span class="line">test.com?a=b</span><br></pre></td></tr></table></figure>
<h3 id="url转发"><a class="markdownIt-Anchor" href="#url转发"></a> URL转发</h3>
<p><code>URL</code>转发就是将当前记录跳转到另一个<code>url</code>地址，因此只要是<code>url</code>地址可以访问的，都可以用来转发；不过<code>URL</code>转发还分为显性<code>URL</code>转发和隐性<code>URL</code>转发，它们的区别在于：</p>
<p><ins>显性<code>URL</code>转发</ins>使用<code>301</code><font color=#39f><strong>永久重定向</strong></font>，即地址栏上的<code>url</code>地址会换成转发后的<code>url</code>地址，而非当前记录使用的<code>url</code>地址；而<ins>隐性<code>URL</code>转发</ins>使用的是<code>302</code><font color=#39f><strong>临时重定向</strong></font>，访问时浏览器地址栏依然是当前记录使用的<code>url</code>地址，但是<strong>实际访问</strong>的是转发的<code>url</code>地址。</p>
<p><font color=red><strong>注</strong></font>：但是实际使用时我发现，如果访问当前记录（域名地址）的路径或参数形式时，并不是把域名部分替换成转发的<code>url</code>然后加上后面的路径或参数，而照样只是访问之前的转发<code>url</code>地址；如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">类型：URL转发</span><br><span class="line">主机记录：xx.test.com</span><br><span class="line">记录值：another.com/abc</span><br></pre></td></tr></table></figure>
<p>当我访问<code>xx.test.com/someting</code>时，实际上跳转的还是<code>another.com/abc</code>而非想象中的<code>another.com/abc/something</code>；访问<code>xx.test.com?aa=bb</code>时，实际上跳转的也还是<code>another.com/abc</code>而非想象中的<code>another.com/abc?aa=bb</code>；所以我就很疑惑，这到底是本身就是这样的设计，还是我的设置有问题？如果本身设计就是这样，那未免有点太鸡肋了……</p>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>浅尝 CSS Houdini</title>
    <url>/post/first-test-css-houdini/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>近几年，浏览器的特性频出，特别是一些开放浏览器底层控制的<code>API</code>规范，比如：<code>WebAssembly</code>，<code>CSS Houdini</code>，<code>WebGL2.0</code>等；这些底层<code>API</code>使得我们有机会定制更多的内容，而且拥有更好的性能，因此也就获得了更多的创造性。</p>
<p>关于<code>CSS Houdini</code>也是近两年才听的比较多，只知道大概是一个自定义<code>CSS</code>属性的利器，也没比较详细的去了解，算是比较前沿的<code>CSS</code>规范了；看过一些案例后，觉得<code>CSS Houdini</code>确实能够做出一些十分强大的展示和动效，是时候深入了解一下了。</p>
<span id="more"></span>
<h2 id="css-houdini-现状"><a class="markdownIt-Anchor" href="#css-houdini-现状"></a> CSS Houdini 现状</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200712180009.png?imageslim" alt="img" /></p>
<p>上图<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>是截至目前为止（2020-7-11）各浏览器厂商对于<code>CSS Houdini</code>规范各个模块的支持情况，可以看到目前只有<code>blink</code>内核（<code>chrome</code>系）浏览器对于<code>CSS Houdini</code>有较好的支持，而<code>webkit</code>内核则是处于开发中，<code>firefox</code>那就只是有意图去实现，连开发阶段都没有进入；</p>
<p>而且可以看到，即便是<code>CSS Houdini</code>规范，<code>blink</code>内核对不同模块的支持程度也不一样；目前<code>Paint API</code>，<code>Properties &amp; Values API</code>，<code>Typed OM</code>完全支持；其他模块不是没有开发进度就是很少的部分特性支持，基本上用处不大；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200712180035.png?imageslim" alt="img" /></p>
<p>再看下<a href="https://caniuse.com/#search=houdini">caniuse网站</a>的统计，<strong>移动端</strong>那就更加惨烈了，只有安卓原生浏览器和安卓<code>Chrome</code>浏览器有支持，而且要求版本还比较高（2020-4月后才支持）；</p>
<p>所以<code>CSS Houdini</code>目前支持程度有限，仅在<code>blink</code>内核浏览器有用武之处，真实应用场景会大打折扣；</p>
<h2 id="css-houdini-规范"><a class="markdownIt-Anchor" href="#css-houdini-规范"></a> CSS Houdini 规范</h2>
<h3 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h3>
<p>那么为何要提出<code>CSS Houdini</code>规范？</p>
<p>首先，因为目前<code>CSS</code>很多属性在各个内核上可能有表现差异，导致兼容性问题，且原生<code>polyfill</code>几乎没有可能；</p>
<p>其次，<code>CSS</code>很多新特性从提案，<code>W3C</code>纳入规范再到厂商最终实现可能要面临几年以上的时间，这个流程极大地耗费开发者的耐心及应用推广；因此每次出现新特性提案时大多数人都会调侃说到等几年后再试试；</p>
<p><code>CSS Houdini</code>规范正是为了解决上述问题而提出的，通过暴露<code>CSS</code>引擎渲染相关的流程，使得渲染不再是黑盒，而是变得可控，这样样式和渲染的决定权就交到了开发者的手里，也就能解决上述的问题（当然，前提是所有浏览器都支持<code>CSS Houdini</code>规范……）。</p>
<h3 id="作用"><a class="markdownIt-Anchor" href="#作用"></a> 作用</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200712180051.png?imageslim" alt="img" /></p>
<p>上图<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>解释了<code>CSS Houdini</code>规范中每个模块具体作用于<code>CSS</code>渲染的哪个流程，从图中可以看出<code>CSS Houdini</code>规范的野心很大，试图掌控整个<code>CSS</code>渲染流程（这对于开发者来说肯定是个好消息）；</p>
<ul>
<li><code>CSS Parsing API</code>：用于解析<code>CSS</code>词法结构，也就是对于渲染中解析器工作的部分；</li>
<li><code>CSS Typed OM</code>：从<code>CSS Houdini</code>规范草案可以看出，<code>CSS Typed OM</code>是<code>CSSOM</code>的高性能版本，是直接将<code>CSS</code>值转化为类<code>JS</code>对象，从而减少中间层的转换；</li>
</ul>
<blockquote>
<p>Converting CSSOM value strings into meaningfully typed JavaScript representations and back can incur a significant performance overhead. This specification exposes CSS values as typed JavaScript objects to facilitate their performant manipulation.<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
</blockquote>
<ul>
<li><code>CSS Properties &amp; Values API</code>：对<code>CSS</code>自定义属性进行指定值类型等相关配置，指定值类型后自定义属性就能够被应用于动画；</li>
<li><code>CSS Layout API</code>：用于控制渲染中的布局（<code>Layout</code>）流程，从而可以自己增加<code>display</code>类型；</li>
<li><code>CSS Painting API</code>：用于控制渲染中的绘制（<code>Paint</code>）流程，对于元素样式达到<font color=#39f>像素级</font>的控制，且绘制<code>API</code>是<code>canvas</code>的子集，方便上手；</li>
<li><code>Worklets</code>：类似于<code>Web Worker</code>，是独立于主线程的脚本文件，只能使用指定的<code>API</code>，专门用于存放注册布局和绘制相关的代码；</li>
<li><code>Composited Scrolling &amp; Animation</code>：复合滚动和动画<code>API</code>，目的是在<code>worklets</code>中支持滚动（位置）及动画变化，使得相应的属性变化<font color=#f00>不会引起主线程中的重排和重绘</font>，从而拥有高性能的滚动及动画表现；目前<code>blink</code>内核已经实现了一部分<code>Animation Worklet</code><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>；</li>
</ul>
<h2 id="css-properties-values-api-简介"><a class="markdownIt-Anchor" href="#css-properties-values-api-简介"></a> CSS Properties &amp; Values API 简介</h2>
<p>这部分的<code>API</code>很简洁，主要是定义了<code>CSS</code>自定义属性的一些性质；<code>API</code>包含<code>CSS.registerProperty()</code>方法和<code>@property</code>规则，而这两个本质上作用是一样的，前者是在<code>JS</code>中使用，后者是在<code>CSS</code>中使用；</p>
<h3 id="cssregisterproperty"><a class="markdownIt-Anchor" href="#cssregisterproperty"></a> CSS.registerProperty()</h3>
<blockquote>
<p>CSS.registerProperty(PropertyDefinition)<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p>
</blockquote>
<p>该方法接收一个配置对象，该对象有以下几个属性：</p>
<ul>
<li><code>name</code>：<font color=#f00>必填</font>，自定义属性名（注意要包含前面的<code>--</code>）；</li>
<li><code>syntax</code>：可选，指定自定义属性的<font color=#39f>语法值类型</font>；可用的值类型可以参考<a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Values_and_units">CSS的值与单位 - 学习 Web 开发 | MDN</a>，默认值为<code>&quot;*&quot;</code>；</li>
<li><code>inherits</code>：自定义属性值是否可以被继承，默认为<code>false</code>（不能被继承）；</li>
<li><code>initialValue</code>：可选，自定义属性的初始值；</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 先判断API是否能用</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;registerProperty&#x27;</span> <span class="keyword">in</span> <span class="variable constant_">CSS</span> &amp;&amp; <span class="string">&#x27;CSSUnitValue&#x27;</span> <span class="keyword">in</span> <span class="variable language_">window</span>) &#123;</span><br><span class="line">  <span class="variable constant_">CSS</span>.<span class="title function_">registerProperty</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;--circle-color&#x27;</span>,</span><br><span class="line">    <span class="attr">syntax</span>: <span class="string">&#x27;&lt;color&gt;&#x27;</span>,</span><br><span class="line">    <span class="attr">initialValue</span>: <span class="string">&#x27;#39f&#x27;</span>,</span><br><span class="line">    <span class="attr">inherits</span>: <span class="literal">false</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面就是一个注册自定义属性的例子，定义了具体值类型的自定义属性就能够被用于动画了（即可以自动生成关键帧了）；<code>CSSUnitValue</code>是<code>CSS Typed OM</code>规范中的一个<code>API</code>，<code>CSS.registerProperty()</code>对其有依赖；</p>
<h3 id="property"><a class="markdownIt-Anchor" href="#property"></a> @property</h3>
<p><code>@property</code>规则语法和<code>CSS.registerProperty()</code>类似：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@property</span> --circle-color &#123;</span><br><span class="line">  syntax: <span class="string">&#x27;&lt;color&gt;&#x27;</span>;</span><br><span class="line">  inherits: false;</span><br><span class="line">  initial-value: <span class="number">#39f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="css-painting-api-简介"><a class="markdownIt-Anchor" href="#css-painting-api-简介"></a> CSS Painting API 简介</h2>
<p><code>CSS Painting API</code>主要是由<code>PaintWorklet</code>组成，<code>PaintWorklet</code>定义了一套该类型<code>worklet</code>内所能访问的全局对象（<code>PaintWorkletGlobalScope</code>），绘制上下文（<code>PaintRenderingContext2D</code>，是<code>CanvasRenderingContext2D API</code>的子集）及注册和加载方法；</p>
<h3 id="注册"><a class="markdownIt-Anchor" href="#注册"></a> 注册</h3>
<p>在<code>worklet</code>文件（也是<code>JS</code>文件）内使用<code>registerPaint()</code>进行注册，该方法接收两个参数：</p>
<blockquote>
<p>registerPaint(name, class)<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup></p>
</blockquote>
<ul>
<li><code>name</code>：该<code>paintWorklet</code>的名称，用于在<code>CSS</code>中进行引用；</li>
<li><code>class</code>：实现该<code>paintWorklet</code>的类；</li>
</ul>
<p>其中类可以实现以下（抽象）成员或方法：</p>
<ul>
<li>
<p><code>static get inputProperties()</code>：返回一个数组，包含绘制函数<font color=#39f>所需要的属性</font>（包括自定义属性）；</p>
</li>
<li>
<p><code>static get inputArguments()</code>：返回一个数组，指定传入绘制函数的<font color=#39f>参数语法类型</font>（类似于<code>registerProperty</code>方法中的<code>syntax</code>参数）；</p>
</li>
<li>
<p><code>static get contextOptions()</code>：返回一个配置对象，用于设置绘制上下文（<code>PaintRenderingContext2D</code>）；</p>
</li>
<li>
<p><code>paint(ctx, size, props, args)</code>：<font color=#f00>必须实现</font>；绘制函数接收四个函数：</p>
<ul>
<li><code>ctx</code>：绘制上下文，即当前<code>paintWorklet</code>对应的<code>PaintRenderingContext2D</code>实例；</li>
<li><code>size</code>：<code>PaintSize</code>对象，包含<code>width</code>和<code>height</code>两个属性，即<code>paintWorklet</code>作用的<font color=#39f>元素的尺寸信息</font>；</li>
<li><code>props</code>：<code>StylePropertyMapReadOnly</code>对象，只能访问由<code>inputProperties</code>属性返回的属性；</li>
<li><code>args</code>：参数数组，可以接收由<code>CSS paint()</code>函数传入的参数；</li>
</ul>
</li>
</ul>
<h4 id="关于-stylepropertymapreadonly-对象"><a class="markdownIt-Anchor" href="#关于-stylepropertymapreadonly-对象"></a> 关于 StylePropertyMapReadOnly 对象</h4>
<p>该对象类似于<code>Map</code>对象，但是不能<code>set</code>，因此是只读的；通过<code>get()</code>方法可以获取到对应属性，不过得到并不是属性值，而是一个<code>CSSStyleValue</code>对象（属于<code>CSS Typed OM</code>），不同<code>syntax</code>类型的属性会有不同类型的<code>CSSStyleValue</code>对象；</p>
<p>不过一般来说数值类型的属性值可以通过<code>value</code>属性来获取值，颜色类型则通过<code>toString()</code>方法来获取值，如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> boxColor = props.<span class="title function_">get</span>(<span class="string">&#x27;--box-color&#x27;</span>).<span class="title function_">toString</span>()</span><br><span class="line"><span class="keyword">const</span> boxWidth = props.<span class="title function_">get</span>(<span class="string">&#x27;--box-width&#x27;</span>).<span class="property">value</span></span><br></pre></td></tr></table></figure>
<h3 id="加载"><a class="markdownIt-Anchor" href="#加载"></a> 加载</h3>
<p>事实上，worklet的加载方式很类似，都是通过<code>addModule(url)</code>方法来进行：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 先判断paintWorklet是否可用</span></span><br><span class="line"><span class="keyword">if</span> (<span class="string">&#x27;paintWorklet&#x27;</span> <span class="keyword">in</span> <span class="variable constant_">CSS</span>) &#123;</span><br><span class="line">  <span class="variable constant_">CSS</span>.<span class="property">paintWorklet</span>.<span class="title function_">addModule</span>(<span class="string">&#x27;worklet-path.js&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注</strong>：<font color=#f00><code>worklet</code>文件地址仅支持<code>https</code>和<code>localhost</code>方式</font>！</p>
<h3 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h3>
<p><code>paintWorklet</code>加载后就能够在<code>CSS</code>中进行使用了，可以使用<code>paint(name)</code>函数来启用<code>worklet</code>，<code>name</code>就是<font color=#39f>注册时传入的名称</font>；</p>
<ul>
<li><code>name</code><font color=#f00>不需要加上引号</font>！</li>
<li><code>paint()</code>函数返回值类型为<code>&lt;image&gt;</code>，因此<font color=#f00>只能在属性值类型为<code>&lt;image&gt;</code>的属性中</font>进行使用！如：<code>background-imgae</code>，<code>list-style-image</code>等；更多关于<code>&lt;image&gt;</code>类型的信息可以参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/image"><image> - CSS（层叠样式表） | MDN</a>；</li>
</ul>
<h4 id="传参"><a class="markdownIt-Anchor" href="#传参"></a> 传参</h4>
<p><code>paint()</code>函数也能传参，然后被<code>paintWorklet</code>中的<code>paint()</code>方法所接收：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">paint(paint-name, arg1, arg2, ...)</span><br></pre></td></tr></table></figure>
<h2 id="一个案例"><a class="markdownIt-Anchor" href="#一个案例"></a> 一个案例</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200712180104.gif?imageslim" alt="img" /></p>
<p>看到上面这个动画，在不使用<code>CSS Houdini</code>之前，很难想象纯<code>CSS</code>能够得到这样的效果；</p>
<ul>
<li><a href="https://codepen.io/xxf1996/full/GRoBRNG">在线demo</a></li>
<li><a href="https://github.com/xxf1996/houdini-test/">demo源码</a></li>
</ul>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://juejin.im/post/5adc091b51882567105f5586">用CSS Houdini画一片星空 - 掘金</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/20939640">Houdini：CSS 领域最令人振奋的革新 - 知乎</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Houdini">CSS Houdini | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CSS_Properties_and_Values_API/guide">Using the CSS properties and values API - Web APIs | MDN</a></li>
<li><a href="https://www.w3ctech.com/topic/1816">Houdini工作小组关于CSS的揭秘 - w3ctech</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/35410151">和 Houdini, CSS Paint API 打个招呼吧 - 知乎</a>：<code>CSS Paint API</code>入门体验</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly">StylePropertyMapReadOnly - Web APIs | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model#CSS_Typed_Object_Model">CSS Object Model (CSSOM) - Web APIs | MDN</a>：<code>CSS Typed OM</code>一览</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CSS_Painting_API">CSS Painting API - Web APIs | MDN</a>：<code>CSS Painting API</code> demo</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://ishoudinireadyyet.com/">Is Houdini Ready Yet?</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/20939640">Houdini：CSS 领域最令人振奋的革新 - 知乎</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://drafts.css-houdini.org/css-typed-om">https://drafts.css-houdini.org/css-typed-om</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://developers.google.com/web/updates/2018/10/animation-worklet">https://developers.google.com/web/updates/2018/10/animation-worklet</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CSS/RegisterProperty">CSS.registerProperty() - Web APIs | MDN</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/PaintWorklet/registerPaint">PaintWorklet.registerPaint - Web APIs | MDN</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>动效</tag>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>GAMES101大作业之SDF场景渲染</title>
    <url>/post/games101-sdf/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>由于在不久前终于完成了整个<a href="https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html"><code>GAMES101</code>课程</a>的视频学习（当然除了大作业以外的作业也认真弄了），所以终于可以来挑战一下大作业了；虽然可以自由组织项目，但是作为菜鸟个人觉得课程给出的大作业选题就足够有意思和有挑战了（主要是想不出……），而且这里的选题符合课程内容方向，也比较容易去上手和扩展。</p>
<p>反正一眼扫过去，第一想要做的就是这个了：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174019.png?imageslim" alt="img" /></p>
<p>因为这个一看就知道，只需要写片段着色器就好了，不需要操作其他的数据了，因而用<code>webGL</code>也正好；然后打开相关的资料一看，这作者太熟悉了，著名的<code>iq</code>大神（<code>ShaderToy</code>网站的创建者，且热衷于在其<a href="https://www.iquilezles.org/index.html">博客</a>上分享各种图形学的干货内容，其制作的各种着色器<code>demo</code>或动画更是令人惊奇）：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174048.png?imageslim" alt="img" /></p>
<p><code>iq</code>在上述场景渲染的演讲<code>PPT</code>中虽然没有给出完整的着色器代码，但是关于渲染的各种重要部分都给出了伪代码和原理讲解，所以推荐仔细阅读这个<code>PPT</code>；</p>
<p>不过，尽管这种渲染方式无需准备复杂场景的顶点数据和繁琐的矩阵变换等等，但绝不代表着就很容易实现。</p>
<h3 id="实现效果"><a class="markdownIt-Anchor" href="#实现效果"></a> 实现效果</h3>
<p><a href="https://xiexuefeng.cc/app/we/demo/games101-sdf/">https://xiexuefeng.cc/app/we/demo/games101-sdf/</a></p>
<span id="more"></span>
<h2 id="场景搭建"><a class="markdownIt-Anchor" href="#场景搭建"></a> 场景搭建</h2>
<h3 id="sdf"><a class="markdownIt-Anchor" href="#sdf"></a> SDF</h3>
<p><code>SDF</code>，即<code>signed distance function/field</code>（有向距离函数/场）；原理很简单，给定某个点的坐标，距离函数可以得到该点在场景中距离最近的点的距离，如果距离<strong>为正</strong>则表明该点在<font color=#f00>物体外面</font>，<strong>为负</strong>则在<font color=#f00>物体内部</font>；更多的原理讲解可以参考这篇文章——<a href="https://zhuanlan.zhihu.com/p/93901692">Signed Distance Field(基础篇) - 知乎</a>，就不再赘述。</p>
<p>总之就是给定了一个物体甚至是一个场景的<code>SDF</code>后，就能根据<code>SDF</code>渲染出对应的物体或场景；所以如何才能得到一个物体的<code>SDF</code>呢？尤其是那种看起来很复杂的，一眼压根想不出来对应的<code>SDF</code>。</p>
<p>其实就跟建模类似，再复杂的物体都可以通过一些基本图形的组合操作来组成；这里可以推荐<code>iq</code>总结<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>的常见的<code>3D</code>基本图形的<code>SDF</code>了，可以说是十分丰富：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174119.png?imageslim" alt="img" /></p>
<p>除了<code>SDF</code>，这篇文章甚至给出了常见的<code>SDF</code>图形之间的组合操作，如并集、交集，补集操作等，还有各种变形操作等等，十分有用的技巧：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174155.png?imageslim" alt="img" /></p>
<p>没错，学会了上述技巧之后，场景和复杂物体的搭建无非<font color=#39f><strong>就跟建模一样</strong></font>，各种组合和调参而已，接下来就是对场景物体的拆解了；</p>
<h3 id="场景拆解"><a class="markdownIt-Anchor" href="#场景拆解"></a> 场景拆解</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174217.png?imageslim" alt="img" /></p>
<p>如上图所示，这里的场景大致可以分成三个部分：</p>
<ul>
<li>柱子</li>
<li>地板</li>
<li>类似于“章鱼”的东西</li>
</ul>
<h4 id="地板"><a class="markdownIt-Anchor" href="#地板"></a> 地板</h4>
<p>地板就是大量的长方体组成的，然后不停地重复，所以比较简单，当然那种散乱的堆砌又是其他的细节了；</p>
<h4 id="章鱼"><a class="markdownIt-Anchor" href="#章鱼"></a> “章鱼”</h4>
<p>而“章鱼”部分就是一个球体加上几个重复的扭曲状圆柱体组成，这一点<code>PPT</code>上有提及：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174251.png?imageslim" alt="img" /></p>
<h4 id="柱子"><a class="markdownIt-Anchor" href="#柱子"></a> 柱子</h4>
<p>这个物体也是大量的重复，关于重复某个物体的技巧也可以看看上面提到的文章<sup class="footnote-ref"><a href="#fn1" id="fnref1:1">[1:1]</a></sup>；但是单个的柱子还是比较复杂的，可以继续拆解：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174315.png?imageslim" alt="img" /></p>
<p>呃，穹顶那个部分实在是不知道怎么构造，看起来不像是简单的半球形，所以暂时略过；上面的建模也并非完全按照一比一进行复原的，目的<font color=#39f>并非一比一复原上述场景</font>，所以有个大概的样子就够了😂；把上述拆解的物体进行拼接即可得到类似的柱体：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174340.png?imageslim" alt="img" /></p>
<h2 id="场景渲染"><a class="markdownIt-Anchor" href="#场景渲染"></a> 场景渲染</h2>
<p>在根据场景建模得到完整场景的<code>SDF</code>后，就可以开始相应的渲染了；按照一般流程，渲染所需要的信息大概有：</p>
<ul>
<li>顶点位置</li>
<li>法线方向</li>
<li>纹理坐标</li>
</ul>
<p>由于这里并没有相关的纹理贴图，所以可以不用纹理坐标，因而需要根据<code>SDF</code>得到每个着色点对应的顶点位置和法线方向；</p>
<h3 id="ray-martching"><a class="markdownIt-Anchor" href="#ray-martching"></a> ray martching</h3>
<p>由于<code>SDF</code>没法直接得到当前着色点对应的物体坐标点，因而常借助<code>ray martching</code>技术来获取当前着色点应该渲染哪个坐标点；原理实际上就是从着色点发射一束光线（射线），然后根据步长的<code>SDF</code>来计算这束光线是否碰到物体，碰到则渲染交点位置；实际上就是一般成像过程的<strong>逆过程</strong>，即<font color=#f00>以相机位置作为原点</font>，以成像平面上的每个像素点为投射点，构建射线；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174420.png?imageslim" alt="img" /></p>
<p>而投射的光线则可以构建出相应的射线方程：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mover accent="true"><mi>o</mi><mo stretchy="true">→</mo></mover><mo>+</mo><mi>t</mi><mo>∗</mo><mover accent="true"><mi>d</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">r(t) = \overrightarrow{o} + t * \overrightarrow{d}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.03589em;vertical-align:-0.08333em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">o</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.21644em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.21644em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>o</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{o}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9525600000000001em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">o</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>即投射的起点，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>d</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.21644em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.21644em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>为射线方向（单位向量），<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span>就是步长了；</p>
<h3 id="获取成像平面的位置"><a class="markdownIt-Anchor" href="#获取成像平面的位置"></a> 获取成像平面的位置</h3>
<p>由于着色点和成像平面上的像素点实际上是一一对应的，因而可以根据<strong>相机参数</strong>得到成像平面上像素点的坐标，然后根据着色点进行映射即可得到当前着色点在相机空间坐标系中的坐标，最后进行坐标系变换即可得到对应的世界坐标系；</p>
<h3 id="光线与物体求交"><a class="markdownIt-Anchor" href="#光线与物体求交"></a> 光线与物体求交</h3>
<p>根据成像平面的像素点位置和相机位置即可得到当前发射的光线的方向，因而就可以得到对应的射线方程，接下来就是查找是否有物体和光线相交了；</p>
<p>当然，可以设置一个固定的步长，每次迭代都增加这个步长，然后根据<code>SDF</code>得到当前点的距离，判断是否与物体相交；不过这种方式可能会出现精度较低（步长较大时）或迭代次数大（步长较小）的问题；</p>
<p>那么有没有办法得到一个合适的步长？答案是有的，因为根据<code>SDF</code>的特性可知，<code>SDF</code>得到的是当前点到物体的距离，因此如果这个<code>SDF</code>包含场景下所有的物体时，得到的自然是当前点到场景下所有物体表面的最近距离，所以下一次迭代就可以用这个距离增加步长，就会大大地减少迭代次数和精度丢失的问题；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174447.png?imageslim" alt="img" /></p>
<p>根据上图就可以看得很明显，这种以当前<code>SDF</code>值作为下一次步长的增量的方式，只会导致两种结果：</p>
<ul>
<li>刚好到达物体的表面</li>
<li>还没到达物体的表面</li>
</ul>
<p>所以不必担心下次迭代就穿透物体，导致精度很差；一般步骤可以描述如下：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="type">vec4</span> rayMartch () &#123;</span><br><span class="line">  <span class="type">vec3</span> ro = eyePos; <span class="comment">// 光线原点</span></span><br><span class="line">  <span class="type">vec3</span> pos = getWorldPos(); <span class="comment">// 当前着色点对应的坐标</span></span><br><span class="line">  <span class="type">vec3</span> rd = <span class="built_in">normalize</span>(pos - ro); <span class="comment">// 光线方向</span></span><br><span class="line">  <span class="type">vec4</span> color = <span class="type">vec4</span>(<span class="type">vec3</span>(<span class="number">0.0</span>), <span class="number">1.0</span>);</span><br><span class="line">  <span class="type">float</span> t = <span class="number">0.0</span>; <span class="comment">// 当前步长</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; maxStep; i++) &#123;</span><br><span class="line">    <span class="type">vec3</span> curPos = ro + rd * t;</span><br><span class="line">    <span class="type">float</span> next = sdf(curPos); <span class="comment">// 每次都获取最近距离作为步长</span></span><br><span class="line">    <span class="keyword">if</span> (next &lt; <span class="number">0.001</span>) &#123; <span class="comment">// 这里必须使用大于0的一个微小值来作为阈值判断</span></span><br><span class="line">      color.xyz = render(curPos); <span class="comment">// 相交时进行渲染</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t &gt; far) &#123; <span class="comment">// 光线超出最大距离不再计算</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t += next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="渲染"><a class="markdownIt-Anchor" href="#渲染"></a> 渲染</h3>
<p>当投射的光线与物体相交时就可以对相交点进行渲染了，即把相交点的渲染当做着色点最终呈现的物体颜色（自然地处理了<code>Z-buffer</code>的关系）；到了这一步是已经知道了物体的位置信息，这里以<code>blinn-phong</code>着色模型为例，还需要知道当前点对应的<strong>法向量</strong>；</p>
<h4 id="获取法向量"><a class="markdownIt-Anchor" href="#获取法向量"></a> 获取法向量</h4>
<p>实际上，法向量就是物体位置的一阶导数，因而可以通过求梯度来<strong>近似</strong>求导：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>n</mi><mo stretchy="true">→</mo></mover><mo>=</mo><mi>n</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo stretchy="false">(</mo><mspace linebreak="newline"></mspace><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>S</mi><mi>D</mi><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>−</mo><mi>S</mi><mi>D</mi><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi mathvariant="normal">Δ</mi><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>S</mi><mi>D</mi><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo>−</mo><mi>S</mi><mi>D</mi><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>−</mo><mi mathvariant="normal">Δ</mi><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>S</mi><mi>D</mi><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>z</mi><mo stretchy="false">)</mo><mo>−</mo><mi>S</mi><mi>D</mi><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo>−</mo><mi mathvariant="normal">Δ</mi><mi>z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mspace linebreak="newline"></mspace><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\overrightarrow{n} = normalize(\\
\begin{aligned}
SDF(x + \Delta x, y, z) - SDF(x - \Delta x, y, z), \\
SDF(x, y + \Delta y, z) - SDF(x, y - \Delta y, z),  \\
SDF(x, y, z + \Delta z) - SDF(x, y, z - \Delta z)
\end{aligned}\\
)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9525600000000001em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathnormal">e</span><span class="mopen">(</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:4.500000000000002em;vertical-align:-2.000000000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">Δ</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-1.6599999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mclose">)</span></span></span></span></span></p>
<p>转化为代码就是这样：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="type">vec3</span> getNormal (<span class="type">vec3</span> p) &#123;</span><br><span class="line">  <span class="type">vec2</span> diff = <span class="type">vec2</span>(<span class="number">0.001</span>, <span class="number">0.0</span>); <span class="comment">// 设置一个较小的变化值</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">normalize</span>(<span class="type">vec3</span>(</span><br><span class="line">    scene(p + diff.xyy) - scene(p - diff.xyy),</span><br><span class="line">    scene(p + diff.yxy) - scene(p - diff.yxy),</span><br><span class="line">    scene(p + diff.yyx) - scene(p - diff.yyx)</span><br><span class="line">  ));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="细节"><a class="markdownIt-Anchor" href="#细节"></a> 细节</h2>
<p>虽然通过上述一系列计算已经可以得到一个<code>SDF</code>场景的渲染结果了，但是观察<code>iq</code>的作品不难发现里面还加了“<strong>亿点点</strong>”细节，用于营造更真实的环境；</p>
<h3 id="凹凸映射"><a class="markdownIt-Anchor" href="#凹凸映射"></a> 凹凸映射</h3>
<p>凹凸映射，简言之就是通过对物体的法向量进行一定的扰动使得物体表面“看起来”凹凸不平，但是实际上位置并没有改变；虽然可以通过纹理贴图来实现，不过也能通过类似于<font color=#39f>生成噪声的方法</font>来实时生成凹凸映射的值。</p>
<p><code>PPT</code>中有提及到使用<code>fbm</code>（<code>Fractional Brownian Motion</code>，<strong>分形布朗运动</strong>）来生成<code>bumping</code>，而<code>fbm</code>的基本算法<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>如下：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> fbm( <span class="keyword">in</span> vecN x, <span class="keyword">in</span> <span class="type">float</span> H )</span><br><span class="line">&#123;    </span><br><span class="line">    <span class="type">float</span> G = <span class="built_in">exp2</span>(-H);</span><br><span class="line">    <span class="type">float</span> f = <span class="number">1.0</span>;</span><br><span class="line">    <span class="type">float</span> a = <span class="number">1.0</span>;</span><br><span class="line">    <span class="type">float</span> t = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">for</span>( <span class="type">int</span> i=<span class="number">0</span>; i&lt;numOctaves; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        t += a*noise(f*x);</span><br><span class="line">        f *= <span class="number">2.0</span>;</span><br><span class="line">        a *= G;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>即不停地<strong>提高频率</strong>且同时<strong>减小振幅</strong>，然后累加噪声值，即可得到相应噪声的<code>fbm</code>；由于这里是三维物体，所以随便挑选一个三维的噪声即可，这里我使用了三维的<strong>柏林噪声</strong>：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 2维柏林噪声(xz平面)</span></span><br><span class="line"><span class="type">float</span> perlinNoise2d (<span class="type">vec3</span> pos) &#123;</span><br><span class="line">  <span class="type">vec3</span> ipos = <span class="built_in">floor</span>(pos);</span><br><span class="line">  <span class="type">vec3</span> fpos = <span class="built_in">fract</span>(pos);</span><br><span class="line">  <span class="type">float</span> a = <span class="built_in">dot</span>(random3d(ipos), fpos);</span><br><span class="line">  <span class="type">float</span> b = <span class="built_in">dot</span>(random3d(ipos + topRight), fpos - topRight);</span><br><span class="line">  <span class="type">float</span> c = <span class="built_in">dot</span>(random3d(ipos + bottomLeft), fpos - bottomLeft);</span><br><span class="line">  <span class="type">float</span> d = <span class="built_in">dot</span>(random3d(ipos + bottomRight), fpos - bottomRight);</span><br><span class="line">  <span class="type">vec2</span> f = <span class="built_in">smoothstep</span>(<span class="number">0.0</span>, <span class="number">1.0</span>, fpos.xz);</span><br><span class="line">  <span class="type">float</span> y1 = <span class="built_in">mix</span>(a, b, f.x);</span><br><span class="line">  <span class="type">float</span> y2 = <span class="built_in">mix</span>(c, d, f.x);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">mix</span>(y1, y2, f.y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3维柏林噪声，立方体插值，先得到上下两个xz平面的插值，最后对y方向进行插值</span></span><br><span class="line"><span class="type">float</span> perlinNoise3d (<span class="type">vec3</span> p) &#123;</span><br><span class="line">  <span class="type">vec3</span> bottom = <span class="type">vec3</span>(p.x, <span class="built_in">floor</span>(p.y), p.z);</span><br><span class="line">  <span class="type">vec3</span> top = bottom + <span class="type">vec3</span>(<span class="number">0.0</span>, <span class="number">1.0</span>, <span class="number">0.0</span>);</span><br><span class="line">  <span class="type">float</span> y1 = perlinNoise2d(bottom);</span><br><span class="line">  <span class="type">float</span> y2 = perlinNoise2d(top);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">mix</span>(y1, y2, <span class="built_in">fract</span>(p.y));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>柏林噪声思路虽然简单，但是计算量还是偏多，其实也可以使用改进版的<code>simplex</code>噪声；不过我在<code>iq</code>的博客<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>上发现一个有意思的思路，就是用特定的<code>SDF</code>来替代噪声，让<code>SDF</code>与<code>fbm</code>进行结合，看起来效果也不错，计算量也少了很多；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174526.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174547.png?imageslim" alt="img" /></p>
<h3 id="软阴影"><a class="markdownIt-Anchor" href="#软阴影"></a> 软阴影</h3>
<p>用<code>SDF</code>来生成硬阴影实在是过于便利，因为只需要像<code>ray matching</code>那样从当前点发出一束光线到光源位置即可，若在碰到光源之前就碰到了其他物体就是位于阴影之中；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174611.png?imageslim" alt="img" /></p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 硬阴影</span></span><br><span class="line"><span class="type">float</span> hardShadow (<span class="type">vec3</span> ro, <span class="type">vec3</span> rd) &#123;</span><br><span class="line">  <span class="type">float</span> res = <span class="number">1.0</span>;</span><br><span class="line">  <span class="type">float</span> t = <span class="number">0.05</span>; <span class="comment">// t的起步值要大于0，否则会出现全暗或密纹</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; maxStep; i++) &#123;</span><br><span class="line">    <span class="type">vec3</span> curPos = ro + rd * t;</span><br><span class="line">    <span class="type">float</span> d = <span class="built_in">distance</span>(curPos, light);</span><br><span class="line">    <span class="type">float</span> next = <span class="built_in">min</span>(d, scene(curPos)); <span class="comment">// 每次都获取最近距离作为步长（要考虑点光源的位置）</span></span><br><span class="line">    <span class="keyword">if</span> (d == next) &#123; <span class="comment">// 直接碰到光源</span></span><br><span class="line">      res = <span class="number">1.0</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (next &lt; <span class="number">0.001</span>) &#123; <span class="comment">// 这里必须使用大于0的一个微小值来作为阈值判断</span></span><br><span class="line">      res = <span class="number">0.0</span>; <span class="comment">// 光线被遮挡</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    t += next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不过，硬阴影看起来效果有点<strong>突兀</strong>，所以相应的就有了软阴影；软阴影实际上就是在原本的阴影区边缘部分会产生一层过渡，导致阴影看起来不是那么锐利，也更接近现实效果；实际上，在上述方法的基础上只需要额外计算一个值<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>就能获得不错的软阴影效果：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> softshadow( <span class="keyword">in</span> <span class="type">vec3</span> ro, <span class="keyword">in</span> <span class="type">vec3</span> rd, <span class="type">float</span> mint, <span class="type">float</span> maxt, <span class="type">float</span> k )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> res = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">for</span>( <span class="type">float</span> t=mint; t&lt;maxt; )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">float</span> h = map(ro + rd*t);</span><br><span class="line">        <span class="keyword">if</span>( h&lt;<span class="number">0.001</span> )</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">        res = <span class="built_in">min</span>( res, k*h/t ); <span class="comment">// 这里多了一个当前步长与当前最近距离的比值</span></span><br><span class="line">        t += h;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174634.png?imageslim" alt="img" /></p>
<p>至于为何这个<strong>比值</strong>的计算就能得到不错的软阴影效果，是因为这个比值实际上就是<strong>近似地</strong>得到了<font color=#f00>当前光线与途径物体表面之间的距离关系</font>；顺着这个思路实际上也可以只比较每次的步长用于得到一个最小的步长来近似光线到途径物体表面的最小距离：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 用光线到物体表面的最近距离来插值软阴影程度</span></span><br><span class="line"><span class="type">float</span> softShadow (<span class="type">vec3</span> ro, <span class="type">vec3</span> rd, <span class="type">float</span> k) &#123;</span><br><span class="line">  <span class="type">float</span> res = <span class="number">1.0</span>;</span><br><span class="line">  <span class="type">float</span> t = <span class="number">0.1</span>; <span class="comment">// t的起步值要大于0，否则会出现全暗或密纹</span></span><br><span class="line">  <span class="type">float</span> minD = <span class="number">1000.0</span>; <span class="comment">// 最小步长，用于近似获取光线到物体的最近距离</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; maxStep; i++) &#123;</span><br><span class="line">    <span class="type">vec3</span> curPos = ro + rd * t;</span><br><span class="line">    <span class="type">float</span> d = <span class="built_in">distance</span>(curPos, light);</span><br><span class="line">    <span class="type">float</span> next = <span class="built_in">min</span>(scene(curPos), d); <span class="comment">// 每次都获取最近距离作为步长（要考虑点光源的位置）</span></span><br><span class="line">    <span class="keyword">if</span> (d == next) &#123; <span class="comment">// 直接碰到光源</span></span><br><span class="line">      res = <span class="built_in">smoothstep</span>(<span class="number">0.0</span>, <span class="number">0.5</span>, minD);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (next &lt; <span class="number">0.001</span>) &#123; <span class="comment">// 这里必须使用大于0的一个微小值来作为阈值判断</span></span><br><span class="line">      res = <span class="number">0.0</span>; <span class="comment">// 光线被遮挡</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t &gt; <span class="number">1.0</span>) &#123; <span class="comment">// 保证光线先离开渲染表面一段距离后才计算最近距离，避免光线刚开始得到的距离特别小但并不是有效的</span></span><br><span class="line">      minD = <span class="built_in">min</span>(minD, next * k);</span><br><span class="line">    &#125;</span><br><span class="line">    t += next;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174658.png?imageslim" alt="img" /></p>
<p>从上图可以看到，利用这种思路也能得到软阴影效果；不过上述这两种软阴影的计算都不算太准确，所以<code>iq</code>的文章<sup class="footnote-ref"><a href="#fn4" id="fnref4:1">[4:1]</a></sup>中提到了一个比较巧妙的改进方法：利用<code>ray matching</code>中相邻两次的步长，然后形成两个球面，最后可以得到两球面的<font color=#39f>相交圆</font>，然后计算光线到该圆的距离，这个距离可以更加精确地得到该光线到物体表面的最近距离！</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174724.png?imageslim" alt="img" /></p>
<p>好巧不巧，不久前正好在一本书中看到关于<strong>卫星导航定位</strong>的科普，里面就提到了一种定位思路，大致上是相似的：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174749.png?imageslim" alt="img" /></p>
<h3 id="ao环境光遮蔽"><a class="markdownIt-Anchor" href="#ao环境光遮蔽"></a> AO（环境光遮蔽）</h3>
<p><code>AO</code>的思路实际上就是根据物体<strong>被周围物体</strong>遮挡程度来给定不同环境光，而非一个恒定的环境光值，因此更加接近真实效果；所以该如何计算物体被遮挡的程度？<code>PPT</code>中提到了一个极其巧妙的思路：从当前点沿着法线方向前进，每隔一段步长比较此时的<code>SDF</code>值和累进步长之间的关系；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174811.png?imageslim" alt="img" /></p>
<p>用公式可以表示为如下：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mi>o</mi><mo>=</mo><mn>1.0</mn><mo>−</mo><mi>k</mi><mo>∗</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mn>5</mn></munderover><mfrac><mn>1</mn><msup><mn>2</mn><mi>i</mi></msup></mfrac><mo stretchy="false">(</mo><mi>i</mi><mo>∗</mo><mi mathvariant="normal">Δ</mi><mo>−</mo><mi>S</mi><mi>D</mi><mi>F</mi><mo stretchy="false">(</mo><mi>p</mi><mo>+</mo><mi>n</mi><mo>∗</mo><mi>i</mi><mo>∗</mo><mi mathvariant="normal">Δ</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ao = 1.0 - k * \sum_{i = 1}^{5}\frac{1}{2^i}(i * \Delta - SDF(p + n * i * \Delta))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">o</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.750664em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">Δ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p>
<p>其中：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span>为每步前进的步长，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>为物体位置，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>为物体法向量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>为<font color=#39f>调整遮挡程度</font>的系数；对应的<code>glsl</code>实现如下：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取当前点的环境光遮蔽（AO）系数近似值，size（步长）越大AO越小</span></span><br><span class="line"><span class="comment">// 算法参照PPT</span></span><br><span class="line"><span class="type">float</span> getAO (<span class="type">vec3</span> p, <span class="type">vec3</span> n, <span class="type">float</span> size, <span class="type">float</span> k) &#123;</span><br><span class="line">  <span class="type">float</span> hidden = <span class="number">0.0</span>; <span class="comment">// 累计遮挡程度</span></span><br><span class="line">  <span class="type">float</span> basis = <span class="number">0.5</span>; <span class="comment">// 权重系数</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">    <span class="type">float</span> delta = <span class="type">float</span>(i) * size;</span><br><span class="line">    hidden += basis * (delta - sdf(p + n * delta));</span><br><span class="line">    basis *= <span class="number">0.5</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1.0</span> - k * hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174853.png?imageslim" alt="img" /></p>
<p>从上图可以看到，开启<code>AO</code>之后，一些边角的地方变得更暗了；</p>
<h3 id="体积光散射光"><a class="markdownIt-Anchor" href="#体积光散射光"></a> 体积光/散射光</h3>
<p>在现实中，光线除了直接照射到物体上被感知到，还有一种沿着空气传播被人看到的即视感，类似于“<strong>丁达尔效应</strong>”，这种感知是字面上的“<strong>光线</strong>”；这种现象就是光被空气中的胶体/微粒所<strong>散射</strong>而造成的，<code>CG</code>中称之为<strong>体积光</strong>；</p>
<p>知道了体积光产生的原因，可能会立马想到直接通过在场景中添加一定数量的微粒物体不就好了；但是，很明显这种方式会导致计算量飙涨；而常用的一个计算体积光方法就是利用<code>ray martching</code>技术从相机位置沿着屏幕平面一点的方向进行均匀步长的采样计算：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174916.png?imageslim" alt="img" /></p>
<p>关于这种技术的细节和实现推荐阅读这篇文章：<a href="https://zhuanlan.zhihu.com/p/124297905">在 Unity 中实现体积光渲染 - 知乎</a>；加上体积光之后，场景的光线确实看起来更加有“仙气”了，尤其是光线碰到遮挡物后：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20211023174944.png?imageslim" alt="img" /></p>
<p>虽然加上体积光会让场景看起来更真实，但是在这种<code>SDF</code>场景的渲染中，每次着色器渲染都会调用<code>SDF</code>上万次，这种计算量实在是过大，经测试开启体积光和不开启体积光渲染时间大致为<code>10：1</code>；</p>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>虽然这个课题看似很简单，但是实现过程中才发现原来还隐藏了那么多的渲染细节，真的是一边实现一边找资料对比和优化，学到了很多；</p>
<p>本来是想把这个<code>SDF</code>场景做成一个实时的动画，加上一种类似于烟雾缭绕的效果，但是加上体积光的渲染是真的无法达到实时效果，哪怕是不加上体积光也只能做到<code>10FPS</code>，远达不到最低的<code>24FPS</code>，所以还得看看有没有更高效的基于<code>SDF</code>的体积光实现方法了；</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://www.zhihu.com/question/329521044">shader 中，fwidth 或者说 ddx/ddy 到底是什么意思？ - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/50128840">入门Distance Field Soft Shadows - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/26217154">Signed Distance Field - 知乎</a>：常见二维图形的<code>SDF</code>描述</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://www.iquilezles.org/www/articles/distfunctions/distfunctions.htm">Inigo Quilez :: fractals, computer graphics, mathematics, shaders, demoscene and more</a> <a href="#fnref1" class="footnote-backref">↩︎</a> <a href="#fnref1:1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://www.iquilezles.org/www/articles/fbm/fbm.htm">fBM - 2019</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://www.iquilezles.org/www/articles/fbmsdf/fbmsdf.htm">FBM detail in SDFs - 2019</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://www.iquilezles.org/www/articles/rmshadows/rmshadows.htm">soft shadows in raymarched SDFs - 2010</a> <a href="#fnref4" class="footnote-backref">↩︎</a> <a href="#fnref4:1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>计算机图形</tag>
        <tag>GAMES</tag>
        <tag>SDF</tag>
      </tags>
  </entry>
  <entry>
    <title>getComputedStyle 方法与性能问题</title>
    <url>/post/gcs-and-perf/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>最近老是在项目中发现一些由<code>getComputedStyle</code>方法引起的性能问题，无非就是一不小心引起了大量的样式计算（<code>Recalculate Style</code>）和重排（<code>Layout</code>），从而引起了线程阻塞，造成页面卡顿；</p>
<span id="more"></span>
<h2 id="getcomputedstyle-方法的原理"><a class="markdownIt-Anchor" href="#getcomputedstyle-方法的原理"></a> getComputedStyle 方法的原理</h2>
<p><code>getComputedStyle</code>方法（以下简称为<code>gCS</code>）的语法就不多说了，可以移步：<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/getComputedStyle">Window.getComputedStyle() - Web API 接口参考 | MDN</a>；</p>
<p>其实疑惑最大的地方就在于为何<code>gCS</code>方法获取的计算样式<strong>一定会触发新的样式计算甚至是布局计算</strong>呢？熟悉浏览器渲染管线的人应该都清楚，样式计算环节处于构建<code>DOM tree</code>和构建<code>layout tree</code>之间，按理说绘制当前帧时每个<code>DOM</code>结点的计算样式（<code>Computed Style</code>）应该是已知的，为何不能从已经计算好的计算样式里面取值呢？</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233605.png?imageslim" alt="img" /></p>
<p>以上疑惑的答案就在规范里：</p>
<blockquote>
<p>Return a <strong>live</strong> CSS declaration block with the following properties<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>关键就在于这个<code>live</code>，即实时；由于其<font color=#39f><strong>设计目的</strong></font>就是要返回一个实时的<code>CSS</code>声明块（实际上是一个只读的<code>CSSStyleDeclaration</code>对象），而执行<code>gCS</code>的当前<font color=#f00><strong>并不能保证之前的计算样式一定和当前最新的计算样式是一致的</strong></font>，所以在获取相应属性的最新计算值时<strong>不得不</strong>重新计算样式（<code>Recalculate Style</code>），而某些<code>CSS</code>属性受到布局的影响也就不得不重新计算布局；</p>
<h3 id="recalculate-style-的细节"><a class="markdownIt-Anchor" href="#recalculate-style-的细节"></a> Recalculate Style 的细节</h3>
<ol>
<li>
<p>单纯地调用<code>gCS</code>方法并不会引起任何的<code>Recalculate Style</code>和重排；</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span> <span class="attr">rule</span>=<span class="string">&quot;v-&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">v-for</span>=<span class="string">&quot;ul in list&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in list&quot;</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> num = <span class="number">100</span></span><br><span class="line"><span class="keyword">const</span> list = <span class="keyword">new</span> <span class="title class_">Array</span>(num).<span class="title function_">fill</span>(<span class="number">0</span>).<span class="title function_">map</span>(<span class="function">(<span class="params">val, idx</span>) =&gt;</span> idx + <span class="number">1</span>)</span><br><span class="line"><span class="keyword">const</span> res = test.<span class="title function_">render</span>(&#123;</span><br><span class="line">  list</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(res.<span class="property">content</span>) <span class="comment">// 渲染100个相对复杂的DOM</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> doms = app.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;ul&#x27;</span>)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">relayoutTest</span> (<span class="params">el</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> style = <span class="title function_">getComputedStyle</span>(el) <span class="comment">// 单纯地触发gCS</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&#x27;getComputedStyle&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">  <span class="title function_">relayoutTest</span>(doms[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">&#x27;getComputedStyle&#x27;</span>) <span class="comment">// 计算同步执行时间</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233619.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233633.png?imageslim" alt="img" /></p>
<p>通过上述测试可以看到，单纯地调用<code>gCS</code>方法并没有产生样式计算和重排，仅仅是一个普通的函数调用开销；</p>
</li>
<li>
<p>只有通过<code>gCS</code>方法返回的<code>CSSStyleDeclaration</code>对象<font color=#f00><strong>访问某个具体的属性值</strong></font>时才会同步地引起进一步<code>Recalculate Style</code>或重排；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">relayoutTest</span> (<span class="params">el</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> style = <span class="title function_">getComputedStyle</span>(el)</span><br><span class="line">  <span class="keyword">return</span> style.<span class="property">height</span> <span class="comment">// 仅仅是访问height属性</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233641.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233657.png?imageslim" alt="img" /></p>
<p>可以看到，同样的测试条件，仅仅是进一步访问了<code>CSSStyleDeclaration</code>对象的<code>height</code>属性，就会立即触发重排并引发了一定时间的线程阻塞；</p>
</li>
<li>
<p>至于说访问属性会引起重排还是普通的重新计算样式，这里推荐一篇博文的总结<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233713.png?imageslim" alt="img" /></p>
</li>
</ol>
<h2 id="一个案例"><a class="markdownIt-Anchor" href="#一个案例"></a> 一个案例</h2>
<p>最近发现<code>element-plus</code>里面的<code>dialog</code>组件在某些场景下（子结点数量多时）存在着严重的卡顿，仔细一看<a href="https://github.com/element-plus/element-plus/blob/9b74a3dd03541e8aca369f5dd57be4305b26a326/packages/utils/aria.ts#L24">源码</a>才发现是一处很典型的引发重排和样式计算的使用：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233729.png?imageslim" alt="img" /></p>
<p>好家伙，一行代码出现了两个问题点，<code>gCS</code>方法的问题就不用多说了，然而访问这个<code>offsetParent</code>属性也会引起重排；要命的是，这行代码对于<code>dialog</code>组件内的<strong>几乎所有子结点</strong>会调用该方法，所以子结点一多就不可避免地卡顿，然而源码上也注释了这行代码<strong>存在潜在的风险</strong>，需要一些优化建议；</p>
<p>所以这就引申出一个问题：对于<code>gCS</code>方法有没有更高效的使用和优化方法？</p>
<h2 id="优化思考"><a class="markdownIt-Anchor" href="#优化思考"></a> 优化思考</h2>
<h3 id="计算样式dom化"><a class="markdownIt-Anchor" href="#计算样式dom化"></a> 计算样式DOM化</h3>
<p>所谓地计算样式<code>DOM</code>化，就是将每次<code>DOM</code>结点的计算样式结果存放到<code>DOM</code>接口中，而不再需要通过类似<code>gCS</code>方法来强制计算或重排，相当于是将最新的计算样式缓存到<code>DOM</code>上，只有<strong>真正的</strong>重排、重绘或组合才会引起计算样式地改变；</p>
<p>可以思考一下我们使用<code>gCS</code>方法的一些场景，<strong>很多时候</strong>我们之所以用<code>gCS</code>方法来获取样式属性值，是因为<code>DOM</code>的<code>style</code>属性只会返回<font color=#f00><strong>当前节点显式声明的样式属性</strong></font>（即通过样式文件，样式声明或内联样式所匹配到的样式），所以不得不用<code>gCS</code>方法来获取那些默认样式的值；很明显，这种情况下并不符合规范中所预想的<code>gCS</code>方法使用背景（即<font color=#39f>由于某些操作导致样式发生变化，且想要立即同步地获取到最新的计算样式</font>），我们明明只是想要获取一些<strong>压根就没有变化的计算样式</strong>，为何还要强制地去重排或样式计算；</p>
<p>目前还不清楚各大浏览器引擎内部有没有缓存最新的计算样式，不过确实没有看到<code>W3C</code>有相关的规范从已有的计算样式中获取值的方法；考虑到缓存所有<code>DOM</code>的计算样式确实需要一定的内存开销，毕竟现在计算样式的属性数量已经高达<code>300+</code>了，所以不知道这种内存开销是否在可接受范围内；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233747.png?imageslim" alt="img" /></p>
<h3 id="fastdom"><a class="markdownIt-Anchor" href="#fastdom"></a> fastdom</h3>
<p>这是一个专门用来批量读/写<code>DOM</code>属性的库，用于解决读/写<code>DOM</code>属性所带来布局抖动或其它类似的开销；</p>
<p>其原理很简单，代码也很少，推荐直接阅读<a href="https://github.com/wilsonpage/fastdom/blob/master/fastdom.js">源码</a>；<code>fastdom</code>通过将读和写任务分别存到不同的任务队列中，并通过<code>rAF</code>（<code>requestAnimationFrame</code>）函数在下一帧执行相应的任务，且<strong>先批量执行读任务再批量执行写任务</strong>（这个顺序很重要）；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233812.png?imageslim" alt="img" /></p>
<p>很明显，这种操作会把<code>DOM</code>读写操作改成异步任务（其实也就是下一帧），而不会阻塞当前帧的操作；不过如果批量的读写次数过多时，在下一帧执行时仍然会造成线程阻塞……</p>
<h3 id="减少同时操作的-dom-数量"><a class="markdownIt-Anchor" href="#减少同时操作的-dom-数量"></a> 减少同时操作的 DOM 数量</h3>
<p>在目前的条件下，如果同时使用<code>gCS</code>方法影响<code>DOM</code>的数量过多（<code>100+</code>，其实还跟<code>DOM</code>所影响的范围有关），会不可避免地阻塞到线程；哪怕是通过<code>fastdom</code>那种通过将操作异步化，其阻塞无非只是被延后，在这种情况下解决不了本质的问题；</p>
<h3 id="结合-style-和默认属性值"><a class="markdownIt-Anchor" href="#结合-style-和默认属性值"></a> 结合 style 和默认属性值</h3>
<p>上面也提到过：</p>
<blockquote>
<p><strong>很多时候</strong>我们之所以用<code>gCS</code>方法来获取样式属性值，是因为<code>DOM</code>的<code>style</code>属性只会返回<font color=#f00><strong>当前节点显式声明的样式属性</strong></font>（即通过样式文件，样式声明或内联样式所匹配到的样式），所以不得不用<code>gCS</code>方法来获取那些<strong>默认样式</strong>的值；</p>
</blockquote>
<p>这不就是提供了一种思路吗？既然那些默认样式<code>style</code>属性上并不会有，但是默认样式的属性值<strong>规范中是有规定的</strong>（即已知的），不过考虑到由于某些样式可以继承，所以对于那些<font color=#39f>不可继承</font>的<code>CSS</code>属性，如果<code>style</code>属性得到的<font color=#f00>相应属性值为空</font>，那不就是代表其计算属性就是<strong>默认值</strong>！</p>
<p>以上面的<code>element-plus</code>提到的问题为例，其通过<code>gCS</code>方法来访问<code>position</code>属性，由规范<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>可知，这个属性正好是不可继承的属性！</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233826.png?imageslim" alt="img" /></p>
<p>所以之前的代码完全可以优化为：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">isVisible</span> = (<span class="params"><span class="attr">element</span>: <span class="title class_">HTMLElement</span></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;test&#x27;</span>) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  <span class="keyword">const</span> position = element.<span class="property">style</span>.<span class="property">position</span> || <span class="string">&#x27;static&#x27;</span> <span class="comment">// 为空就是默认值</span></span><br><span class="line">  <span class="keyword">return</span> position === <span class="string">&#x27;fixed&#x27;</span> ? <span class="literal">false</span> : element.<span class="property">offsetParent</span> !== <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以通过测试对比一下两种方式获取<code>position</code>属性值的时间消耗：</p>
<ul>
<li>
<p><code>gCS</code>：</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">relayoutTest</span> (<span class="params">el</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> style = <span class="title function_">getComputedStyle</span>(el)</span><br><span class="line">  <span class="keyword">return</span> style.<span class="property">position</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233835.png?imageslim" alt="img" /></p>
</li>
<li>
<p><code>style</code> + 默认值：</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">relayoutTest</span> (<span class="params">el</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> el.<span class="property">style</span>.<span class="property">position</span> || <span class="string">&#x27;static&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210606233843.png?imageslim" alt="img" /></p>
</li>
</ul>
<p>显然，如果遇到其他的<strong>不可继承属性</strong>，也可以尝试用这种方式来优化性能；</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://www.zhihu.com/question/459893829/answer/1891646952">为什么getComputedStyle挂在了window上而不是Element.prototype? - 贺师俊的回答 - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/94380350">【CSS进阶】原生JS getComputedStyle等方法解析 - 程序猿的生活的文章 - 知乎</a></li>
<li><a href="https://gist.github.com/paulirish/5d52fb081b3570c81e3a">What forces layout/reflow. The comprehensive list.</a>：引起重排的行为，包括了getComputedStyle方法引起重排的几种情况。</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/getComputedStyle">Window.getComputedStyle() - Web API 接口参考 | MDN</a></li>
<li><a href="https://blog.lisong.hn.cn/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/2018/06/05/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8B-force-reflow/">https://blog.lisong.hn.cn/前端优化/2018/06/05/前端性能优化之-force-reflow/</a>：里面有关于getComputedStyle耗时的测试</li>
<li><a href="https://www.zhangxinxu.com/wordpress/2012/05/getcomputedstyle-js-getpropertyvalue-currentstyle/">获取元素CSS值之getComputedStyle方法熟悉 « 张鑫旭-鑫空间-鑫生活</a></li>
<li><a href="https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing">Avoid Large, Complex Layouts and Layout Thrashing | Web Fundamentals</a>：一篇关于布局抖动优化的文章</li>
<li><a href="http://www.hycoding.com/docs/browser/chapter3.html#%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB">使用 fastdom 解决布局抖动 | Nx-website-component</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://drafts.csswg.org/cssom/#dom-window-getcomputedstyle">https://drafts.csswg.org/cssom/#dom-window-getcomputedstyle</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://gist.github.com/paulirish/5d52fb081b3570c81e3a">What forces layout/reflow. The comprehensive list.</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://www.w3.org/TR/CSS2/visuren.html#propdef-position">https://www.w3.org/TR/CSS2/visuren.html#propdef-position</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>DOM</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>前端加载非公开第三方文件及接口数据</title>
    <url>/post/frontend-load-third-party-res/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>有时候可能需要从一些非公开的接口或者地址去获取数据或者文件，这个听起来像是一个爬虫过程，不过相比单纯的脚本爬虫，前端爬虫除了单纯的<code>HTTP</code>请求，<font color=#39f><strong>也许</strong></font>还多了一些选择；</p>
<blockquote>
<p>注：以下探讨只是针对GET请求；</p>
</blockquote>
<span id="more"></span>
<h2 id="可能的问题"><a class="markdownIt-Anchor" href="#可能的问题"></a> 可能的问题</h2>
<p>看到非公开&amp;第三方的字眼就马上会想到：请求地址一端完全不可控；所以很有可能会有下面的问题：</p>
<ul>
<li><strong>跨域请求</strong></li>
<li><strong>请求头参数匹配</strong></li>
</ul>
<h2 id="解决跨域的方法"><a class="markdownIt-Anchor" href="#解决跨域的方法"></a> 解决跨域的方法</h2>
<p>对于跨域请求，目前确实存在许多解决办法，比如：</p>
<ul>
<li><code>CORS</code>代理</li>
<li><code>fetch no-cors mode</code></li>
<li><code>JSONP</code></li>
<li><code>crossorigin</code>属性</li>
</ul>
<p>上面的跨域解决办法都不是完美的，都有各自的局限性，因此需要根据具体场景选择合适的方法；</p>
<h3 id="cors代理"><a class="markdownIt-Anchor" href="#cors代理"></a> CORS代理</h3>
<p>一般的跨域都是由于服务端的响应头设置了特定的<code>CORS</code>参数，比如限定了允许跨域的域名范围已经请求参数类型等等，这种时候请求头的某些参数就不会匹配，因此被断定为跨域请求，然后被中止请求；</p>
<blockquote>
<p>所谓的CORS参数就是指Access-Control-*这类；</p>
</blockquote>
<p>由于第三方的服务端代码不受控，因此只能利用代理服务器来返回一个允许跨域的<code>CORS</code>响应头；这里有一个比较常用的<code>CORS</code>代理网站：</p>
<blockquote>
<p><a href="https://cors-anywhere.herokuapp.com/">https://cors-anywhere.herokuapp.com/</a></p>
</blockquote>
<p>使用方法很简单，就是<strong>网址 + 要代理的网址</strong>：<code>https://cors-anywhere.herokuapp.com/https://example.com/abc</code></p>
<p>一般来说，只要是由于响应头<code>CORS</code>参数设置造成的跨域，这种代理都可以解决；</p>
<h3 id="fetch"><a class="markdownIt-Anchor" href="#fetch"></a> fetch</h3>
<p><code>fetch</code>是新推出的<code>http</code>请求<code>api</code>，风格为<code>Promise</code>式的；</p>
<blockquote>
<p>Promise<Response> fetch(input[, init]);<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>其中第二个参数可以设置一些请求相关的参数，比如请求头设置和缓存策略等等；其中有个<code>mode</code>的参数：</p>
<ul>
<li><code>same-origin</code>：<font color=#f00>只允许同站的请求</font>，其它请求一律拒绝；</li>
<li><code>cors</code>：在<code>same-origin</code>的基础上还允许拥有<font color=#f00>正确</font><code>CORS</code>响应头的请求；</li>
<li><code>no-cors</code>：发出的请求<font color=#f00>不会进行<code>CORS</code>检测</font>，但同时得到的<font color=#f00>响应头是不透明（<code>opaque</code>）</font>的<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>，即会丢失很多响应信息。</li>
</ul>
<p>从上面不难看出，使用<code>fetch</code>的<code>no-cors mode</code>可以避免跨域：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://example.com/abc&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;no-cors&#x27;</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">json</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>但是，这种方式的跨域有个致命的副作用，那就是获取到响应体正文是空的，也就是说跨域请求成功了，但是由于得到是不透明响应体，<font color=#f00>响应正文的解析触发时机出现了问题</font>；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;https://example.com/abc&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;no-cors&#x27;</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 此时res.body为空，导致解析不正确</span></span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">json</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001125327.png?imageslim" alt="img" /></p>
<p>这个在请求媒体文件时尤为明显，跨域请求成功后，其<code>Promise</code>的<code>resolve</code>触发时机并不是我们所期待的资源加载完成后，而是响应报文返回后立马触发，导致得到的二进制数据字节数为<code>0</code>；这一点<code>MDN</code>上<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>也有提及：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001125340.png?imageslim" alt="img" /></p>
<p>因此利用<code>fetch</code>的<code>no-cors mode</code>进行跨域在实际应用上基本行不通；</p>
<h3 id="jsonp"><a class="markdownIt-Anchor" href="#jsonp"></a> JSONP</h3>
<p><code>JSONP</code>跨域的原理就是<font color=#39f><code>script</code>标签天然支持跨域</font>，然后将数据包裹在外部<code>JS</code>代码中进行回调执行然后解析；因此这种跨域方法需要第三方接口本身就支持返回<code>JSONP</code>的数据，否则不能使用，比如：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001125347.png?imageslim" alt="img" /></p>
<p>因此只需要配合返回的<code>JS</code>代码，提供一个<font color=#39f>相应的解析函数</font>即可；</p>
<h3 id="crossorigin属性"><a class="markdownIt-Anchor" href="#crossorigin属性"></a> crossorigin属性</h3>
<p>这是<code>video</code>、<code>audio</code>、<code>img</code>等一些元素用于设置跨域策略的属性，有以下几个值：</p>
<ul>
<li><code>anonymous</code>：不会检测<code>CORS</code>请求；</li>
<li><code>use-credentials</code>：<code>CORS</code>请求会要求带上相应的凭证；</li>
<li><code>&quot;&quot;</code>：空字符串，等同于<code>anonymous</code>；</li>
</ul>
<p>当然，一般来说直接给<code>video</code>这些媒体元素设置第三方地址，也不会引起跨域错误（不过有些网址可能会设置了防盗功能）；因此这个属性反而很多时候是来解决一些<code>H5 API</code>转码的时候出现的跨域报错，比如<code>canvas</code>绘制第三方来源的视频和图片时；</p>
<h2 id="关于请求头参数匹配"><a class="markdownIt-Anchor" href="#关于请求头参数匹配"></a> 关于请求头参数匹配</h2>
<p>在请求第三方地址时，可能好不容易解决了跨域问题，但是又会出现其他莫名其妙的报错，那很有可能是其请求头增加了内部专用的一些参数设置，要想完全给出匹配的请求头这时候完全看人品了……</p>
<h2 id="简单的总结"><a class="markdownIt-Anchor" href="#简单的总结"></a> 简单的总结</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001125357.png?imageslim" alt="img" /></p>
<h2 id="解析数据的一些思路"><a class="markdownIt-Anchor" href="#解析数据的一些思路"></a> 解析数据的一些思路</h2>
<h3 id="前端らしい"><a class="markdownIt-Anchor" href="#前端らしい"></a> 前端らしい</h3>
<p>既然前面说了前端面对这种类似爬虫的需求也许有更多的选择，那么我就想到了一些很前端的思路：</p>
<ul>
<li>Q：已知像<code>video/audio/img</code>这类标签本身就支持跨域加载，那么能不能通过创建标签加载数据，然后在<code>onload</code>事件中获取标签的二进制数据呢？</li>
<li>A：<font color=#f00>不能</font>。虽然这类标签可以很自然地跨域加载数据，且能够正确地触发<code>load/loadeddata</code>事件，但是目前还没发现<code>DOM</code>有暴露获取这个标签对应的二进制<code>buffer</code>数据的<code>API</code>，或者将相应的<code>DOM</code>类型转化为<code>Blob/File</code>之类的<code>API</code>，因此走不通；（<code>canvas/webGL/webAudio</code>这类更底层的<code>API</code>还没尝试过，有时间可以验证下）</li>
<li>Q：已知<code>URL.createObjectURL()</code>方法可以接收<code>MediaSource</code>对象，而<code>MediaSource</code>可以通过<code>ArrayBuffer</code>进行构造，那么<code>video/audio/img</code>这类标签能够转化成<code>ArrayBuffer</code>吗？</li>
<li>A：<font color=#f00>不能</font>。同样也没找到相应的<code>API</code>；</li>
<li>Q：<code>&lt;script&gt;</code>标签 + <code>innerText/innerHtml</code></li>
<li>A：不能，因为<code>innerText/innerHtml</code>方法无法获取到<code>script</code>内部源码</li>
</ul>
<p>经过一些折腾，发现通过前端直接获取媒体元素的二进制数据，从而完全绕开跨域拉取数据进而上传是很有难度的，这也许是浏览器处于安全因素的考量，也可能是对深层次的<code>DOM API</code>并不熟悉；</p>
<h3 id="fetch-2"><a class="markdownIt-Anchor" href="#fetch-2"></a> fetch</h3>
<p>通过<code>fetch API</code>获取到的响应体是一个<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Response"><code>Response</code>对象</a>，这个对象已经自带了几种常用的数据解析方法<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001125413.png?imageslim" alt="img" /></p>
<p>解析成功的前提自然是响应体正文符合对应解析方法的格式；</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/CORS_settings_attributes">CORS settings attributes - HTML（超文本标记语言） | MDN</a></li>
<li><a href="https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors">javascript - Trying to use fetch and pass in mode: no-cors - Stack Overflow</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch">使用 Fetch - Web API 接口参考 | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MediaSource">MediaSource - Web API 接口参考 | MDN</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WindowOrWorkerGlobalScope/fetch">WorkerOrGlobalScope.fetch() - Web API 接口参考 | MDN</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://developers.google.com/web/updates/2015/03/introduction-to-fetch">https://developers.google.com/web/updates/2015/03/introduction-to-fetch</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Body/blob">Body.blob() - Web APIs | MDN</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Response">Response - Web API 接口参考 | MDN</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>业务</category>
      </categories>
      <tags>
        <tag>DOM</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo增加数学公式的支持</title>
    <url>/post/hexo-math-latex/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>由于写<code>markdown</code>文章很多地方都需要用到<code>latex</code>语法展示数学公式，有道云笔记本身就支持（解析器为<code>katex</code>），但是<code>hexo</code>默认是不支持的，因此会导致有道云笔记<code>markdown</code>导出到<code>hexo</code>博客时，数学公式就是一堆普通字符串。</p>
<p>不过好在已经有人造出了在<code>hexo</code>中支持数学公式的轮子，废话不多说，直接上方法；</p>
<span id="more"></span>
<h2 id="使用next主题时"><a class="markdownIt-Anchor" href="#使用next主题时"></a> 使用NexT主题时</h2>
<p>由于<code>NexT</code>主题本身就带有支持解析数学公式的配置，直接按照<a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/MATH.md">相关文档</a>配置即可，十分方便！</p>
<p>不过有些地方需要注意：</p>
<ul>
<li>
<p>由于主题可能一直在更新，导致<code>github</code>上面的文档中具体的配置与我们自己用的版本<strong>不太一致</strong>；直接升级有可能会遇到其它意想不到的问题，所以最好直接查看<strong>本地项目</strong>中<code>next/docs/zh-CN/MATH.md</code>文件即可，这里面的配置跟我们使用的主题版本是一致的。</p>
</li>
<li>
<p>同上，<code>KaTex</code>的版本也一直在更新，最好将相应的<code>CDN</code>地址替换成最新版本的，以免采坑。</p>
</li>
</ul>
<h2 id="使用hexo-math插件"><a class="markdownIt-Anchor" href="#使用hexo-math插件"></a> 使用hexo-math插件</h2>
<p>当时最初在网上找到的方法就是建议采用<code>hexo-math</code>插件来支持数学公式，而且这个插件是<code>hexo</code>官方维护的；然而，根据其<a href="https://github.com/hexojs/hexo-math">官方文档</a>的步骤来配置，你会发现数学公式压根不会解析！！！原因就在于它压根就没提需要<strong>更换</strong><code>markdown</code>渲染引擎的事情……</p>
<p>这是个巨坑，可能会浪费很多时间；对应的渲染引擎跟<code>NexT</code>配置提到的一样，需要根据使用<code>MathJax</code>还是<code>KaTex</code>来分别选择。</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/MATH.md">hexo-theme-next/MATH.md at master · theme-next/hexo-theme-next</a></li>
<li><a href="https://github.com/hexojs/hexo-math">hexojs/hexo-math: A hexo plugin that uses MathJax to render math equations.</a></li>
<li><a href="https://blog.masellum.me/2018/10/Hexo-Math-Katex/">为 Hexo 更换数学渲染引擎为 KaTeX - Mas’s Blog</a></li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>latex</tag>
      </tags>
  </entry>
  <entry>
    <title>husky钩子的一些用法</title>
    <url>/post/husky-and-git-hooks/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>husky</code>是一个<code>npm</code>包，可以将<code>git</code>内置的钩子暴露出来，很方便地进行钩子的命令注入，而不需要在<code>.git</code>目录下自己写<code>shell</code>脚本了；不仅可以执行<code>js</code>文件作为脚本，还可以将脚本暴露出来，方便在<code>git</code>项目中进行管理。</p>
<span id="more"></span>
<h2 id="基本用法"><a class="markdownIt-Anchor" href="#基本用法"></a> 基本用法</h2>
<h3 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h3>
<p><code>husky</code>支持的钩子就是<a href="https://git-scm.com/docs/githooks">git hooks</a>，可以在对应钩子指定一条<code>shell</code>命令，<code>husky</code>会自动将这个命令写入<code>.git</code>目录下的对应钩子脚本，当触发这个<code>git</code>钩子时则会执行我们写入的命令；</p>
<p>因此<code>husky</code>本质上就是执行<code>shell</code>命令，因此只要是<code>shell</code>命令都可以在钩子中执行；<font color=#39f>由于<code>nodeJS</code>也可以通过命令行执行</font>，所以直接用<code>js</code>来充当脚本也是可以的；</p>
<h3 id="命令配置"><a class="markdownIt-Anchor" href="#命令配置"></a> 命令配置</h3>
<p>可以在<code>package.json</code>文件的<code>husky.hooks</code>对象中写入相应的命令即可，键名就是<font color=#f00>钩子名称</font>，键值就是<font color=#f00>需要执行的命令</font>，如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;husky&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;hooks&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;pre-commit&quot;</span>: <span class="string">&quot;node ./hooks/pre-commit&quot;</span>,</span><br><span class="line">      <span class="string">&quot;commit-msg&quot;</span>: <span class="string">&quot;node ./hooks/commit-msg $HUSKY_GIT_PARAMS &amp;&amp; commitlint -E HUSKY_GIT_PARAMS&quot;</span>,</span><br><span class="line">      <span class="string">&quot;post-merge&quot;</span>: <span class="string">&quot;node ./hooks/post-merge&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>husky</code>当然也支持通过专门的配置文件来指定钩子命令，但是使用过程中经常发生钩子配置不起作用的情况，还是<code>package.json</code>这种方式最稳定；</p>
<h3 id="常用钩子"><a class="markdownIt-Anchor" href="#常用钩子"></a> 常用钩子</h3>
<ul>
<li><code>pre-commit</code>：由<code>git commit</code>命令触发，在<code>commit-msg</code>之前；</li>
<li><code>commit-msg</code>：<code>git commit</code>和<code>git merge</code>都会触发，会传递一个参数，该参数为存放当前<code>commit</code>消息的<strong>临时文件路径</strong>；可以通过<code>--no-verify</code>参数来跳过<code>commit-msg</code>钩子；</li>
<li><code>post-merge</code>：触发于<code>merge</code>完成后；</li>
</ul>
<h2 id="一些技巧"><a class="markdownIt-Anchor" href="#一些技巧"></a> 一些技巧</h2>
<h3 id="在-node-脚本中如何退出"><a class="markdownIt-Anchor" href="#在-node-脚本中如何退出"></a> 在 node 脚本中如何退出</h3>
<p>当使用<code>node</code>脚本进行检测，希望检测不通过时阻止<code>git</code>进行下一步操作，即终止操作；仅仅抛出错误是不能终止命令的，只能抛出<code>exit</code>状态才能终止；如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">process.<span class="title function_">exit</span>(<span class="number">1</span>) <span class="comment">// exit状态为1才能终止</span></span><br></pre></td></tr></table></figure>
<h3 id="在-node-中执行-shell-命令"><a class="markdownIt-Anchor" href="#在-node-中执行-shell-命令"></a> 在 node 中执行 shell 命令</h3>
<p>有些用于检测的信息<font color=#39f>只能通过<code>shell</code>命令执行获取</font>（如<code>git</code>相关的信息），如果想要在<code>node</code>中获取到这些信息，可以使用<code>node</code>自带的一些方法来执行；比如<code>exec</code>和<code>spawn</code>方法。</p>
<p>上面两个都是<code>child_process</code>模块里面的方法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; spawn, exec &#125; = <span class="built_in">require</span>(<span class="string">&#x27;child_process&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>虽然这两个方法都可以执行<code>shell</code>命令，但是具体用途有所不同；就作用而言，<code>spawn</code>方法更加广泛，可控性更强；</p>
<ul>
<li>当仅仅需要执行<code>shell</code>命令来获取信息（文本）时，可以使用<code>exec</code>方法；</li>
<li>如果需要按照<font color=#f00>原格式</font>（即包含颜色，缩进，换行等）暴露<code>shell</code>命令的标准输出，那么就需要用到<code>spawn</code>方法了；因为exec得到的标准输出已经格式化了，仅仅是普通的文本字符串；</li>
</ul>
<p>可以将上述方法包装成<code>Promise</code>对象，这样更加<font color=#39f>方便进行同步调用</font>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行shell命令，返回promise；</span></span><br><span class="line"><span class="comment"> * 这种方式不会捕获的命令输出会被格式化，即没有颜色缩进等；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; shell shell命令</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">execShell</span> (<span class="params">shell</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">exec</span>(shell, <span class="function">(<span class="params">err, stdout, stderr</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        process.<span class="property">stdout</span>.<span class="title function_">write</span>(stdout)</span><br><span class="line">        <span class="title function_">error</span>(<span class="string">`命令执行错误！\n\n<span class="subst">$&#123;stderr&#125;</span>`</span>)</span><br><span class="line">        <span class="title function_">reject</span>(stderr)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(stdout)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行shell命令，返回promise；</span></span><br><span class="line"><span class="comment"> * 这种方式不能捕获命令输出，但是可以按原格式进行输出；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; shell shell命令</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">execShellOrigin</span> (<span class="params">shell</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> shellArr = shell.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> process = <span class="title function_">spawn</span>(shellArr[<span class="number">0</span>], shellArr.<span class="title function_">slice</span>(<span class="number">1</span>), &#123;</span><br><span class="line">    <span class="attr">stdio</span>: <span class="string">&#x27;inherit&#x27;</span> <span class="comment">// 命令的输出按原格式进行输出</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    process.<span class="title function_">on</span>(<span class="string">&#x27;close&#x27;</span>, <span class="function"><span class="params">code</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (code) &#123; <span class="comment">// 根据exit code可以判断命令执行结果</span></span><br><span class="line">        <span class="title function_">reject</span>(code)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">resolve</span>()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="在-commit-msg-钩子中获取修改-commit-消息"><a class="markdownIt-Anchor" href="#在-commit-msg-钩子中获取修改-commit-消息"></a> 在 commit-msg 钩子中获取/修改 commit 消息</h3>
<p>执行<code>commit</code>命令后，<code>git</code>会将<code>commit</code>消息存放于一个<font color=#39f>临时文件</font>中；然后触发<code>pre-commit</code>钩子，<code>pre-commit</code>钩子成功之后就会触发<code>commit-msg</code>，<code>commit-msg</code>钩子成功后则会将临时文件中的文本作为此次<code>commit</code>消息进行存储；</p>
<p>并且<code>commit-msg</code>钩子会对脚本传一个参数，这个参数就是存放<code>commit</code>消息的临时文件的路径；所以得到这个参数，就可以读取该文件的内容，也就能得到当前<code>commit</code>消息了；同理，在<code>commit-msg</code>钩子中覆盖这个文件就能对此次<code>commit</code>消息进行修改了；</p>
<blockquote>
<p>It takes a single parameter, the name of the file that holds the proposed commit log message.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>不过，由于在<code>husky</code>中的指定的<code>commit-msg</code>钩子命令并不是git直接执行的，因此只能通过<code>husky</code>间接暴露的变量<code>$HUSKY_GIT_PARAMS</code>来获取临时文件的地址，如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># $HUSKY_GIT_PARAMS变量就是commit-msg钩子传递的文件路径参数</span></span><br><span class="line">node ./hooks/commit-msg <span class="variable">$HUSKY_GIT_PARAMS</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>Git hooks can get parameters via command-line arguments and stdin. Husky makes them accessible via HUSKY_GIT_PARAMS and HUSKY_GIT_STDIN environment variables.<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
</blockquote>
<p>在<code>node</code>脚本内部就可以利用<code>process.argv</code>来获取命令行参数了；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> param = process.<span class="property">argv</span>[process.<span class="property">argv</span>.<span class="property">length</span> - <span class="number">1</span>] <span class="comment">// 获取git commit消息临时存放文件地址</span></span><br></pre></td></tr></table></figure>
<p>读取和写入操作既可以依靠<code>node</code>自带的方法，也可以利用<code>shell</code>命令（<code>shell</code>命令简单粗暴）；</p>
<h3 id="钩子没有触发"><a class="markdownIt-Anchor" href="#钩子没有触发"></a> 钩子没有触发</h3>
<p>当第一次安装<code>husky</code>的时候，可能会出现<code>.git/hooks</code>里面的文件没有被覆盖的情况；此时，<code>git hooks</code>仍然是之前的状态（默认是没有效果的）；如果是<code>husky</code>安装正常，使用命令<code>ls .git/hoooks</code>查看文件则是下面这样：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200624175043.png?imageslim" alt="img" /></p>
<p>随便打开一个钩子脚本文件，内容可能是这样：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># husky</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Created by Husky v4.2.5 (https://github.com/typicode/husky#readme)</span></span><br><span class="line"><span class="comment">#   At: 2020-6-16 17:14:54</span></span><br><span class="line"><span class="comment">#   From: /Users/snowdream/Desktop/bhb/dp-admin/node_modules/husky (https://github.com/typicode/husky#readme)</span></span><br><span class="line"></span><br><span class="line">. <span class="string">&quot;<span class="subst">$(dirname <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>/husky.sh&quot;</span></span><br></pre></td></tr></table></figure>
<p>如果不是上述形式，那么就是<code>husky</code><font color=#f00>注入失败</font>；可以通过重新安装（先<code>uninstall</code>再<code>install</code>）进行重新注入，因为每次安装<code>husky</code>时会重新覆盖一次<code>.git/hooks</code>脚本文件。</p>
<h2 id="可用-shell-命令收集"><a class="markdownIt-Anchor" href="#可用-shell-命令收集"></a> 可用 shell 命令收集</h2>
<h3 id="获取当前-git-分支名称"><a class="markdownIt-Anchor" href="#获取当前-git-分支名称"></a> 获取当前 git 分支名称</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git symbolic-ref --short -q HEAD</span><br></pre></td></tr></table></figure>
<h3 id="获取最新的一条-git-提交信息"><a class="markdownIt-Anchor" href="#获取最新的一条-git-提交信息"></a> 获取最新的一条 git 提交信息</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git rev-list --no-walk --header HEAD</span><br></pre></td></tr></table></figure>
<p>可以得到很详细的信息，用于进一步检测，比如检测最新的一次提交是不是<code>merge</code>，<code>merge</code>行为是否合法等待；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">635a70d8e1eaccfe7a460e76ae400a0e5cc95161</span><br><span class="line">tree 6ff519aef0471392e6da9f068cace81f3e874b56</span><br><span class="line">parent c4e3385d4cab66b27ba64f2bce3df179b0bb4d3a</span><br><span class="line">author xiexuefeng &lt;xxx@qq.com&gt; 1592881689 +0800</span><br><span class="line">committer xiexuefeng &lt;xxx@qq.com&gt; 1592881689 +0800</span><br><span class="line"></span><br><span class="line">    fix: xxx</span><br></pre></td></tr></table></figure>
<h3 id="读取或写入文件"><a class="markdownIt-Anchor" href="#读取或写入文件"></a> 读取或写入文件</h3>
<p>读取使用<code>cat</code>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> file-path</span><br></pre></td></tr></table></figure>
<p>写入使用<code>echo</code>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;content&quot;</span> &gt; file-path</span><br></pre></td></tr></table></figure>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://git-scm.com/docs/githooks">Git - githooks Documentation</a></li>
<li><a href="http://www.inanzzz.com/index.php/post/7qfs/automatically-amending-the-commit-message-with-commit-msg-hook">inanzzz | Automatically amending the commit message with commit-msg hook</a></li>
<li><a href="https://stackoverflow.com/questions/18825493/retaining-output-colors-when-shelling-out-to-node/20145153#20145153">javascript - Retaining output colors when shelling out to node - Stack Overflow</a>：输出原格式的来源</li>
<li><a href="https://cloud.tencent.com/developer/section/1138780">git rev-list (Plumbing Commands) - Git 中文开发手册 - 开发者手册 - 云+社区 - 腾讯云</a>：<code>rev list</code>命令文档，该命令十分强大</li>
<li><a href="https://github.com/typicode/husky/issues/445">Husky cannot execute hooks · Issue #445 · typicode/husky · GitHub</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://git-scm.com/docs/githooks#_commit_msg">Git - githooks Documentation</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://github.com/typicode/husky#access-git-params-and-stdin">GitHub - typicode/husky: Git hooks made easy 🐶 woof!</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>husky</tag>
      </tags>
  </entry>
  <entry>
    <title>js数组属性和方法</title>
    <url>/post/js-array/</url>
    <content><![CDATA[<p>js中的数组实际上就是一个<code>Array</code>对象的实例，继承来自<code>Array.prototype</code>的属性和方法！</p>
<span id="more"></span>
<h3 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性</h3>
<ol>
<li>length（<code>Array.prototype.length</code>）：返回数组的长度；注意只有数字索引或者能被转换为数字的索引才会被计入！</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">3</span>] = <span class="string">&quot;xxf&quot;</span>;</span><br><span class="line">arr[<span class="string">&quot;name&quot;</span>] = <span class="string">&quot;xuefeng&quot;</span>;</span><br><span class="line"></span><br><span class="line">arr.<span class="property">length</span>; <span class="comment">// 4</span></span><br><span class="line">arr[<span class="number">1</span>]; <span class="comment">// undefined</span></span><br><span class="line">arr.<span class="property">name</span>; <span class="comment">// xuefeng</span></span><br></pre></td></tr></table></figure>
<p>js数组的长度是根据<font color=red><strong>索引中最大的数字</strong></font>决定的（？），且中间没有被赋值的索引被访问时的值默认为<code>undefined</code>！且其中的<font color=red><strong>非数字索引或者对象属性</strong></font>不会被计入到<code>length</code>中的，但是可以强制转化为十进制数字的索引是有效的：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line">arr[<span class="string">&quot;12&quot;</span>] = <span class="string">&quot;cctv&quot;</span>; <span class="comment">// 索引&quot;12&quot;可以强制转化为数字12！</span></span><br><span class="line"></span><br><span class="line">arr.<span class="property">length</span>; <span class="comment">// 13</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>constructor（<code>Array.prototype.constructor</code>）：返回的就是<code>Array</code>本身！即所有数组实例的构造器都是继承自<code>Array</code>对象！</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">arr.<span class="property">constructor</span>; <span class="comment">// [Function: Array]</span></span><br></pre></td></tr></table></figure>
<h3 id="访问方法"><a class="markdownIt-Anchor" href="#访问方法"></a> 访问方法</h3>
<p>所有的访问方法<font color=red><strong>绝对不会改变调用它们的对象的值</strong></font>，只会返回一个新的数组或者返回一个其它的期望值。</p>
<ol>
<li>concat方法：用于合并多个数组或多个元素，返回一个新的数组；</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">接受一个或多个数组或元素</span></span><br><span class="line"><span class="comment">与原数组合并返回到一个新的数组！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">concat</span>(val1[, val2[, ...[, valN]]]);</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>join方法：连接数组内所有的元素并返回一个字符串；数组中元素值为<code>null</code>或<code>undefined</code>的，该元素则转化为空字符串！</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">separator为连接字符，可以不填</span></span><br><span class="line"><span class="comment">当不填时separator参数时，默认为&quot;,&quot;</span></span><br><span class="line"><span class="comment">当连接字符为空字符串&quot;&quot;时，元素之间没有连接字符，直接相连</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">join</span>(separator);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Example</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">arr.<span class="title function_">join</span>(); <span class="comment">// &quot;1,2,3&quot;</span></span><br><span class="line">arr.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>); <span class="comment">// &quot;123&quot;</span></span><br><span class="line">arr.<span class="title function_">join</span>(<span class="string">&quot;-&quot;</span>); <span class="comment">// &quot;1-2-3&quot;</span></span><br><span class="line">arr.<span class="title function_">join</span>(<span class="string">&quot;, &quot;</span>); <span class="comment">// &quot;1, 2, 3&quot;  （最后一个空格自动去除？）</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>slice方法：返回一个从开始到结束（<font color=red><strong>不包括结束索引的那个元素！</strong></font>）选择的数组的一部分<strong>浅拷贝</strong>到一个新数组对象。原始数组不会被修改。</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">begin和end参数分别为开始和结束索引，都是可选的</span></span><br><span class="line"><span class="comment">当两个参数都不填时，直接复制整个数组</span></span><br><span class="line"><span class="comment">当end参数不填时，复制从begin开始到最后一个的元素</span></span><br><span class="line"><span class="comment">begin和end的索引可以为负，代表倒数第几个元素！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">slice</span>([begin[, end]]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Example</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">arr.<span class="title function_">slice</span>(); <span class="comment">// [1, 2, 3]</span></span><br><span class="line">arr.<span class="title function_">slice</span>(<span class="number">1</span>); <span class="comment">// [2, 3]</span></span><br><span class="line">arr.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">2</span>); <span class="comment">// [1, 2]</span></span><br><span class="line">arr.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">1</span>); <span class="comment">// [1, 2]</span></span><br></pre></td></tr></table></figure>
<ol start="4">
<li>
<p>toString方法：相当于<code>arr.join()</code>，即直接用<code>,</code>连接所有元素返回一个字符串；</p>
</li>
<li>
<p>indexOf方法：返回在数组中可以找到一个给定元素的<font color=red><strong>第一个索引</strong></font>，如果不存在，则返回-1；</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">elem参数为所查找的元素</span></span><br><span class="line"><span class="comment">startIndex为开始查找的索引，可以为负，同上</span></span><br><span class="line"><span class="comment">当startIndex超出数组length时直接返回-1！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">indexOf</span>(elem[, startIndex=<span class="number">0</span>]);</span><br></pre></td></tr></table></figure>
<h3 id="修改器方法"><a class="markdownIt-Anchor" href="#修改器方法"></a> 修改器方法</h3>
<p>所有的修改器方法<font color=red><strong>会改变调用它们的对象自身的值</strong></font>！</p>
<ol>
<li>
<p>push方法：在数组的末尾添加一个或多个元素，并返回数组的新长度；</p>
</li>
<li>
<p>pop方法：删除数组的最后一个元素，并返回这个元素；</p>
</li>
<li>
<p>reserve方法：颠倒数组中所有元素的顺序，并返回颠倒后的数组；</p>
</li>
<li>
<p>shift方法：删除数组中第一个元素，并返回这个元素；</p>
</li>
<li>
<p>unshift方法：在数组的开头添加一个或多个元素，并返回数组的新长度；</p>
</li>
<li>
<p>sort方法：对数组元素进行排序，并返回当前数组；</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">compareFunction参数为比较函数，是可选的；</span></span><br><span class="line"><span class="comment">若不填参数，默认按Unicode码进行排序；</span></span><br><span class="line"><span class="comment">compareFunction(a, b)若大于0，则b在a之前；</span></span><br><span class="line"><span class="comment">若小于0，则a在b之前；</span></span><br><span class="line"><span class="comment">若等于0，则a与b的相对位置不变！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">sort</span>([compareFunction]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//MDN Example</span></span><br><span class="line"><span class="keyword">var</span> fruit = [<span class="string">&#x27;cherries&#x27;</span>, <span class="string">&#x27;apples&#x27;</span>, <span class="string">&#x27;bananas&#x27;</span>];</span><br><span class="line">fruit.<span class="title function_">sort</span>(); </span><br><span class="line"><span class="comment">// [&#x27;apples&#x27;, &#x27;bananas&#x27;, &#x27;cherries&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> scores = [<span class="number">1</span>, <span class="number">10</span>, <span class="number">21</span>, <span class="number">2</span>]; </span><br><span class="line">scores.<span class="title function_">sort</span>(); </span><br><span class="line"><span class="comment">// [1, 10, 2, 21]</span></span><br><span class="line"><span class="comment">// 注意10在2之前,</span></span><br><span class="line"><span class="comment">// 因为在 Unicode 指针顺序中&quot;10&quot;在&quot;2&quot;之前</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> things = [<span class="string">&#x27;word&#x27;</span>, <span class="string">&#x27;Word&#x27;</span>, <span class="string">&#x27;1 Word&#x27;</span>, <span class="string">&#x27;2 Words&#x27;</span>];</span><br><span class="line">things.<span class="title function_">sort</span>(); </span><br><span class="line"><span class="comment">// [&#x27;1 Word&#x27;, &#x27;2 Words&#x27;, &#x27;Word&#x27;, &#x27;word&#x27;]</span></span><br><span class="line"><span class="comment">// 在Unicode中, 数字在大写字母之前,</span></span><br><span class="line"><span class="comment">// 大写字母在小写字母之前.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//要想让数字数组按照数值从小到大排序</span></span><br><span class="line"><span class="comment">//可以自定义一个compareFunction</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    当a &gt; b时，返回值大于0</span></span><br><span class="line"><span class="comment">    当a &lt; b时，返回值小于0</span></span><br><span class="line"><span class="comment">    a = b时，返回值为0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">compare</span>(<span class="params">a, b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">4</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">9</span>];</span><br><span class="line">arr.<span class="title function_">sort</span>(compare); <span class="comment">// [1, 4, 9, 12]</span></span><br></pre></td></tr></table></figure>
<ol start="7">
<li>splice方法：通过删除现有元素和/或添加新元素来更改一个数组的内容，并且返回被删除的元素（以数组的形式）；</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">array.<span class="title function_">splice</span>(start)</span><br><span class="line"><span class="comment">// 删除数组从start开始到末尾的所有元素，start可以为负值</span></span><br><span class="line">array.<span class="title function_">splice</span>(start, deleteCount) </span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">删除数组从start开始的deleteCount个元素；</span></span><br><span class="line"><span class="comment">deleteCount可以为0，即不删除任何元素；</span></span><br><span class="line"><span class="comment">当deleteCount大于从start开始到末尾元素的个数，则删除从start开始到末尾的所有元素</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">array.<span class="title function_">splice</span>(start, deleteCount, item1, item2, ...)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">item1,irem2,...为要添加的元素</span></span><br><span class="line"><span class="comment">从start开始添加</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//示例：删除数组中的某一个元素</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">arr.<span class="title function_">splice</span>(<span class="number">1</span>, <span class="number">1</span>); <span class="comment">// 2 （即删除数组中索引为1的元素）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//MDN示例：从第2位开始删除所有的元素</span></span><br><span class="line"><span class="keyword">var</span> myFish = [<span class="string">&#x27;angel&#x27;</span>, <span class="string">&#x27;clown&#x27;</span>, <span class="string">&#x27;mandarin&#x27;</span>, <span class="string">&#x27;sturgeon&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> removed = myFish.<span class="title function_">splice</span>(<span class="number">2</span>);</span><br><span class="line"><span class="comment">// 运算后的myFish ：[&quot;angel&quot;, &quot;clown&quot;] </span></span><br><span class="line"><span class="comment">// 被删除的元素数组： [&quot;mandarin&quot;, &quot;sturgeon&quot;]</span></span><br></pre></td></tr></table></figure>
<h3 id="迭代方法"><a class="markdownIt-Anchor" href="#迭代方法"></a> 迭代方法</h3>
<p>在下面的众多遍历方法中，有很多方法都需要指定一个回调函数作为参数。<font color=#39f><strong>在每一个数组元素都分别执行完回调函数之前，数组的length属性会被缓存在某个地方</strong></font>，所以，如果你在回调函数中为当前数组添加了新的元素，那么那些新添加的元素是不会被遍历到的。此外，如果在回调函数中对当前数组进行了其它修改，比如改变某个元素的值或者删掉某个元素，那么随后的遍历操作可能会受到未预期的影响。总之，不要尝试在遍历过程中对原数组进行任何修改，虽然规范对这样的操作进行了详细的定义，但为了可读性和可维护性，请不要这样做。（<strong>MDN</strong>）</p>
<ol>
<li>forEach方法：为数组中的每个元素执行一次回调函数；该方法没有返回值！</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">callback为回调函数</span></span><br><span class="line"><span class="comment">thisArg为可选参数，作为callback函数中this对象进行使用</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">array.<span class="title function_">forEach</span>(callback[, thisArg]);</span><br><span class="line"></span><br><span class="line">callback = <span class="keyword">function</span>(<span class="params">currentValue, index, array</span>)&#123;</span><br><span class="line">    <span class="comment">//do something</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">currentValue为当前遍历的元素值</span></span><br><span class="line"><span class="comment">index为当前遍历的元素索引</span></span><br><span class="line"><span class="comment">array为所遍历的数组本身</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>every方法：如果数组中的每个元素都满足测试函数，则返回<code>true</code>，否则返回 <code>false</code>；该方法不会改变原数组！</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">参数同上</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">arr.<span class="title function_">every</span>(callback[, thisArg]);</span><br></pre></td></tr></table></figure>
<p><code>every</code>方法为数组中的每个元素执行一次 <code>callback</code> 函数，直到它找到一个使 <code>callback</code> 返回 <code>false</code>（表示可转换为布尔值 <code>false</code> 的值）的元素。如果发现了一个这样的元素，<code>every</code> 方法将会立即返回 <code>false</code>。否则，<code>callback</code> 为每一个元素返回 <code>true</code>，<code>every</code> 就会返回 <code>true</code>。<code>callback</code>只会为那些已经被赋值的索引调用。不会为那些被删除或从来没被赋值的索引调用。（<strong>MDN</strong>）</p>
<ol start="3">
<li>some方法：如果数组中至少有一个元素满足测试函数，则返回 <code>true</code>，否则返回 <code>false</code>。</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">arr.<span class="title function_">some</span>(callback[, thisArg]);</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>filter方法：将所有在过滤函数中返回<code>true</code> 的数组元素<strong>放进一个新数组中并返回</strong>。</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//语法</span></span><br><span class="line"><span class="keyword">var</span> new_array = arr.<span class="title function_">filter</span>(callback[, thisArg]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//MDN Example</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isBigEnough</span>(<span class="params">value</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> value &gt;= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> filtered = [<span class="number">12</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>].<span class="title function_">filter</span>(isBigEnough);</span><br><span class="line"></span><br><span class="line"><span class="comment">// filtered is [12, 130, 44]</span></span><br></pre></td></tr></table></figure>
<ol start="5">
<li>map方法：返回一个由回调函数的返回值组成的新数组；</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> new_array = arr.<span class="title function_">map</span>(<span class="keyword">function</span> <span class="title function_">callback</span>(<span class="params">currentValue, index, array</span>) &#123; </span><br><span class="line">    <span class="comment">// Return element for new_array </span></span><br><span class="line">&#125;[, thisArg]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// MDN实例：求每个元素的平方</span></span><br><span class="line"><span class="keyword">var</span> numbers = [<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>];</span><br><span class="line"><span class="keyword">var</span> roots = numbers.<span class="title function_">map</span>(<span class="title class_">Math</span>.<span class="property">sqrt</span>);</span><br><span class="line"><span class="comment">// roots的值为[1, 2, 3], numbers的值仍为[1, 4, 9]</span></span><br></pre></td></tr></table></figure>
<ol start="6">
<li>reduce方法：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">callback为回调函数，有四个参数</span></span><br><span class="line"><span class="comment">initialValue为可选参数，为累计值的初始值！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">arr.<span class="title function_">reduce</span>(callback[, initialValue]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">accumulator：累加器累加回调的返回值;它是上一次调用回调时返回的累积值，或initialValue</span></span><br><span class="line"><span class="comment">currentValue：数组中正在处理的元素</span></span><br><span class="line"><span class="comment">currentIndex（可选）：数组中正在处理的当前元素的索引。</span></span><br><span class="line"><span class="comment">如果提供了initialValue，则索引号从0开始，否则为索引从1开始</span></span><br><span class="line"><span class="comment">array：调用reduce的数组</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">callback = <span class="keyword">function</span>(<span class="params">accumulator, currentValue, currentIndex, array</span>)&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    do something</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="comment">/* some value */</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>回调函数第一次执行时，<code>accumulator</code> 和<code>currentValue</code>的取值有两种情况：调用<code>reduce</code>时提供<code>initialValue</code>，<code>accumulator</code>取值为<code>initialValue</code>，<code>currentValue</code>取数组中的第一个值；没有提供 <code>initialValue</code>，<code>accumulator</code>取数组中的第一个值，<code>currentValue</code>取数组中的第二个值。（<strong>MDN</strong>）</p>
<ol start="7">
<li>find方法：返回数组中<font color=red><strong>满足提供的测试函数的第一个元素的值</strong></font>，否则返回 <code>undefined</code>。</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">callback为回调函数，参数分别为（val，index，array）</span></span><br><span class="line"><span class="comment">thisArg用来指定callback的this参数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">arr.<span class="title function_">find</span>(callback[, thisArg]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">enough</span>(<span class="params">val</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> val &gt; <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">12</span>, <span class="number">16</span>, <span class="number">6</span>, <span class="number">23</span>, <span class="number">8</span>, <span class="number">29</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">find</span>(enough)); <span class="comment">// 23</span></span><br></pre></td></tr></table></figure>
<h3 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h3>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array">Array - JavaScript | MDN</a></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>再论闭包</title>
    <url>/post/js-closure-again/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>长久以来，我对于<code>js</code>中的闭包的准确定义有所疑惑，我一直在寻找用于准确定义闭包的那个<font color=red><strong>宾语</strong></font>，即『闭包是什么』中的那个『什么』。不过最近看过《<font color=#36f><strong>你不知道的 JavaScript （上卷）</strong></font>》这本书之后算是解答了我的疑惑，为什么我会被困惑这么久（我相信有不少人也感到疑惑），可能是由于闭包<strong>平时使用的场景</strong>（显式使用）以及对<code>js</code>的作用域相关机制的不了解造成的。</p>
<span id="more"></span>
<h2 id="重新认识闭包"><a class="markdownIt-Anchor" href="#重新认识闭包"></a> 重新认识闭包</h2>
<h3 id="闭包的定义"><a class="markdownIt-Anchor" href="#闭包的定义"></a> 闭包的定义</h3>
<p>首先给出我所理解的闭包的『精准』定义：</p>
<blockquote>
<p>闭包就是函数在执行时对其定义时的词法作用域的引用。</p>
</blockquote>
<p>也就是说由于闭包的存在，可以使得函数<font color=red><strong>无论在何处执行</strong></font>都可以访问定义时的词法作用域内的变量（包括函数，毕竟函数也是一种声明）。</p>
<h3 id="闭包的显式触发条件"><a class="markdownIt-Anchor" href="#闭包的显式触发条件"></a> 闭包的显式触发条件</h3>
<p>为啥要说显式的触发（或者说是『激活』闭包），因为一般隐式的闭包看起来好像没啥用，也就很容易被忽略：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">123</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">bar</span>(<span class="params"></span>) &#123; <span class="comment">// --&gt;实际上bar函数此时已经具备闭包</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">bar</span>() <span class="comment">// --&gt; 但是bar函数执行的地方却位于定义时的词法作用域内，闭包与当前词法作用域实际上是一致的</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>()</span><br></pre></td></tr></table></figure>
<p>上面的例子由于<code>bar</code>函数在执行的时候位于<code>foo</code>函数之内，也就是<font color=red><strong>其定义时的词法作用域之内</strong></font>，闭包的范围就刚好与当前词法作用域是一致的，所以此时闭包的作用可以忽略不计（此时的闭包究竟<font color=red><strong>存在与否无法确定</strong></font>，我姑且称之为『隐式的闭包』）。</p>
<p>因此，要想发挥闭包的作用需要<strong>两个条件</strong>：</p>
<ol>
<li>该函数要在<font color=red><strong>其定义时的词法作用域之外</strong></font>执行；</li>
<li>该函数作用域内使用了其定义时的词法作用域的其他变量（其他变量指的是<font color=red><strong>自身作用域外的变量</strong></font>）</li>
</ol>
<h3 id="闭包与js垃圾收集机制"><a class="markdownIt-Anchor" href="#闭包与js垃圾收集机制"></a> 闭包与js垃圾收集机制</h3>
<p><code>js</code>中最常用的垃圾收集方法就是<strong>标记清除</strong>（<code>mark-and-sweep</code>）：</p>
<blockquote>
<p>垃圾收集器在运行的时候会给存储在内存中的所有变量都加上标记（当然，可以使用任何标记方式）。然后，它会去掉环境中的变量以及被环境中的变量引用的变量的标记。而在此之后再被加上标记的变量将被视为准备删除的变量，原因是环境中的变量已经无法访问到这些变量了。最后，垃圾收集器完成内存清除工作，销毁那些带标记的值并回收它们所占用的内存空间。<br> ——《JavaScript高级程序设计》</p>
</blockquote>
<p>也就是说一个变量在<font color=red><strong>离开其声明的作用域时且没有被引用时</strong></font>会被垃圾收集器标记，然后被回收清除内存无法被访问。然而，由于闭包引用了其定义时的词法作用域，所以即便<font color=red><strong>在离开作用域后该词法作用域内的变量仍然属于被引用的状态</strong></font>，因此这些变量都<strong>没有被回收</strong>，也就能够通过闭包进行访问！</p>
<h2 id="常见的闭包"><a class="markdownIt-Anchor" href="#常见的闭包"></a> 常见的闭包</h2>
<p>实际上，我们在写代码的时候可能无意中使用了闭包，但我们并非有意的去使用，所以就忽略了一些常见的闭包。</p>
<h3 id="回调函数"><a class="markdownIt-Anchor" href="#回调函数"></a> 回调函数</h3>
<p>回调函数由于并非立即执行，所以很容易在定义时的词法作用域外进行执行：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">say</span>(<span class="params">text</span>) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(text)</span><br><span class="line">    &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">say</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>当<font color=red><strong>在回调函数中使用一些词法作用域内的局部变量</strong></font>时，闭包就出现了，尽管有时我们并没有意识到这一点。</p>
<h3 id="for循环"><a class="markdownIt-Anchor" href="#for循环"></a> for循环</h3>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// code 1</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">    &#125;, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// code 2</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">    &#125;, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这两段代码经常出现在前端的面试中，虽然看似代码仅有一处细微差距，但是实际上却产生了完全不同的结果，背后隐藏着一些容易被忽视的原因：</p>
<ol>
<li><code>var</code>有变量提升，而<code>let</code>没有变量提升；而<code>var</code>的变量提升会『穿透』块级作用域，也就是会提升到<code>for</code>语句的外层作用域！</li>
<li>变量在<code>for</code>循环过程中不止被声明一次，<font color=red><strong>每次迭代</strong></font>都会声明！也就是说每次迭代都会创建一个<strong>新的块级作用域</strong>，但是块级作用域对于<code>var</code>声明不起作用，但是<code>let</code>声明会重新绑定到每个块级作用域。</li>
</ol>
<p>根据以上的原因可以得知第一段代码中所有<code>setTimeout</code>中的回调函数<strong>共用了一个全局变量</strong><code>i</code>，而第二段代码中所有回调函数则分别<strong>调用了不同的局部变量</strong><code>i</code>！</p>
<h3 id="模块机制"><a class="markdownIt-Anchor" href="#模块机制"></a> 模块机制</h3>
<p><code>js</code>中的模块一般都是通过暴露一个对象来传递模块中的方法或变量，这里的方法就可以使用随意的使用模块内的任何变量，而没有暴露出去的变量和方法就可以看成是『私有』的。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Moudle1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> name = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">sayHello</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Hello! My name is <span class="subst">$&#123;name&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">changeName</span>(<span class="params">val</span>) &#123;</span><br><span class="line">        name = val</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        sayHello,</span><br><span class="line">        changeName</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> m1 = <span class="title class_">Moudle1</span>()</span><br><span class="line"></span><br><span class="line">m1.<span class="title function_">sayHello</span>() <span class="comment">// Hello! My name is abc</span></span><br><span class="line">m1.<span class="title function_">changeName</span>(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line">m1.<span class="title function_">sayHello</span>() <span class="comment">// Hello! My name is ok</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> m2 = <span class="title class_">Moudle1</span>()</span><br><span class="line">m2.<span class="title function_">sayHello</span>() <span class="comment">// Hello! My name is abc</span></span><br></pre></td></tr></table></figure>
<p>类似这种原理暴露出来的模块方法实际上都利用了闭包，闭包引用了<font color=#36f><strong>整个模块的词法作用域</strong></font>，因此可以访问模块内的所有变量。从上面例子看到即使改变了闭包内的变量值也<strong>不会影响到原词法作用域内</strong>的变量，大概是因为函数每次执行的时候都是<strong>重新创建作用域</strong>的？</p>
<h2 id="一段代码"><a class="markdownIt-Anchor" href="#一段代码"></a> 一段代码</h2>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">bar</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">bar</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> b = <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>()</span><br></pre></td></tr></table></figure>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="http://www.ituring.com.cn/book/1666">《你不知道的 JavaScript（上卷）》</a> —— 第5章：作用域闭包</li>
<li><a href="http://www.ituring.com.cn/book/946">《JavaScript 高级程序设计（第3版）》</a> —— 4.3：垃圾收集</li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>关于箭头函数</title>
    <url>/post/js-arrow-function/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>箭头函数的设计目的就是替代函数表达式及匿名函数在某些场景的应用，使用箭头函数能够更加简洁明了地描述匿名函数和函数表达式！</p>
<blockquote>
<p>箭头函数表达式的语法比函数表达式更简洁，并且没有自己的this，arguments，super或new.target。箭头函数表达式更适用于那些本来需要匿名函数的地方，并且它不能用作构造函数。<br><br />
—— <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions">MDN</a></p>
</blockquote>
<span id="more"></span>
<h2 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h2>
<p>总体语法是<code>params =&gt; expression/statement</code>；</p>
<p>箭头（<code>=&gt;</code>）的左侧是<strong>函数形参</strong>，而右侧则是<strong>函数语句或者表达式</strong>；需要注意的是左侧参数部分和箭头要保持在同一行，<strong>不能进行换行</strong>！如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(a, b)</span><br><span class="line"> =&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>
<h3 id="左侧形式"><a class="markdownIt-Anchor" href="#左侧形式"></a> 左侧形式</h3>
<ol>
<li>
<p><strong>多个</strong>（两个及以上参数）或<strong>无参数</strong>时，用括号进行包裹：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(a, b, ..., z) =&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>仅一个参数</strong>时可以不用括号包裹：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">a =&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>可以使用<strong>剩余参数</strong>（<code>...</code>），<strong>仅有一个参数且为剩余参数</strong>时必须加上括号：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(a, ...other) =&gt; &#123;&#125;</span><br><span class="line">(...params) =&gt; &#123;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>参数支持<strong>解构</strong>和<strong>默认值</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">([a, b] = [<span class="number">0</span>, <span class="number">1</span>], c = <span class="number">3</span>) =&gt; a + b + c <span class="comment">// 4</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="右侧形式"><a class="markdownIt-Anchor" href="#右侧形式"></a> 右侧形式</h3>
<ol>
<li>
<p>非对象字面量和一般表达式，不需要加大括号，作为返回值：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">t1</span> = (<span class="params"></span>) =&gt; <span class="number">1</span></span><br><span class="line"><span class="title function_">t1</span>() <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">t2</span> = (<span class="params">a, b</span>) =&gt; a + b</span><br><span class="line"><span class="title function_">t2</span>(<span class="number">1</span>, <span class="number">2</span>) <span class="comment">// 3</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>对象</strong>字面量，需要加<strong>括号</strong>，作为返回值：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">t</span> = (<span class="params">name, age</span>) =&gt; (&#123;</span><br><span class="line">    <span class="attr">name</span>: name,</span><br><span class="line">    <span class="attr">age</span>: age,</span><br><span class="line">    <span class="attr">hello</span>: <span class="string">`hello, I&#x27;m <span class="subst">$&#123;name&#125;</span>.`</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">t</span>(<span class="string">&#x27;xxx&#x27;</span>, <span class="number">10</span>) <span class="comment">// &#123; name: &#x27;xxx&#x27;, age: 10, hello: &#x27;hello, I\&#x27;m xxx.&#x27; &#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>函数语句，加<strong>大括号</strong>，可以<code>return</code>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">t1</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">t1</span>(<span class="number">1</span>, <span class="number">2</span>) <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">t2</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> c = a + b</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">t2</span>(<span class="number">1</span>, <span class="number">2</span>) <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="箭头函数的特性"><a class="markdownIt-Anchor" href="#箭头函数的特性"></a> 箭头函数的特性</h2>
<ol>
<li>
<p><code>this</code>的指向：箭头函数内<code>this</code>实际上指向的是<strong>声明时所处的最近一层作用域</strong>，因此如果将箭头函数作为某个对象的方法，那么<code>this</code>并不会指向该对象，而是该对象所处的作用域；如：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="string">&#x27;inner a&#x27;</span>,</span><br><span class="line">  <span class="attr">b</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">a</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="title function_">b</span>()) <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>没有<code>arguments</code>对象；</p>
</li>
<li>
<p>不能作为构造函数，因此不能使用<code>new</code>关键字调用；</p>
</li>
<li>
<p>没有<code>prototype</code>属性；</p>
</li>
</ol>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions">箭头函数 - JavaScript | MDN</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>es6</tag>
      </tags>
  </entry>
  <entry>
    <title>js拖拽移动效果</title>
    <url>/post/js-drag-move/</url>
    <content><![CDATA[<h2 id="需求"><a class="markdownIt-Anchor" href="#需求"></a> 需求</h2>
<p>有时候需要对某一元素进行拖拽，并要求在拖拽过程中跟随鼠标进行移动；比如下面的效果：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180426/eGj2h1GcjE.gif" alt="example" /></p>
<span id="more"></span>
<h2 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h2>
<p>可以依靠<code>mousedown</code>，<code>mousemove</code>和<code>mouseup</code>三个js原生事件来实现；除了被拖动的元素之外，还需要一个用来充当『容器』的元素，<font color=red><strong>被拖动的元素为『容器』元素的子元素</strong></font>；</p>
<ol>
<li>
<p>为需要被拖动的元素绑定<code>mousedown</code>事件，并在<code>mousedown</code>事件中为『容器』元素绑定<code>mousemove</code>元素；</p>
</li>
<li>
<p>根据具体需求和<code>event</code>对象的<code>clientX</code>以及<code>clientY</code>属性，在<code>mousemove</code>事件中更新被拖动元素的位置；</p>
</li>
<li>
<p>为『容器』元素绑定<code>mouseup</code>事件，且在<code>mouseup</code>事件中<font color=red><strong>移除</strong></font>『容器』元素的所有<code>mousemove</code>事件！</p>
</li>
</ol>
<h2 id="why"><a class="markdownIt-Anchor" href="#why"></a> why?</h2>
<ol>
<li>为什么是对『容器』元素绑定<code>mousemove</code>事件，而不是直接对被拖动的元素进行绑定？</li>
</ol>
<blockquote>
<p>因为被拖动的元素（实时更新位置后）跟不上鼠标移动的速度，所以很有可能鼠标在拖动过程中超出了被拖动元素本身的范围，导致拖动停止！</p>
</blockquote>
<ol start="2">
<li>为什么是对『容器』元素绑定<code>mouseup</code>事件，而不是直接对被拖动的元素进行绑定？</li>
</ol>
<blockquote>
<p>同上，鼠标若移出被拖动元素的范围后再松开按键就不会奏效！</p>
</blockquote>
<h2 id="移动端的实现"><a class="markdownIt-Anchor" href="#移动端的实现"></a> 移动端的实现</h2>
<p>在移动端是没有<code>mousedown,mousemove,mouseup</code>事件的，但是有相对应的移动端事件：<code>touchatart、touchmove、touchend</code>；所以移动端的原理也是类似的。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="http://www.zhangxinxu.com/wordpress/2010/03/javascript%E5%AE%9E%E7%8E%B0%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%8B%96%E6%8B%BD%E6%95%88%E6%9E%9C/">JavaScript实现最简单的拖拽效果 « 张鑫旭-鑫空间-鑫生活</a></li>
<li><a href="https://www.cnblogs.com/libin-1/p/6149057.html">js实现一个可以兼容PC端和移动端的div拖动效果 - 最骚的就是你 - 博客园</a></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>关于js闭包</title>
    <url>/post/js-closure/</url>
    <content><![CDATA[<h3 id="闭包"><a class="markdownIt-Anchor" href="#闭包"></a> 闭包</h3>
<p>闭包就是（在外部？）引用特定的局部变量实例的功能；</p>
<blockquote>
<p>闭包是函数和声明该函数的词法环境的组合，这个环境包含了这个闭包创建时所能访问的所有局部变量。——MDN <br><br />
<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures</a></p>
</blockquote>
<blockquote>
<p>闭包是指有权访问另一个函数作用域中的变量的函数。——《js高级程序设计第三版》</p>
</blockquote>
<span id="more"></span>
<p>一般在<code>js</code>中，闭包用来在外部访问某一函数中的局部变量，该局部变量被保存在一个内部函数块中；如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">makeAdder</span>(<span class="params">x</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">y</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> add5 = <span class="title function_">makeAdder</span>(<span class="number">5</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">5被赋值给局部变量x，局部变量x被保存在闭包环境中</span></span><br><span class="line"><span class="comment">而闭包被赋值给add5，因此函数add5内还能继续使用x（=5）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> add10 = <span class="title function_">makeAdder</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add5</span>(<span class="number">2</span>));  <span class="comment">// 7</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">add10</span>(<span class="number">2</span>)); <span class="comment">// 12</span></span><br></pre></td></tr></table></figure>
<h3 id="使用场景"><a class="markdownIt-Anchor" href="#使用场景"></a> 使用场景</h3>
<ol>
<li>通常使用只有一个方法的对象的地方，都可以使用闭包；（将数据与函数进行绑定的时候）</li>
</ol>
<blockquote>
<p>闭包很有用，因为他允许将函数与其所操作的某些数据（环境）关联起来。这显然类似于面向对象编程。在面向对象编程中，对象允许我们将某些数据（对象的属性）与一个或者多个方法相关联。——MDN</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">makeSizer</span>(<span class="params">size</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">fontSize</span> = size + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> size12 = <span class="title function_">makeSizer</span>(<span class="number">12</span>);</span><br><span class="line"><span class="keyword">var</span> size14 = <span class="title function_">makeSizer</span>(<span class="number">14</span>);</span><br><span class="line"><span class="keyword">var</span> size16 = <span class="title function_">makeSizer</span>(<span class="number">16</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;size-12&#x27;</span>).<span class="property">onclick</span> = size12;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;size-14&#x27;</span>).<span class="property">onclick</span> = size14;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;size-16&#x27;</span>).<span class="property">onclick</span> = size16;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><strong>模拟私有方法</strong>：即<font color=red><strong>只有实例才能使用的方法，且不能直接修改对象的方法</strong></font>！（对比将方法绑定到<code>this</code>对象或原型<code>prototype</code>上，那样可以通过直接修改对象方法从而影响所有的实例！此谓之私有？）</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> makeCounter = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> privateCounter = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">changeBy</span>(<span class="params">val</span>) &#123;</span><br><span class="line">    privateCounter += val;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">increment</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title function_">changeBy</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">decrement</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="title function_">changeBy</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">value</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> privateCounter;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Counter1</span> = <span class="title function_">makeCounter</span>();</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">Counter2</span> = <span class="title function_">makeCounter</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Counter1</span>.<span class="title function_">value</span>()); <span class="comment">/* logs 0 */</span></span><br><span class="line"><span class="title class_">Counter1</span>.<span class="title function_">increment</span>();</span><br><span class="line"><span class="title class_">Counter1</span>.<span class="title function_">increment</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Counter1</span>.<span class="title function_">value</span>()); <span class="comment">/* logs 2 */</span></span><br><span class="line"><span class="title class_">Counter1</span>.<span class="title function_">decrement</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Counter1</span>.<span class="title function_">value</span>()); <span class="comment">/* logs 1 */</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Counter2</span>.<span class="title function_">value</span>()); <span class="comment">/* logs 0 */</span></span><br></pre></td></tr></table></figure>
<h3 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h3>
<blockquote>
<p>如果不是某些特定任务需要使用闭包，在其它函数中创建函数是不明智的，因为闭包在处理速度和内存消耗方面对脚本性能具有负面影响。</p>
</blockquote>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>Event对象与自定义事件</title>
    <url>/post/js-event-and-customed-js-event/</url>
    <content><![CDATA[<h2 id="事件对象"><a class="markdownIt-Anchor" href="#事件对象"></a> 事件对象</h2>
<p>当为<code>DOM</code>元素添加一些事件的回调函数后，事件被触发时，会传给回调函数一个<code>Event</code>对象作为第一个参数；而这个<code>Event</code>对象包含关于触发的事件的一些信息及处理方法。</p>
<span id="more"></span>
<h3 id="常用属性"><a class="markdownIt-Anchor" href="#常用属性"></a> 常用属性</h3>
<ol>
<li><code>bubbles</code>： <code>Boolean</code>（只读）， 表明事件是否冒泡；</li>
<li><code>cancelable</code>： <code>Boolean</code> （只读）， 表明是否可以取消事件的默认行为；</li>
<li><code>currentTarget</code>： <code>Element</code> （只读），事件处理程序当前正在处理事件的那个元素；</li>
<li><code>defaultPrevented</code>： <code>Boolean</code> （只读）， 为<code>true</code>表示已经调用了<code>preventDefault()</code>（<code>DOM3</code>级事件中新增）</li>
<li><code>detail</code>： <code>Integer</code> （只读），与事件相关的细节信息；</li>
<li><code>eventPhase</code>： <code>Integer</code> （只读），调用事件处理程序的阶段： <code>1</code>表示捕获阶段，<code>2</code>表示『处于目标』（即<code>currentTarget</code>与<code>target</code>一致时），<code>3</code>表示冒泡阶段；</li>
<li><code>target</code>： <code>Element</code> （只读），事件的目标；</li>
<li><code>type</code>： <code>String</code> （只读），被触发的事件的类型；</li>
<li><code>view</code>： <code>AbstractView</code>（只读），与事件关联的抽象视图。等同于发生事件的<code>window</code>对象；</li>
</ol>
<blockquote>
<p>整理自《JavaScript 高级程序设计》</p>
</blockquote>
<h3 id="常用方法"><a class="markdownIt-Anchor" href="#常用方法"></a> 常用方法</h3>
<ol>
<li><code>preventDefault()</code>：<code>Function</code>（只读），取消事件的默认行为。如果<code>cancelable</code>是<code>true</code>，则可以使用这个方法；</li>
<li><code>stopImmediatePropagation()</code>：<code>Function</code>（只读），取消事件的进一步捕获或冒泡，<strong>同时阻止任何事件处理程序被调用</strong>（<code>DOM3</code>级事件中新增）</li>
<li><code>stopPropagation()</code>：<code>Function</code>（只读），取消事件的进一步捕获或冒泡。如果<code>bubbles</code>为<code>true</code>，则可以使用这个方法；</li>
</ol>
<blockquote>
<p>整理自《JavaScript 高级程序设计》</p>
</blockquote>
<h3 id="dom事件流"><a class="markdownIt-Anchor" href="#dom事件流"></a> DOM事件流</h3>
<blockquote>
<p>“DOM2级事件”规定的事件流包括三个阶段：事件捕获阶段、处于目标阶段和事件冒泡阶段。</p>
</blockquote>
<h2 id="构建自定义事件"><a class="markdownIt-Anchor" href="#构建自定义事件"></a> 构建自定义事件</h2>
<p>构建一个自定义事件的关键就是：</p>
<ol>
<li>
<p><font color=red><strong>拦截原生事件，阻断原事件传播</strong></font>：利用<code>addEventlistener</code>的第三个参数，可以在某父级<code>DOM</code>上事件传播的捕获阶段触发回调函数，然后使用<code>stopPropagation</code>方法阻止原事件的进一步传递；</p>
</li>
<li>
<p><font color=red><strong>构造自定义<code>Event</code>对象</strong></font>：利用<code>Event</code>构造函数构造一个自定义属性的事件对象；</p>
</li>
<li>
<p><font color=red><strong>派发自定义事件</strong></font>：使用<code>EventTarget</code>对象自带的<code>dispatchEvent</code>方法进行事件对象的派发；</p>
</li>
</ol>
<h3 id="addeventlistener方法"><a class="markdownIt-Anchor" href="#addeventlistener方法"></a> addEventlistener方法</h3>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">target.<span class="title function_">addEventListener</span>(type, listener[, useCapture])</span><br></pre></td></tr></table></figure>
<p><code>addEventListener</code>可以为<code>DOM</code>绑定一个<code>DOM2</code>级事件的监听处理，一般第三个参数<code>useCapture</code>很少使用，其作用就是该事件是否在<strong>捕获阶段</strong>触发，默认为<code>false</code>，因此设置为<code>true</code>时可在捕获阶段触发监听处理函数！</p>
<h3 id="创建event对象"><a class="markdownIt-Anchor" href="#创建event对象"></a> 创建Event对象</h3>
<blockquote>
<p>event = new Event(typeArg, eventInit);</p>
</blockquote>
<p>通过<code>Event</code>构造函数可以创建一个自定义属性的<code>Event</code>对象，相当于回调函数接收的第一个参数；</p>
<ul>
<li><code>typeArg</code>：事件的名称；</li>
<li><code>eventInit</code>：事件的设置选项，为一个对象，该对象可以使用以下属性：
<ul>
<li><code>bubbles</code>：<code>Boolean</code>类型，表示该事件是否可以冒泡，默认值为<code>false</code>；</li>
<li><code>cancelable</code>：<code>Boolean</code>类型，表示该事件是否可以使用<code>preventDefault()</code>方法进行取消，默认为<code>false</code>；</li>
<li><code>composed</code>：<code>Boolean</code>类型，事件是否会在影子<code>DOM</code>根节点（<code>shadow root DOM</code>）之外触发侦听器，默认为<code>false</code>；</li>
</ul>
</li>
</ul>
<h3 id="dispatchevent"><a class="markdownIt-Anchor" href="#dispatchevent"></a> dispatchEvent()</h3>
<blockquote>
<p>EventTarget.dispatchEvent(event)</p>
</blockquote>
<ul>
<li><code>EventTarget</code>：一般为触发事件时<code>Event</code>对象的<code>target</code>属性所指向的<code>DOM</code>节点；</li>
<li><code>event</code>：<code>Event</code>对象；</li>
</ul>
<p>使用该方法就相当于某个<code>DOM</code>节点触发了某个<code>event</code>事件；</p>
<h3 id="案例自定义tap事件"><a class="markdownIt-Anchor" href="#案例自定义tap事件"></a> 案例：自定义tap事件</h3>
<p>由于现在的移动端设备的屏幕多是触摸屏，因此<code>H5</code>针对触摸屏特别制定了适用于触摸设备的<code>TouchEvent</code>事件规范，这使得触摸屏的点击事件变得更加灵敏了；</p>
<p>为啥使用<code>click</code>事件就不灵敏了？由于一些<strong>历史原因</strong>，现在的移动端浏览器对于<code>click</code>事件和<code>touch event</code>事件的执行顺序遵守如下规则：<code>touchstart-&gt;touchmove-&gt;touchend-&gt;wait 300ms-&gt;click</code>；没错，<code>click</code>要在所有的<code>touch event</code>执行完后<font color=red><strong>延迟<code>300ms</code></strong></font>再执行；</p>
<p>因此，如果在移动端使用<code>click</code>事件在点击时会出现一个很明显的延迟，对于用户体验来说是不利；其中一个解决办法就是利用<code>TouchEvent</code>封装一个<code>tap</code>点触事件，消除<code>300ms</code>的延迟：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">initTap</span>(<span class="params">eventType = <span class="string">&#x27;tap&#x27;</span></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> isTap = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchstart&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">        isTap = <span class="literal">true</span></span><br><span class="line">    &#125;, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchmove&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">        isTap = <span class="literal">false</span></span><br><span class="line">    &#125;, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;touchend&#x27;</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(isTap) &#123;</span><br><span class="line">            e.<span class="title function_">stopPropagation</span>() <span class="comment">// 阻止原事件继续传递</span></span><br><span class="line">            <span class="keyword">let</span> tapEvent = <span class="keyword">new</span> <span class="title class_">Event</span>(eventType, &#123;</span><br><span class="line">                <span class="attr">bubbles</span>: <span class="literal">true</span>, <span class="comment">// 可以冒泡</span></span><br><span class="line">                <span class="attr">cancelable</span>: <span class="literal">false</span> <span class="comment">// 没有默认行为，不可取消默认行为</span></span><br><span class="line">            &#125;) <span class="comment">// 构建自定义tap事件（点触）</span></span><br><span class="line">            tapEvent.<span class="property">touches</span> = e.<span class="property">touches</span> <span class="comment">// 保留touchEvent的触点信息</span></span><br><span class="line">            tapEvent.<span class="property">targetTouches</span> = e.<span class="property">targetTouches</span></span><br><span class="line">            tapEvent.<span class="property">changedTouches</span> = e.<span class="property">changedTouches</span></span><br><span class="line">            e.<span class="property">target</span>.<span class="title function_">dispatchEvent</span>(tapEvent) <span class="comment">// 向target派发事件</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面给出的<code>initTap</code>方法实际上是在<code>body</code>元素上（也就是全局）劫持<code>TouchEvent</code>事件，只要判断不是<code>touchmove</code>事件，那么在<code>touchend</code>事件阶段就会在<code>target</code>对象上派发一个自定义的<code>tap</code>事件，即相当于在<code>touchend</code>事件后马上触发，因此也就没有<code>click</code>事件的<code>300ms</code>延迟，反应特别灵敏；这种方法可以直接在<code>Vue</code>中利用<code>v-on/@</code>进行监听（如<code>@tap=&quot;xxx&quot;</code>），十分方便！</p>
<p>而且<code>TouchEvent</code>在移动端的兼容性非常好，可以大胆的使用：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20190111183018.jpg?imageslim" alt="mark" /></p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Event/Event">Event() | MDN</a></li>
<li>《JavaScript 高级程序设计》</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent">EventTarget.dispatchEvent() | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/TouchEvent">TouchEvent | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener">EventTarget.addEventListener() | MDN</a></li>
<li><a href="https://www.cnblogs.com/dunken/p/4527869.html">移动端Click300毫秒点击延迟的来龙去脉(转) - 低调的大白兔 - 博客园</a></li>
<li><a href="https://github.com/ustbhuangyi/better-scroll/blob/2e9513bd6d0bb1a1fd2a17af172ef600c70dadfd/src/util/dom.js#L137">https://github.com/ustbhuangyi/better-scroll/blob/2e9513bd6d0bb1a1fd2a17af172ef600c70dadfd/src/util/dom.js#L137</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>DOM</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>JS浮点数及精度问题</title>
    <url>/post/js-float/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>总所周知，在<code>JS</code>中进行某些浮点数的计算时会得到意想不到的结果，诸如<code>0.1 + 0.2</code>和<code>1 - 0.9</code>这种，得到的结果都不是我们预期的那样；这种现象实际上是由于浮点数存储时精度丢失时所导致的，但这并不是<code>JS</code>独有的锅，而是采用<code>IEEE 754</code>标准存储浮点数都会有的问题；</p>
<span id="more"></span>
<h2 id="关于-ieee-754-标准"><a class="markdownIt-Anchor" href="#关于-ieee-754-标准"></a> 关于 IEEE 754 标准</h2>
<blockquote>
<p>IEEE 754规定了四种表示浮点数值的方式：单精确度（32位元）、双精确度（64位元）、延伸单精确度（43位元以上，很少使用）与延伸双精确度（79位元以上，通常以80位元实做）。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>在<code>JS</code>中采用的是<code>IEEE 754</code>中双精度（<code>64</code>位）格式来存储浮点数，即每个数字类型的变量存储大小为<code>64</code>位；而这<code>64</code>位存储空间按照功能分成了<code>3</code>个部分<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200503093245.jpg?imageslim" alt="img" /></p>
<ul>
<li>符号位（<code>sign bit</code>）：包含<code>1</code>位，用来表示数值的符号；<code>0</code>表示为正，<code>1</code>表示为负；记为<code>S</code>。</li>
<li>指数位（<code>exponent</code>）：包含<code>11</code>位，用来表示<strong>二进制科学计数法</strong>中的指数；记为<code>E</code>。</li>
<li>尾数位（<code>mantissa</code>）：包含<code>52</code>位，用来表示<strong>二进制科学计数法</strong>的有效数字中的<strong>小数部分</strong>；记为<code>M</code>。</li>
</ul>
<p>因此，可以得出浮点数在双精度存储的二进制数值为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>V</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>S</mi></msup><mo>∗</mo><msup><mn>2</mn><mrow><mi>E</mi><mo>−</mo><mn>1023</mn></mrow></msup><mo>∗</mo><mo stretchy="false">(</mo><mi>M</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V = (-1)^{S}*2^{E - 1023}*(M + 1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891331em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.891331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p>不过，看到这个公式可能心里会有疑问；二进制科学记数法是啥？为啥指数部分要减去<code>1023</code>？为啥有效数字中的整数部分不进行存储？</p>
<h3 id="关于二进制科学记数法"><a class="markdownIt-Anchor" href="#关于二进制科学记数法"></a> 关于二进制科学记数法</h3>
<p>可以联想一下我们熟知的<strong>十进制科学计数法</strong>：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mo>=</mo><msub><mi>N</mi><mtext>有效数字</mtext></msub><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mi>E</mi></msup></mrow><annotation encoding="application/x-tex">N = N_{有效数字}*10^{E}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">有</span><span class="mord cjk_fallback mtight">效</span><span class="mord cjk_fallback mtight">数</span><span class="mord cjk_fallback mtight">字</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>所谓的有效数字就是介于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>10</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[1, 10)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mclose">)</span></span></span></span>这个区间的数字（当然有可能带负号），而这个指数实际上可以看做是<strong>小数点的移动</strong>：</p>
<ul>
<li>当为正数时，小数点从有效数字<strong>往右移动相应的位数</strong>即可得到真实的数值；</li>
<li>同理，当指数位负数时，小数点从有效数字<strong>往左移相应的位数</strong>即可得到真实的数值；</li>
</ul>
<p>按照这个原理，二进制科学记数法的指数也是用来移动有效数字小数点位置的，只不过这时<strong>有效数字用的是二进制来表示的</strong>。</p>
<h3 id="为何只记录有效数字中的小数部分"><a class="markdownIt-Anchor" href="#为何只记录有效数字中的小数部分"></a> 为何只记录有效数字中的小数部分？</h3>
<p>联系上面提到的二进制科学计数法，可以得到二进制的有效数字位于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[1, 2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>这个区间内，所以很明显这个区间内<font color=red><strong>有效数字部分的整数始终为</strong><code>1</code></font>！既然为常量，也不需要再进行存储了，这也是为何尾数<code>M</code>加上<code>1</code>的原因，目的就是补充有效数字的整数部分。</p>
<h3 id="指数部分为何减去1023"><a class="markdownIt-Anchor" href="#指数部分为何减去1023"></a> 指数部分为何减去1023？</h3>
<p>答案就是因为<strong>指数也有负数</strong>，而指数部分最大值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>11</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^{11} - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>（即<code>2047</code>），因此取一个中间数<code>1023</code>，使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>2047</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0, 2047]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">4</span><span class="mord">7</span><span class="mclose">]</span></span></span></span>区间的数<strong>正负对半</strong>（大致对半，实际上区间变成了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>1023</mn><mo separator="true">,</mo><mn>1024</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-1023, 1024]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">4</span><span class="mclose">]</span></span></span></span>）。</p>
<p><strong>思考</strong>：为何不像<code>sign bit</code>那样指定一个<em>指数符号位</em>？试想一下，如果把指数部分第一位变成表示符号的位，那么剩余位数只有<code>10</code>位了，因此能表达的区间就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mo stretchy="false">(</mo><msup><mn>2</mn><mn>10</mn></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mn>2</mn><mn>10</mn></msup><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-(2^{10} - 1), 2^{10} - 1)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">]</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>1023</mn><mo separator="true">,</mo><mn>1023</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-1023, 1023]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">2</span><span class="mord">3</span><span class="mclose">]</span></span></span></span>。</p>
<h2 id="小数部分二进制的转换"><a class="markdownIt-Anchor" href="#小数部分二进制的转换"></a> 小数部分二进制的转换</h2>
<p>整数部分十进制转其它进制的套路都很熟了，也就是辗转相除法；但是小数部分的转换好像有点陌生，不过大概的套路和辗转相除法有点相似，只不过变成了乘法；</p>
<ol>
<li>将小数部分乘<code>2</code>，得到的数值其整数部分作为<strong>当前位</strong>进行存储；</li>
<li>将上述得到的数值小数部分重复<code>1</code>步骤，直到小数部分为<code>0</code>；</li>
</ol>
<p>和整数部分进制转换相比，小数部分的进制转换是<strong>从高位到低位</strong>，因为<strong>小数部分的指数都是负数</strong>。下面是在<code>js</code>中进行小数部分二进制的转换：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将浮点数的小数部分转为二进制小数表示</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; f 浮点数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; maxLength 小数最大长度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">decimalToBinary</span> (<span class="params">f, maxLength = <span class="number">57</span></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> res = <span class="string">&#x27;0.&#x27;</span></span><br><span class="line">  <span class="keyword">let</span> cur = <span class="number">0</span> <span class="comment">// 小数位</span></span><br><span class="line">  <span class="keyword">let</span> decimal = f &gt; <span class="number">1</span> ? f - <span class="title class_">Math</span>.<span class="title function_">floor</span>(f) : f <span class="comment">// 当前位对应的小数</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> (cur &lt; maxLength &amp;&amp; decimal !== <span class="number">0</span>) &#123;</span><br><span class="line">    cur++</span><br><span class="line">    <span class="keyword">let</span> n = decimal * <span class="number">2</span></span><br><span class="line">    <span class="keyword">let</span> intNum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(n) <span class="comment">// 取整数部分</span></span><br><span class="line">    decimal = n - intNum <span class="comment">// 去小数部分</span></span><br><span class="line">    res += intNum <span class="comment">// 将整数位补充到对应位上</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">decimalToBinary</span>(<span class="number">0.1</span>)) <span class="comment">// 0.0001100110011001100110011001100110011001100110011001101</span></span><br></pre></td></tr></table></figure>
<p>事实上可以利用<code>Number.prototype.toString()</code>方法转化二进制浮点数，因为该方法接受一个参数用来表示<strong>要转换的进制</strong>（默认进制就是<code>10</code>）；如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>(<span class="number">0.1</span>).<span class="title function_">toString</span>(<span class="number">2</span>)) <span class="comment">// 0.0001100110011001100110011001100110011001100110011001101</span></span><br></pre></td></tr></table></figure>
<p>经实践，通过<code>toString</code>转化的浮点数<strong>最大位数</strong>为<code>57</code>位。</p>
<h3 id="如何将二进制小数转为十进制小数"><a class="markdownIt-Anchor" href="#如何将二进制小数转为十进制小数"></a> 如何将二进制小数转为十进制小数</h3>
<p>这个方法跟整数部分的转换是一致的，只不过小数位的<strong>指数变成了负数</strong>；</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>k</mi><mi>i</mi></msub><mo>∗</mo><msup><mn>2</mn><mrow><mo>−</mo><mi>i</mi></mrow></msup><mo separator="true">,</mo><mtext> </mtext><mo stretchy="false">(</mo><msub><mi>k</mi><mi>i</mi></msub><mtext>为第i位小数</mtext><mo stretchy="false">)</mo></mstyle></mrow><annotation encoding="application/x-tex">D = \displaystyle\sum_{i=1}^{n}k_i * 2^{-i},\ (k_i\text{为第i位小数})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.124664em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">为第</span><span class="mord">i</span><span class="mord cjk_fallback">位小数</span></span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="精度丢失产生的原因"><a class="markdownIt-Anchor" href="#精度丢失产生的原因"></a> 精度丢失产生的原因</h2>
<p>综上，由于双精度浮点数的尾数部分只有<code>52</code>位；因此，当浮点数的实际尾数超出<code>52</code>位时，就会进行截取，也就是第<code>52</code>位之后的<strong>尾数都会被舍去</strong>，且如果取到的尾数的最后一位是<code>1</code>时，还要<strong>进行进位</strong>（类似十进制的四舍五入）。</p>
<p>由于上面的原因，可能导致某些浮点数在存储时发生了偏差，然后还原成十进制后数字也就自然不符合预期了。</p>
<h3 id="分析-01-02-的结果"><a class="markdownIt-Anchor" href="#分析-01-02-的结果"></a> 分析 0.1 + 0.2 的结果</h3>
<p><code>0.1</code>的双精度存储二进制表示<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200503093310.jpg?imageslim" alt="img" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00111111 10111001 10011001 10011001</span><br><span class="line">10011001 10011001 10011001 10011010</span><br></pre></td></tr></table></figure>
<p><code>0.2</code>的双精度存储二进制表示如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200503093335.jpg?imageslim" alt="img" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">00111111 11001001 10011001 10011001</span><br><span class="line">10011001 10011001 10011001 10011010</span><br></pre></td></tr></table></figure>
<p>可以根据获得的二进制存储信息来还原浮点数：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据双精度浮点数存储信息还原出原浮点数（十进制表示）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; info 双精度浮点数存储信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getFloat</span> (<span class="params">info</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> e = info.<span class="property">e</span>.<span class="title function_">toString</span>(<span class="number">10</span>) - <span class="number">1023</span> <span class="comment">// 计算指数</span></span><br><span class="line">  <span class="keyword">let</span> res = <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, e) * (info.<span class="property">i</span> !== <span class="literal">undefined</span> ? info.<span class="property">i</span> : <span class="number">1</span>) <span class="comment">// 有效数字的整数部分始终为1</span></span><br><span class="line"></span><br><span class="line">  info.<span class="property">m</span>.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">forEach</span>(<span class="function">(<span class="params">item ,idx</span>) =&gt;</span> &#123;</span><br><span class="line">    res += <span class="title class_">Number</span>(item) * <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, -idx - <span class="number">1</span> + e) <span class="comment">// 计算尾数部分</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> info.<span class="property">s</span> === <span class="number">0</span> ? res : -res <span class="comment">// 判断符号</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> n1 = &#123;</span><br><span class="line">  <span class="attr">s</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">e</span>: <span class="number">0b01111111011</span>,</span><br><span class="line">  <span class="attr">m</span>: <span class="string">&#x27;1001100110011001100110011001100110011001100110011010&#x27;</span></span><br><span class="line">&#125; <span class="comment">// 0.1的表示</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> n2 = &#123;</span><br><span class="line">  <span class="attr">s</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">e</span>: <span class="number">0b01111111100</span>,</span><br><span class="line">  <span class="attr">m</span>: <span class="string">&#x27;1001100110011001100110011001100110011001100110011010&#x27;</span></span><br><span class="line">&#125; <span class="comment">// 0.2的表示</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getFloat</span>(n1)) <span class="comment">// 0.1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getFloat</span>(n2)) <span class="comment">// 0.2</span></span><br></pre></td></tr></table></figure>
<p>可以看出从<code>0.1</code>和<code>0.2</code>存储的二进制数据还原得到的结果是正确的，并没有精度丢失，但是为何相加之后得到的结果却不是<code>0.3</code>呢？</p>
<p>由于<code>0.1</code>和<code>0.2</code>的尾数和符号都是相同的，不同的地方在指数部分（<code>0.2</code>的指数比<code>0.1</code>指数大<code>1</code>），但是二进制数相加时，要保证指数相同；因此先将<code>0.1</code>小数点<strong>左移一位</strong>得到：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> n3 = &#123;</span><br><span class="line">  <span class="attr">s</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">e</span>: <span class="number">0b01111111100</span>,</span><br><span class="line">  <span class="attr">i</span>: <span class="number">0</span>, <span class="comment">// 有效数字整数部分，仅作演示，实际只能是1</span></span><br><span class="line">  <span class="comment">// 由于小数点左移一位，原本的有效数整数部分1变成了尾数部分的第一位，尾数其他位的也依次右移一位</span></span><br><span class="line">  <span class="attr">m</span>: <span class="string">&#x27;1100110011001100110011001100110011001100110011001101&#x27;</span></span><br><span class="line">&#125; <span class="comment">// 0.1的另一种表示</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getFloat</span>(n3)) <span class="comment">// 0.1</span></span><br></pre></td></tr></table></figure>
<p>然后尾数部分进行相加，得到新的尾数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10110011001100110011001100110011001100110011001100111</span><br></pre></td></tr></table></figure>
<p>由于新的尾数超出了<code>52</code>位（<code>53</code>位），需要进<code>1</code>位：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 + 1.0110011001100110011001100110011001100110011001100111 =</span><br><span class="line">10.0110011001100110011001100110011001100110011001100111</span><br></pre></td></tr></table></figure>
<p>因此，最终<code>0.1 + 0.2</code>得到的二进制结果就是：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> n4 = &#123;</span><br><span class="line">  <span class="attr">s</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">e</span>: <span class="number">0b01111111101</span>, <span class="comment">// 指数加了1</span></span><br><span class="line">  <span class="attr">m</span>: <span class="string">&#x27;00110011001100110011001100110011001100110011001100111&#x27;</span> <span class="comment">// 尾数右移了，因此多了一位</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然而由于尾数部分超出了<code>52</code>位，因此只能截留<code>52</code>位，又因为截留的<font color=red>最后一位是<code>1</code></font>，因此要进<code>1</code>位，最终该结果的浮点数二进制表示为：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> n4 = &#123;</span><br><span class="line">  <span class="attr">s</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">e</span>: <span class="number">0b01111111101</span>,</span><br><span class="line">  <span class="attr">m</span>: <span class="string">&#x27;0011001100110011001100110011001100110011001100110100&#x27;</span></span><br><span class="line">&#125; <span class="comment">// 0.1 + 0.2 的二进制表示</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getFloat</span>(n4)) <span class="comment">// 0.30000000000000004</span></span><br></pre></td></tr></table></figure>
<p>所以，<code>0.1 + 0.2</code>最终得到的结果却是<code>0.30000000000000004</code>就是这么回事。</p>
<h2 id="扩展如何修复精度丢失导致的计算问题"><a class="markdownIt-Anchor" href="#扩展如何修复精度丢失导致的计算问题"></a> 扩展：如何修复精度丢失导致的计算问题？</h2>
<p><a href="https://github.com/zhangxinxu/quiz/issues/74">JS基础测试47期 · Issue #74 · zhangxinxu/quiz</a></p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://github.com/camsong/blog/issues/9">JavaScript 浮点数陷阱及解法 · Issue #9 · camsong/blog</a></li>
<li><a href="https://juejin.im/post/5b372f106fb9a00e6714aa21">js浮点数存储精度丢失原理 - 掘金</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number/toString">Number.prototype.toString() - JavaScript | MDN</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://zh.wikipedia.org/zh-hans/IEEE_754">IEEE 754 - 维基百科，自由的百科全书</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://zh.wikipedia.org/wiki/%E9%9B%99%E7%B2%BE%E5%BA%A6%E6%B5%AE%E9%BB%9E%E6%95%B8">双精度浮点数 - 维基百科，自由的百科全书</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="http://www.binaryconvert.com/result_double.html">Double (IEEE754 Double precision 64-bit)</a>：双精度浮点数<strong>存储</strong>计算可视化 <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>js中的继承方法</title>
    <url>/post/js-inherit/</url>
    <content><![CDATA[<p>继承是面向对象编程中很重要的一个概念，通过继承可以把父类中的属性和方法传递到子类中，就像是『财产继承』；</p>
<span id="more"></span>
<h3 id="原型链继承"><a class="markdownIt-Anchor" href="#原型链继承"></a> 原型链继承</h3>
<p>由于原型链的特性，只需要在子类的原型链上加入父类的属性和方法，子类就自动能够访问这些属性和方法，如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">SuperType</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">property</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">SuperType</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getSuperValue</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">property</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SubType</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">subproperty</span> = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承了 SuperType</span></span><br><span class="line"><span class="title class_">SubType</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">SuperType</span>();</span><br><span class="line"><span class="title class_">SubType</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getSubValue</span> = <span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">subproperty</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> instance = <span class="keyword">new</span> <span class="title class_">SubType</span>();</span><br><span class="line"><span class="title function_">alert</span>(instance.<span class="title function_">getSuperValue</span>()); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>
<p>一般是通过将父类的实例赋予给子类的原型（<code>prototype</code>），从而将父类的属性和方法加入至原型中；</p>
<p><strong>疑问</strong>：一般而言，一个构造函数的原型（<code>prototype</code>）的构造器（<code>constructor</code>）会指向本身，但是如果该构造函数作为子类按照上述方法改变原型，其原型的构造器便指向了其父类的构造器;</p>
<h3 id="借用构造函数"><a class="markdownIt-Anchor" href="#借用构造函数"></a> 借用构造函数</h3>
<p>通过<code>call</code>或<code>apply</code>函数的特性，调用父类构造函数，将子类作为<code>this</code>参数传入，从而将父类的属性和方法绑定到子类，如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">SuperType</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">colors</span> = [<span class="string">&quot;red&quot;</span>, <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;green&quot;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SubType</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="comment">//继承了 SuperType</span></span><br><span class="line">    <span class="title class_">SuperType</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> instance1 = <span class="keyword">new</span> <span class="title class_">SubType</span>();</span><br><span class="line">instance1.<span class="property">colors</span>.<span class="title function_">push</span>(<span class="string">&quot;black&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance1.<span class="property">colors</span>); <span class="comment">//&quot;red,blue,green,black&quot;</span></span><br><span class="line"><span class="keyword">var</span> instance2 = <span class="keyword">new</span> <span class="title class_">SubType</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(instance2.<span class="property">colors</span>); <span class="comment">//&quot;red,blue,green&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="组合继承"><a class="markdownIt-Anchor" href="#组合继承"></a> 组合继承</h3>
<p><strong>组合继承（combination inheritance）</strong>，有时候也叫做伪经典继承，指的是将原型链和借用构造函数的技组合到一块，从而发挥二者之长的一种继承模式。其背后的思路是<font color=red><strong>使用原型链实现对原型属性和方法的继承，而通过借用构造函数来实现对实例属性的继承（传入参数）</strong></font>。这样，既通过在原型上定义方法实现了函数复用，又能够保证每个实例都有它自己的属性。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>对js原型的一些理解</title>
    <url>/post/js-prototype/</url>
    <content><![CDATA[<h2 id="个人感悟"><a class="markdownIt-Anchor" href="#个人感悟"></a> 个人感悟</h2>
<ol>
<li>构造器函数的<code>constructor</code>等于其本身</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Function</span>.<span class="property">constructor</span> === <span class="title class_">Function</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<ol start="2">
<li>某一构造器的实例，其<code>constructor</code>指向该构造器（从实例的角度来看可以理解为指向上一级的构造器）</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&quot;xxf&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> f1 = <span class="keyword">new</span> <span class="title function_">foo</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(f1.<span class="property">constructor</span> === foo); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>
<p>只有自身能充当构造器的才会有<code>prototype</code></p>
</li>
<li>
<p>只要是函数（包括匿名函数）都可以做构造器</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="title class_">Function</span>();</span><br><span class="line"><span class="keyword">var</span> fun1 = <span class="keyword">new</span> <span class="title function_">fun</span>(); <span class="comment">// fun1为一个普通对象，而非函数对象</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun1); <span class="comment">// anonymous &#123;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun); <span class="comment">// [Function: anonymous]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun1.<span class="property">constructor</span> === fun); <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun1.<span class="property"><span class="keyword">prototype</span></span>); <span class="comment">// undefined</span></span><br><span class="line"><span class="comment">// fun1 为函数的实例对象，所以并不具有prototype</span></span><br></pre></td></tr></table></figure>
<p>需要注意的是<code>new Function()</code>直接<font color=red><strong>返回匿名函数对象</strong></font>（而非匿名函数的实例！），所以与直接赋值为匿名函数完全不同（<font color=red><strong>直接赋值匿名函数相当于构造了一个函数对象的实例</strong></font>！）：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;; <span class="comment">// 相当于 function fun()&#123;&#125;，但是没有函数声明提升！！！</span></span><br><span class="line"><span class="keyword">var</span> fun1 = <span class="keyword">new</span> <span class="title function_">fun</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun); <span class="comment">// [Function: fun]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun1); <span class="comment">// fun &#123;&#125;</span></span><br></pre></td></tr></table></figure>
<ol start="5">
<li><font color=red><strong><code>Object</code>实例对象</strong></font>的<code>constructor</code>为<code>[Function: Object]</code></li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(&#123;&#125;.<span class="property">constructor</span>); <span class="comment">// [Function: Object]</span></span><br></pre></td></tr></table></figure>
<ol start="6">
<li>
<p>只要是原型（<code>prototype</code>），其<code>constructor</code>必然指向下一级（即若该原型为<code>Object</code>实例对象，其<code>constructor</code>并不会指向<code>[Function: Object]</code>）</p>
</li>
<li>
<p>某个对象原型（<code>prototype</code>）的<code>constructor</code>等于该对象本身</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="title class_">Function</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun.<span class="property"><span class="keyword">prototype</span></span>); <span class="comment">// anonymous &#123;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> fun.<span class="property"><span class="keyword">prototype</span></span>); <span class="comment">// object</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span>); <span class="comment">// [Function: anonymous]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> === fun); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<ol start="8">
<li>属性<code>__proto__</code>指的是<strong>上一级构造器</strong>的<code>prototype</code></li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="title class_">Function</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun.<span class="property"><span class="keyword">prototype</span></span>); <span class="comment">// anonymous &#123;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">__proto__</span>); <span class="comment">// &#123;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">__proto__</span>.<span class="property">constructor</span>); <span class="comment">// [Function: Object]</span></span><br></pre></td></tr></table></figure>
<p>从上面的例字可以看出<code>fun</code>的<code>prototye</code>确实是<code>object</code>类型的，但是直接使用<code>construcor</code>并不能得到想要的结果，通过使用属性<code>__proto__</code>就能准确得到<font color=red><strong>上一级构造器的原型</strong></font>！</p>
<h2 id="个人总结"><a class="markdownIt-Anchor" href="#个人总结"></a> 个人总结</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/180417/ajld66Ce5l.png?imageslim" alt="关系图" /></p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://www.zhihu.com/question/34183746/answer/59043879">js中__proto__和prototype的区别和关系？ - 苏墨橘的回答 - 知乎</a></li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>js正则表达式</title>
    <url>/post/js-regexp/</url>
    <content><![CDATA[<p>正则表达式是用于匹配字符串中字符组合的模式。在js中正则表达式即为<code>RegExp</code>对象；</p>
<h2 id="构造正则表达式"><a class="markdownIt-Anchor" href="#构造正则表达式"></a> 构造正则表达式</h2>
<p><strong>方法一</strong>：<code>pattern</code>代表一个正则表达式（两个<code>/</code>之间）；<code>flags</code>代表匹配标志，可以由多个标志符组成！这样的一组符号（注意不是字符串）为<font color=red><strong>字面量</strong></font>形式；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> expression = <span class="regexp">/ pattern /</span> flags ;</span><br></pre></td></tr></table></figure>
<p><strong>匹配标志</strong>：可以单独使用，也可以多个不同的标志组合使用，如：<code>i</code>，<code>gi</code>,<code>gm</code>,<code>gmi</code>等；</p>
<table>
<thead>
<tr>
<th>标志符</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>g</td>
<td>表示全局（global）模式，即模式将被应用于所有字符串，而非在发现第一个匹配项时立即停止；</td>
</tr>
<tr>
<td>i</td>
<td>表示不区分大小写（case-insensitive）模式，即在确定匹配项时忽略模式与字符串的大小写；</td>
</tr>
<tr>
<td>m</td>
<td>表示多行（multiline）模式，即在到达一行文本末尾时还会继续查找下一行中是否存在与模式匹配的项</td>
</tr>
<tr>
<td>y</td>
<td>执行“粘性”搜索,匹配从目标字符串的当前位置开始（MDN）</td>
</tr>
</tbody>
</table>
<span id="more"></span>
<p><strong>方法二</strong>：直接用<code>new</code>构造一个<code>RegExp</code>对象；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    new RegExp(pattern [, flags])</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> regex = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;ab+c&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字面量形式</span></span><br><span class="line"><span class="keyword">let</span> regex = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="regexp">/^[a-zA-Z]+[0-9]*\W?_$/</span>, <span class="string">&quot;gi&quot;</span>); </span><br><span class="line"><span class="comment">// 字符串形式，省略 /</span></span><br><span class="line"><span class="keyword">let</span> regex = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;^[a-zA-Z]+[0-9]*\\W?_$&quot;</span>, <span class="string">&quot;gi&quot;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="正则表达式的组成"><a class="markdownIt-Anchor" href="#正则表达式的组成"></a> 正则表达式的组成</h2>
<p>一个正则表达式可以包含<font color=#36f><strong>字符类、限定符、分组、向前查找以及反向引用</strong></font>；其中有一些元字符代表着特殊含义，因此如果要匹配这些元字符就不得不转义，转义使用符号<code>\</code>；</p>
<h3 id="方括号"><a class="markdownIt-Anchor" href="#方括号"></a> 方括号</h3>
<p>方括号<code>[]</code>用来表示某一范围内的字符，如：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180419/JIk2IaC121.png?imageslim" alt="示例" /></p>
<h3 id="元字符"><a class="markdownIt-Anchor" href="#元字符"></a> 元字符</h3>
<p>元字符与转义符一起使用，代表某类特定范围的字符集；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180419/D62D4G9dHK.png?imageslim" alt="元字符" /></p>
<h3 id="量词"><a class="markdownIt-Anchor" href="#量词"></a> 量词</h3>
<p>量词对字符出现的次数和位置做出规定；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180419/IeB392EA31.png?imageslim" alt="量词" /></p>
<h2 id="括号的作用"><a class="markdownIt-Anchor" href="#括号的作用"></a> 括号的作用</h2>
<p>在正则表达式中可以使用括号<code>(</code>,<code>)</code>来围住一段表达式，又称为<strong>捕获括号</strong>，表示对相应的子匹配模式进行『记录』，并可以在某些返回数组中或特定变量中进行使用！</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// MDN 示例</span></span><br><span class="line"><span class="keyword">var</span> re = <span class="regexp">/(\w+)\s(\w+)/</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;John Smith&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> newstr = str.<span class="title function_">replace</span>(re, <span class="string">&quot;$2, $1&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newstr); <span class="comment">// Smith, John</span></span><br></pre></td></tr></table></figure>
<h2 id="regexp对象方法"><a class="markdownIt-Anchor" href="#regexp对象方法"></a> RegExp对象方法</h2>
<ol>
<li><strong>test方法</strong>：按指定正则模式来判断字符串是否含有满足该模式的子串，返回<code>true</code>或<code>false</code>；</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 匹配字符串是否满足国内手机号码的模式</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="regexp">/^1[3|4|5|8]\d&#123;9&#125;$/</span>.<span class="title function_">test</span>(<span class="string">&quot;18329682154&quot;</span>)); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li><strong>exec方法</strong>：在一个指定字符串中执行一个搜索匹配，返回一个结果数组或 <code>null</code>。当返回一个数组时，但此数组还包含两个额外的属性<code>index</code>和<code>lastIndex</code>，<code>index</code>表示匹配项在字符串中的位置，而<code>input</code>表示应用正则表达式的字符串。</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myRe = <span class="regexp">/ab*/g</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;abbcdefabh&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> myArray;</span><br><span class="line"><span class="keyword">while</span> ((myArray = myRe.<span class="title function_">exec</span>(str)) !== <span class="literal">null</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> msg = <span class="string">&#x27;Found &#x27;</span> + myArray[<span class="number">0</span>] + <span class="string">&#x27;. &#x27;</span>;</span><br><span class="line">  msg += <span class="string">&#x27;Next match starts at &#x27;</span> + myRe.<span class="property">lastIndex</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(msg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Found abb. Next match starts at 3</span></span><br><span class="line"><span class="comment">// Found ab. Next match starts at 9</span></span><br></pre></td></tr></table></figure>
<h3 id="字符串中的正则表达式方法"><a class="markdownIt-Anchor" href="#字符串中的正则表达式方法"></a> 字符串中的正则表达式方法</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/180419/9A00Am7CIA.png?imageslim" alt="字符串正则" /></p>
<ol>
<li><strong>match方法</strong>：与<code>RegExp</code>对象的<code>exec()</code>类似：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">str.<span class="title function_">match</span>(regexp);</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>
<p><strong>search方法</strong>：类似于<code>RegExp</code>对象的<code>test</code>方法，如果匹配成功，则返回正则表达式在字符串中首次匹配项的索引，否则返回<code>-1</code>。</p>
</li>
<li>
<p><strong>replace方法</strong>：返回一个由替换值替换一些或所有匹配的模式后的新字符串。模式可以是一个字符串或者一个正则表达式,替换值可以是一个字符串或者一个每次匹配都要调用的函数。<font color=red><strong>该方法并不会改变原字符串</strong></font>！</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">str.<span class="title function_">replace</span>(regexp|substr, newSubStr|<span class="keyword">function</span>)</span><br></pre></td></tr></table></figure>
<p>当使用<strong>字符串</strong>作为替换参数时，在字符串内可以使用一些特殊的变量：</p>
<table>
<thead>
<tr>
<th>变量名</th>
<th style="text-align:center">代表的值</th>
</tr>
</thead>
<tbody>
<tr>
<td>$$</td>
<td style="text-align:center">插入一个 “$”。</td>
</tr>
<tr>
<td>$&amp;</td>
<td style="text-align:center">插入匹配的子串。</td>
</tr>
<tr>
<td>$`</td>
<td style="text-align:center">插入当前匹配的子串左边的内容。</td>
</tr>
<tr>
<td>$’</td>
<td style="text-align:center">插入当前匹配的子串右边的内容。</td>
</tr>
<tr>
<td>$n</td>
<td style="text-align:center">假如第一个参数是 <code>RegExp</code>对象，并且 n 是个小于100的非负整数，那么插入第 n 个<font color=red><strong>括号匹配</strong></font>的字符串。</td>
</tr>
</tbody>
</table>
<p>当使用<strong>函数</strong>作为替换参数时，对每个匹配的子串调用该函数并使用<strong>该函数的返回值</strong>作为替换值。</p>
<p>该函数具有特定的参数名：</p>
<table>
<thead>
<tr>
<th style="text-align:center">变量名</th>
<th style="text-align:center">代表的值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">match</td>
<td style="text-align:center">匹配的子串。（对应于上述的$&amp;。）</td>
</tr>
<tr>
<td style="text-align:center">p1,p2, …</td>
<td style="text-align:center">假如replace()方法的第一个参数是一个<code>RegExp</code>对象，则代表第n个括号匹配的字符串。（对应于上述的<code>$1</code>，<code>$2</code>等。）</td>
</tr>
<tr>
<td style="text-align:center">offset</td>
<td style="text-align:center">匹配到的子字符串在原字符串中的偏移量。（比如，如果原字符串是“abcd”，匹配到的子字符串是“bc”，那么这个参数将是1）</td>
</tr>
<tr>
<td style="text-align:center">string</td>
<td style="text-align:center">被匹配的原字符串。</td>
</tr>
</tbody>
</table>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//一个替换函数示例</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">replacer</span>(<span class="params">match, p1, p2, p3, offset, string</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> [p1, p2, p3].<span class="title function_">join</span>(<span class="string">&#x27; - &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li><strong>split方法</strong>：使用指定的分隔符字符串或正则匹配模式将一个String对象分割成字符串数组，以将字符串分隔为子字符串，以确定每个拆分的位置。『相当于把分隔字符串敲掉，剩下的每截字符串组成结果数组？』</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">str.<span class="title function_">split</span>([separator[, limit]])</span><br></pre></td></tr></table></figure>
<p>当使用正则表达式作为分隔符时，表达式中若使用了<strong>捕获括号</strong>（capturing parentheses），则其匹配结果将会包含在返回的数组中。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// MDN示例</span></span><br><span class="line"><span class="keyword">var</span> myString = <span class="string">&quot;Hello 1 word. Sentence number 2.&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> splits = myString.<span class="title function_">split</span>(<span class="regexp">/(\d)/</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(splits); <span class="comment">// [ &quot;Hello &quot;, &quot;1&quot;, &quot; word. Sentence number &quot;, &quot;2&quot;, &quot;.&quot; ]</span></span><br></pre></td></tr></table></figure>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="http://www.w3school.com.cn/jsref/jsref_obj_regexp.asp">JavaScript RegExp 对象</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions">正则表达式 - JavaScript | MDN</a></li>
</ol>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>正则</tag>
      </tags>
  </entry>
  <entry>
    <title>关于this的指向</title>
    <url>/post/js-this/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>在写<code>js</code>代码的时候，尤其是写带有面向对象编程式的代码的时候，我总是会想我这里使用的<code>this</code>到底指的是什么，这个问题真是困扰了我很久。虽然代码写久了会有一些<strong>基于经验的直觉感受</strong>，不过从<font color=#39f><strong>本质</strong></font>出发是最直接的理解途径。</p>
<span id="more"></span>
<h2 id="this的指向"><a class="markdownIt-Anchor" href="#this的指向"></a> this的指向</h2>
<h3 id="默认情况"><a class="markdownIt-Anchor" href="#默认情况"></a> 默认情况</h3>
<p>当在某个函数（<code>function</code>）中使用了<code>this</code>时，这个<code>this</code>指向的是<font color=red><strong>该函数调用时所在的作用域</strong></font>，比如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>() <span class="comment">// 会输出 1</span></span><br></pre></td></tr></table></figure>
<p>可以看出上面的<code>foo</code>函数在执行的时候，实际上位于全局作用域（即<code>window</code>的作用域）中，所以<code>this</code>实际上指向了<strong>全局对象</strong><code>window</code>，而全局作用域内声明的变量实际上都变成了<code>window</code>对象的属性，所以<code>foo</code>函数内部的<code>this.a</code>实际上就是<code>window.a</code>；但是需要注意的是，如果使用的为<font color=red><strong>严格模式</strong></font>（<code>&quot;use strict&quot;</code>），函数在执行时是<strong>不能指向全局对象</strong>的！</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>() <span class="comment">// TypeError: this is undefined</span></span><br></pre></td></tr></table></figure>
<p>这时候<code>foo</code>函数的内部的<code>this</code>实际上就是<code>undefined</code>；</p>
<h3 id="函数引用"><a class="markdownIt-Anchor" href="#函数引用"></a> 函数引用</h3>
<p>当函数被某个对象的属性所引用时，该<strong>函数属性</strong>（即指向该函数的<font color=red><strong>对象属性</strong></font>）在执行的时候，<code>this</code>指向的为该属性所属的对象（需要注意的是对象属性可以为对象，也就是对象可以嵌套，因此该对象指的是<font color=red><strong>直接包含该属性的那层对象</strong></font>）；比如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="string">&#x27;just do it&#x27;</span>,</span><br><span class="line">    <span class="attr">fn</span>: foo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">fn</span>() <span class="comment">// 输出 &#x27;just do it&#x27;</span></span><br></pre></td></tr></table></figure>
<p><font color=red><strong>注</strong></font>：当函数已经被某个对象属性所引用，然后又有其他变量或对象属性指向该对象属性，其实际上还是指向原函数；如同<code>a → foo</code>，<code>b → a</code>，实际上就是<code>b → foo</code>；不管<font color=#39f><strong>中间经历多少个指向，最终指向的一定是原函数</strong></font>。比如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="string">&#x27;just do it&#x27;</span>,</span><br><span class="line">    <span class="attr">fn</span>: foo</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> bar = obj.<span class="property">fn</span> <span class="comment">// obj.fn实际指向foo，因此bar指向了foo，实际上相当于 bar = foo</span></span><br><span class="line"><span class="title function_">bar</span>() <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>
<p>从上面可以看出，中间经历多重指向后，实际上还是<strong>指向原函数</strong>，因此<code>this</code>具体指向要看执行时该函数是作为<strong>函数属性还是普通函数</strong>执行的。</p>
<h3 id="直接绑定"><a class="markdownIt-Anchor" href="#直接绑定"></a> 直接绑定</h3>
<p><code>Function.prototype</code>具有3个特殊的方法：<code>call()</code>、<code>apply()</code>和<code>bind()</code>。这个三个函数之所以特殊，是因为它们都提供了一个参数用来绑定函数内部的<code>this</code>对象，因此可以利用这3个函数直接将我们想要<code>this</code>指向的对象与<code>this</code>进行绑定。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="string">&#x27;ok&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foo.<span class="title function_">call</span>(obj) <span class="comment">// 输出 &#x27;ok&#x27;</span></span><br></pre></td></tr></table></figure>
<p>上面的<code>obj</code>对象利用<code>call</code>方法绑定到<code>foo</code>函数的<code>this</code>上，因此执行的时候<code>this.a</code>实际上就是<code>obj.a</code>。</p>
<h3 id="new绑定"><a class="markdownIt-Anchor" href="#new绑定"></a> new绑定</h3>
<p>在进行面向对象式的编程时，经常将函数作为构造器使用<code>new</code>来『<strong>构造</strong>』一个新对象，之前总以为<code>new</code>返回了函数的内部<code>this</code>对象，且<code>this</code>指向的应该就是新『构造』的实例。然而实际上这种想法是<font color=red><strong>错误</strong></font>的，<code>new</code>关键词所做的无非是一个<font color=#39f><strong>稍微特殊</strong></font>的函数调用：当该函数<font color=red><strong>没有返回值或返回值不是对象（引用类型？）时</strong></font>时，<code>new</code>会构造一个对象，<strong>将该对象的<code>__proto__</code>属性连接到函数的<code>prototype</code>属性，并将该对象指向函数内部的<code>this</code>对象</strong>，然后返回该对象；若该函数有<font color=red><strong>对象返回值</strong></font>，则直接返回该对象返回值（即此时相当于普通函数的调用而已）。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1. 没有返回值的情况</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">a</span> = <span class="string">&#x27;nothing&#x27;</span></span><br><span class="line">    <span class="keyword">let</span> b = <span class="string">&#x27;何でもない&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> o1 = <span class="keyword">new</span> <span class="title function_">foo</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o1) <span class="comment">// &#123;a: &#x27;nothing&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 有对象返回值的情况</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bar</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">a</span> = <span class="string">&#x27;nothing&#x27;</span></span><br><span class="line">    <span class="keyword">let</span> b = <span class="string">&#x27;何でもない&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="attr">a</span>: b&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> o2 = <span class="keyword">new</span> <span class="title function_">bar</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o2) <span class="comment">// &#123;a: &#x27;何でもない&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 有返回值，但不是对象的情况</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fb</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">a</span> = <span class="string">&#x27;nothing&#x27;</span></span><br><span class="line">    <span class="keyword">let</span> b = <span class="string">&#x27;何でもない&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> o3 = <span class="keyword">new</span> <span class="title function_">fb</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o3) <span class="comment">// &#123;a: &#x27;nothing&#x27;&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="箭头函数"><a class="markdownIt-Anchor" href="#箭头函数"></a> 箭头函数</h3>
<p><code>ES6</code>新增的箭头函数中使用的<code>this</code>跟普通定义的函数有所不同，这里的<code>this</code>指向的实际上是箭头函数<font color=red><strong>定义时离得最近的一层外层函数作用域</strong></font>内的<code>this</code>对象；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">a</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="string">&#x27;so what&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> bar = foo.<span class="title function_">call</span>(obj)</span><br><span class="line"><span class="title function_">bar</span>() <span class="comment">// 输出 &#x27;so what&#x27;</span></span><br></pre></td></tr></table></figure>
<p>上面通过将<code>obj</code>对象作为<code>foo</code>函数的<code>this</code>对象，然后返回一个箭头函数，该箭头函数<strong>在定义的时候</strong>内部的<code>this</code>实际上指向的就是此时<code>foo</code>函数内部的<code>this</code>对象，即<code>obj</code>对象。</p>
<p><strong>注</strong>：当有多个箭头函数嵌套时，<code>this</code>的指向也是在定义处一层一层往上直至<font color=red><strong>最近的外层非箭头函数</strong></font>的内部<code>this</code>对象。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li>《你不知道的JavaScript（上卷）》——第二章：this全面解析</li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>js数据类型及复制引用</title>
    <url>/post/js-value-use/</url>
    <content><![CDATA[<h2 id="类型与值"><a class="markdownIt-Anchor" href="#类型与值"></a> 类型与值</h2>
<p>虽然<code>js/es</code>中声明变量的时候并不能限定变量的数据类型，然而实际上值的类型就是该变量的数据类型（虽说中途可以换成其他任意数据类型的值）。</p>
<span id="more"></span>
<h3 id="内置类型"><a class="markdownIt-Anchor" href="#内置类型"></a> 内置类型</h3>
<p><code>js</code>目前有七种内置数据类型：<code>undefined</code>，<code>null</code>，<code>number</code>，<code>string</code>，<code>boolean</code>，<code>object</code>，<code>symbol</code>（ES6新增）；其中除了<code>object</code>之外的都为<font color=#39f><strong>基本类型</strong></font>（也叫原始类型，Primitive Type），与基本类型相对的就是复杂类型（即<strong>引用类型</strong>）；因为<code>object</code>是由多个无序键值对组成的，这些值可以是基本类型也可以是<code>object</code>；</p>
<blockquote>
<p>JavaScript 中的变量是没有类型的，只有值才有。变量可以随时持有任何类型的值。——《你不知道的JavaScript（中卷）》</p>
</blockquote>
<h3 id="typeof操作符"><a class="markdownIt-Anchor" href="#typeof操作符"></a> typeof操作符</h3>
<p><code>typeof</code>操作符可以用来判断<font color=red><strong>变量或表达式</strong></font>的类型，有以下几种可能：</p>
<table>
<thead>
<tr>
<th>变量值的类型或状态</th>
<th>typeof 返回值</th>
</tr>
</thead>
<tbody>
<tr>
<td>值未定义</td>
<td>“undefined”</td>
</tr>
<tr>
<td>布尔值</td>
<td>“boolean”</td>
</tr>
<tr>
<td>字符串</td>
<td>“string”</td>
</tr>
<tr>
<td>数值</td>
<td>“number”</td>
</tr>
<tr>
<td>对象或null</td>
<td>“object”</td>
</tr>
<tr>
<td>函数</td>
<td>“function”</td>
</tr>
<tr>
<td>Symbol类型（ES6）</td>
<td>“symbol”</td>
</tr>
</tbody>
</table>
<p>为何<code>typeof null</code>的结果是 “object”，这是js建立以来就存在的一个<strong>bug</strong>：</p>
<blockquote>
<p>有些时候， typeof 操作符会返回一些令人迷惑但技术上却正确的值。比如，调用 typeof null会返回&quot;object&quot;，因为特殊值 null 被认为是一个空的对象引用。——《JavaScript高级程序设计（第三版）》</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="literal">null</span> === <span class="string">&#x27;object&#x27;</span>; <span class="comment">// 从一开始出现JavaScript就是这样的</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>在 JavaScript 最初的实现中，JavaScript 中的值是由一个表示类型的标签和实际数据值表示的。对象的类型标签是 0。由于 null 代表的是空指针（大多数平台下值为 0x00），因此，null的类型标签也成为了 0，typeof null就错误的返回了&quot;object&quot;。<br><br><br />
ECMAScript提出了一个修复（通过opt-in），但被拒绝。这将导致typeof null ===‘object’。<br>——MDN</p>
</blockquote>
<hr />
<p><strong>注</strong>：<code>typeof Object</code>的结果并不是想象的<code>'object'</code>，而是<code>'function'</code>；可以这么理解，<font color=red><code>Object</code>本身是一个构造器函数</font>，而不是一个具体的对象实例，只有对象实例的<code>typeof</code>结果为<code>'object'</code>！</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"><span class="keyword">var</span> fun = <span class="keyword">new</span> <span class="title class_">Function</span>();</span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title class_">Object</span>); <span class="comment">// &#x27;function&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title class_">Function</span>); <span class="comment">// &#x27;function&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> obj); <span class="comment">// &#x27;object&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> fun); <span class="comment">// &#x27;function&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> arr); <span class="comment">// &#x27;object&#x27;</span></span><br></pre></td></tr></table></figure>
<p><font color=red><strong>要注意的是，不是所有属于对象实例范畴的<code>typeof</code>结果必定就是<code>'object'</code>，函数的实例从某种意义来说就是<code>Function</code>的实例，但是结果是<code>'function'</code>！</strong></font></p>
<h2 id="值的复制与引用"><a class="markdownIt-Anchor" href="#值的复制与引用"></a> 值的复制与引用</h2>
<p><strong>复制</strong>：即复制一个值的复本，即从值的内存复制到一块<font color=red><strong>新的内存</strong></font>，但是<strong>值的内容</strong>是一致的；</p>
<p><strong>引用</strong>：指向该值，<font color=red><strong>并非指向该值的内存</strong></font>，不是所谓的指针！</p>
<blockquote>
<p>JavaScript 引用指向的是值。如果一个值有 10 个引用，这些引用指向的都是同一个值，它们相互之间没有引用 / 指向关系。<br><br />
JavaScript 对值和引用的赋值 / 传递在语法上没有区别，完全根据值的类型来决定。<br><br />
——《你不知道的JavaScript（中卷）》</p>
</blockquote>
<p>在js中，值在进行赋值和传递的过程中，会根据值的类型不同来选择到底是复制复本还是引用；<font color=#36f><strong>若是基本类型，在赋值/传递过程中是对值进行了复制，若是引用类型则直接对值进行引用</strong></font>；如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">var</span> b = a; <span class="comment">// b是a的值的一个复本</span></span><br><span class="line">b++;</span><br><span class="line">a; <span class="comment">// 2</span></span><br><span class="line">b; <span class="comment">// 3</span></span><br><span class="line"><span class="keyword">var</span> c = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> d = c; <span class="comment">// d是[1,2,3]的一个引用</span></span><br><span class="line">d.<span class="title function_">push</span>(<span class="number">4</span>); <span class="comment">// 通过引用的值本身的方法使值发生了改变，因而c，d指向的值也就改变了</span></span><br><span class="line">c; <span class="comment">// [1,2,3,4]</span></span><br><span class="line">d; <span class="comment">// [1,2,3,4]</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>简单值（即标量基本类型值， scalar primitive） 总是通过值复制的方式来赋值 / 传递，包括null、 undefined、字符串、数字、布尔和 ES6 中的 symbol值。<br><br />
复合值（compound value）——对象（包括数组和封装对象）和函数，则总是通过引用复制的方式来赋值 / 传递。<br><br />
——《你不知道的JavaScript（中卷）》</p>
</blockquote>
<p>要注意的是，引用仅仅只是对值的引用，而该变量并不等同于该值的内存地址，所以<font color=red><strong>直接改变该变量的引用指向并不能改变其它变量对该值的引用</strong></font>，如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> b = a; <span class="comment">// 由于a的值是引用类型，所以b直接引用了a的值</span></span><br><span class="line">a; <span class="comment">// [1,2,3]</span></span><br><span class="line">b; <span class="comment">// [1,2,3]</span></span><br><span class="line"><span class="comment">// 然后</span></span><br><span class="line">b = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]; <span class="comment">// b的指向发生了改变，但并不能改变a对[1,2,3]的引用指向！</span></span><br><span class="line">a; <span class="comment">// [1,2,3]</span></span><br><span class="line">b; <span class="comment">// [4,5,6]</span></span><br></pre></td></tr></table></figure>
<p>向函数中传递参数时，<font color=red><strong>实际上就是把实参赋值给形参</strong></font>！因而实参值的类型决定了是复制还是引用，这就是js中的参数传递。如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    x.<span class="title function_">push</span>( <span class="number">4</span> );</span><br><span class="line">    x; <span class="comment">// [1,2,3,4]</span></span><br><span class="line">    <span class="comment">// 然后</span></span><br><span class="line">    x = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]; <span class="comment">// x的指向发生改变，同理，之前的a对值的指向并没改变！</span></span><br><span class="line">    x.<span class="title function_">push</span>( <span class="number">7</span> );</span><br><span class="line">    x; <span class="comment">// [4,5,6,7]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="title function_">foo</span>(a); </span><br><span class="line"><span class="comment">// 传递参数过程相当于：var x = a;</span></span><br><span class="line"><span class="comment">// 由于a的值为引用类型，所以把a传递给形参x时，x就直接用了a的值</span></span><br><span class="line">a; <span class="comment">// 是[1,2,3,4]，不是[4,5,6,7]</span></span><br></pre></td></tr></table></figure>
<h3 id="引用类型的深复制与浅复制"><a class="markdownIt-Anchor" href="#引用类型的深复制与浅复制"></a> 引用类型的深复制与浅复制</h3>
<p>由于引用类型的『<font color=#f36><strong>特殊性质</strong></font>』，导致我们对于引用类型的赋值和传递可能会产生意想不到的副作用，所以我们平时在对引用类型的值进行赋值或传递的时候，一定要思考『<strong>我们需要的是深复制还是浅复制？</strong>』。</p>
<p><font color=#39f><strong>深复制</strong></font>：即重新开辟一块内存，将值的内容复制到新的内存中，即新的值与原先的值不在同一内存了！需要注意的事，<font color=red><strong>深复制必须是每个层级的属性值都要深复制</strong></font>，比如某对象的属性也为对象，对这个属性如果直接浅复制的话，则并没有完成深复制！</p>
<p><font color=#39f><strong>浅复制</strong></font>：<strong>浅复制就是对值的引用</strong>，即不会重新开辟新的内存，复制后指向的是同一个值；在js中<font color=#f36><strong>直接对引用类型进行赋值或传递</strong></font>就是浅复制！</p>
<blockquote>
<p>首先深复制和浅复制只针对像 Object, Array 这样的复杂对象的。简单来说，浅复制只复制一层对象的属性，而深复制则递归复制了所有层级。<br><br />
——<a href="https://www.zhihu.com/question/23031215/answer/46220227">https://www.zhihu.com/question/23031215/answer/46220227</a></p>
</blockquote>
<p>因此对引用类型进行深复制不会造成改变当前对象的属性值会影响到原对象的属性值的情况，然而浅复制有这种风险！</p>
<p><strong>PS</strong>：有一次我做了一道前端面试题中要求对引用类型进行复制，然而我以为可以直接用<code>var obj2 = new Object(obj)</code>的方法就可以实现深复制，<font color=red><strong>结果实践证明大错特错</strong></font>！该方法也是直接对原对象进行引用：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>: <span class="string">&quot;1&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> bar = <span class="keyword">new</span> <span class="title class_">Object</span>(obj);</span><br><span class="line">bar.<span class="property">a</span> = <span class="string">&quot;xxf&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(bar, obj); <span class="comment">// &#123; a: &#x27;xxf&#x27; &#125; &#123; a: &#x27;xxf&#x27; &#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="如何实现引用类型的深复制"><a class="markdownIt-Anchor" href="#如何实现引用类型的深复制"></a> 如何实现引用类型的深复制？</h3>
<p>由于引用类型存在着<font color=red><strong>嵌套引用类型</strong></font>的情况，也就是需要根据每一层级的情况来逐一判断，单纯的遍历可能无法解决所有的层级，一般需要用到递归；</p>
<p><strong>P.s</strong>：不知道有没有一种不需要循环递归且能适用于所有引用类型的深复制方法？</p>
<h4 id="1-objectassign方法"><a class="markdownIt-Anchor" href="#1-objectassign方法"></a> 1. Object.assign()方法</h4>
<p><code>assign</code>是ES6新增的Object方法，用于对象的合并，将源对象（source）的所有<font color=red><strong>可枚举属性</strong></font>，复制到目标对象（target）；如果目标对象与源对象有同名属性，或多个源对象有同名属性，则后面的属性会覆盖前面的属性。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">assign</span>(target, source1, ..., sourceN);</span><br></pre></td></tr></table></figure>
<p>会返回合并后的对象？可以用assign方法进行一层复制，即<font color=red><strong>若该对象的某一属性为引用类型，那么实现的还是浅复制（引用）</strong></font>！如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> target = &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="string">&#x27;xxf&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">let</span> source = &#123;<span class="attr">a</span>: <span class="number">4</span>, <span class="attr">c</span>: &#123;<span class="attr">name</span>: <span class="string">&#x27;n&#x27;</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">assign</span>(target, source);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(target); <span class="comment">// &#123; a: 4, b: &#x27;xxf&#x27;, c: &#123; name: &#x27;n&#x27; &#125; &#125;</span></span><br><span class="line"></span><br><span class="line">target.<span class="property">c</span>.<span class="property">name</span> = <span class="string">&#x27;my&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(source); <span class="comment">// &#123; a: 4, c: &#123; name: &#x27;my&#x27; &#125; &#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="2-json方法"><a class="markdownIt-Anchor" href="#2-json方法"></a> 2. JSON方法</h4>
<p>使用<code>JSON.parse()</code>和<code>JSON.stringify()</code>方法也能实现一定程度的深复制，只不过<font color=#f36><strong>无法复制对象的函数属性</strong></font>，且<font color=#f36><strong>无法继承原对象的原型链</strong></font>！如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> source = &#123;<span class="attr">a</span>: <span class="number">4</span>, <span class="attr">c</span>: &#123;<span class="attr">name</span>: <span class="string">&#x27;n&#x27;</span>&#125;, <span class="attr">b</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> target = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(source));</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(target); <span class="comment">// &#123; a: 4, c: &#123; name: &#x27;n&#x27; &#125; &#125;</span></span><br><span class="line"></span><br><span class="line">target.<span class="property">c</span>.<span class="property">name</span> = <span class="string">&#x27;my&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(source); <span class="comment">// &#123; a: 4, c: &#123; name: &#x27;n&#x27; &#125;, b: [Function: b] &#125;</span></span><br></pre></td></tr></table></figure>
<h4 id="3-递归处理"><a class="markdownIt-Anchor" href="#3-递归处理"></a> 3. 递归处理</h4>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">deepClone</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> obj;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span>(data.<span class="property">constructor</span>)&#123; <span class="comment">// 使用构造器函数对不同类型的对象进处理</span></span><br><span class="line">        <span class="keyword">case</span> <span class="title class_">Array</span>: <span class="comment">// array和object类型的数据需要对嵌套进行处理</span></span><br><span class="line">            obj = [];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> data)&#123;</span><br><span class="line">                obj.<span class="title function_">push</span>(<span class="title function_">deepClone</span>(data[i]));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="title class_">Object</span>:</span><br><span class="line">            obj = &#123;&#125;;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> data)&#123;</span><br><span class="line">                obj[k] = <span class="title function_">deepClone</span>(data[k]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="attr">default</span>: <span class="comment">// 默认的基本数据类型和function直接赋值</span></span><br><span class="line">            obj = data;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o1 = &#123;<span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>:[<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>], <span class="attr">c</span>: &#123;<span class="attr">name</span>: <span class="string">&quot;xxf&quot;</span>&#125;, <span class="attr">d</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;&#125;;</span><br><span class="line"><span class="keyword">var</span> o2 = <span class="title function_">deepClone</span>(o1);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o2); <span class="comment">// &#123; a: 1, b: [ 2, 3, 4 ], c: &#123; name: &#x27;xxf&#x27; &#125;, d: [Function: d] &#125;</span></span><br><span class="line"></span><br><span class="line">o2.<span class="property">c</span>.<span class="property">name</span> = <span class="string">&quot;xyz&quot;</span>;</span><br><span class="line">o2.<span class="property">b</span>[<span class="number">1</span>] = <span class="number">1.5</span>;</span><br><span class="line">o2.<span class="property">d</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">123</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o1, o2.<span class="property">d</span> === o1.<span class="property">d</span>); </span><br><span class="line"><span class="comment">// &#123; a: 1, b: [ 2, 3, 4 ], c: &#123; name: &#x27;xxf&#x27; &#125;, d: [Function: d] &#125; false</span></span><br></pre></td></tr></table></figure>
<h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2>
<ol>
<li>你不知道的JavaScript（中卷）—— 第二章</li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>JSON对象与Blob对象互相转换</title>
    <url>/post/json-and-blob/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>在某些后台业务场景下，可能需要导出或导入一些数据；而这个数据的介质就是<code>json</code>文件。从服务端获取到的<code>json</code>数据可以转为<code>json</code>文件并下载，而从用户导入的<code>json</code>文件又可以转换为<code>json</code>数据（对象）提交给服务端。</p>
<span id="more"></span>
<h2 id="转换步骤"><a class="markdownIt-Anchor" href="#转换步骤"></a> 转换步骤</h2>
<h3 id="核心"><a class="markdownIt-Anchor" href="#核心"></a> 核心</h3>
<p>无论是<code>json</code>数据转<code>.json</code>文件，还是<code>.json</code>文件转<code>json</code>数据，都离不开<code>Blob</code>对象的支持。</p>
<h3 id="json文件转为json数据对象"><a class="markdownIt-Anchor" href="#json文件转为json数据对象"></a> .json文件转为json数据（对象）</h3>
<ol>
<li>根据上传组件获取到对应的<code>File</code>对象；</li>
<li>将<code>File</code>对象转为<code>Blob</code>对象；</li>
<li>利用<code>FileReader</code>的<code>readAsText</code>方法读取<code>json</code>数据；</li>
<li><code>FileReader</code>的<code>onload</code>方法会在解析成功时执行；此时该实例的<code>result</code>属性就是解析好的<code>json</code>字符串，进一步用<code>JSON.parse()</code>方法就能解析出<code>json</code>对象。</li>
</ol>
<p>可以将上述步骤封装成一个函数：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将file对象（.json文件）转为json对象</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">File</span>&#125; file file对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fileToJson</span> (<span class="params">file</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>()</span><br><span class="line">    reader.<span class="property">onload</span> = <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; result &#125; = res.<span class="property">target</span> <span class="comment">// 得到字符串</span></span><br><span class="line">      <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(result) <span class="comment">// 解析成json对象</span></span><br><span class="line">      <span class="title function_">resolve</span>(data)</span><br><span class="line">    &#125; <span class="comment">// 成功回调</span></span><br><span class="line">    reader.<span class="property">onerror</span> = <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">reject</span>(err)</span><br><span class="line">    &#125; <span class="comment">// 失败回调</span></span><br><span class="line">    reader.<span class="title function_">readAsText</span>(<span class="keyword">new</span> <span class="title class_">Blob</span>([file]), <span class="string">&#x27;utf-8&#x27;</span>) <span class="comment">// 按照utf-8编码解析</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="json数据对象转为blob对象"><a class="markdownIt-Anchor" href="#json数据对象转为blob对象"></a> json数据（对象）转为Blob对象</h3>
<p>由于<code>Blob</code><strong>构造函数</strong>本身就支持将字符串转为文件，因此转换比较简单：</p>
<ol>
<li>首先利用<code>JSON.stringify()</code>方法将<code>json</code>对象转为<code>json</code>字符串；</li>
<li>利用<code>Blob</code>构造函数得到<code>Blob</code>对象（注意：需要设置文件的<code>MIME</code>类型）；</li>
</ol>
<p>如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data)], &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="扩展将blob对象直接下载到本地"><a class="markdownIt-Anchor" href="#扩展将blob对象直接下载到本地"></a> 扩展：将Blob对象直接下载到本地</h3>
<p>上面将<code>json</code>数据转换为<code>Blob</code>对象后，作用并不大；一个后续的使用场景可能为：将这个文件<strong>通过浏览器下载到本地</strong>。这个就需要用到<code>createObjectURL()</code>方法和<code>&lt;a&gt;</code>标签的<code>download</code>特性了。</p>
<ul>
<li><code>URL.createObjectURL(blob/file)</code>：该方法可以得到一个指向<code>Blob</code>对象或<code>File</code>对象对应的二进制文件流的<code>url</code>地址，<strong>访问即可下载该文件</strong>；</li>
<li><code>download</code>属性：当<code>&lt;a&gt;</code>标签设置了该属性时，点击标签时浏览器不会跳转链接，而是将对应链接作为文件进行下载保存，而文件的名字就是<code>download</code>的属性值。</li>
</ul>
<p>可以将上述流程封装成一个将<code>json</code>对象转化成文件并自动下载的函数：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 利用a标签的download属性和blob转url，将json字符串转为json文件进行下载</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; data json对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">downloadJson</span> (<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> download = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>) <span class="comment">// 匿名a标签</span></span><br><span class="line">  <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data)], &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">const</span> url = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob) <span class="comment">// blob转url</span></span><br><span class="line">  download.<span class="property">href</span> = url</span><br><span class="line">  download.<span class="property">download</span> = <span class="string">&#x27;filename.json&#x27;</span> <span class="comment">// 文件名</span></span><br><span class="line">  download.<span class="title function_">click</span>() <span class="comment">// 触发下载</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/URL/createObjectURL">URL.createObjectURL() - Web API 接口参考 | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a">&lt;a&gt; - HTML（超文本标记语言） | MDN</a></li>
<li><a href="https://www.zhangxinxu.com/wordpress/2016/04/know-about-html-download-attribute/">了解HTML/HTML5中的download属性 « 张鑫旭-鑫空间-鑫生活</a></li>
</ul>
]]></content>
      <categories>
        <category>业务</category>
      </categories>
      <tags>
        <tag>H5</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>关于jsonp</title>
    <url>/post/jsonp/</url>
    <content><![CDATA[<p><strong>Jsonp(JSON with Padding) 是 json 的一种&quot;使用模式&quot;</strong>，常用来进行跨域请求<code>json</code>数据。</p>
<h3 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h3>
<p>利用<code>script</code>标签可以跨域的特点，返回一段js代码对服务器获取的json数据进行处理。</p>
<span id="more"></span>
<h3 id="举个栗子"><a class="markdownIt-Anchor" href="#举个栗子"></a> 举个栗子</h3>
<p>比如：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type: application/json&#x27;</span>);</span><br><span class="line"><span class="comment">//获取回调函数名</span></span><br><span class="line"><span class="variable">$jsoncallback</span> = <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_REQUEST</span> [<span class="string">&#x27;jsoncallback&#x27;</span>]);</span><br><span class="line"><span class="comment">//json数据</span></span><br><span class="line"><span class="variable">$json_data</span> = <span class="string">&#x27;[&quot;customername1&quot;,&quot;customername2&quot;]&#x27;</span>;</span><br><span class="line"><span class="comment">//输出jsonp格式的数据</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$jsoncallback</span> . <span class="string">&quot;(&quot;</span> . <span class="variable">$json_data</span> . <span class="string">&quot;)&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>JSONP 实例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;divCustomers&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">callbackFunction</span>(<span class="params">result, methodName</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> html = <span class="string">&#x27;&lt;ul&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; result.<span class="property">length</span>; i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                html += <span class="string">&#x27;&lt;li&gt;&#x27;</span> + result[i] + <span class="string">&#x27;&lt;/li&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            html += <span class="string">&#x27;&lt;/ul&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;divCustomers&#x27;</span>).<span class="property">innerHTML</span> = html;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://someurl/jsonp.php?jsoncallback=callbackFunction&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>从上面例子可以看出，实际上就是从服务端获取json数据，然后<font color=red><strong>在服务器端把json数据插入到回调函数中作为参数，然后服务端返回一段js代码给客户端</strong></font>的<code>script</code>标签，最后作为js代码执行。也就是间接的使用json数据！</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>如何迁移linux主机上mongodb数据库</title>
    <url>/post/mongodb-migrate/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>由于<strong>いんろな</strong>原因，我需要把当前部署在一台<code>linux</code>主机上的<code>mongodb</code>数据库迁移到另外一台<code>linux</code>主机上，通过网上找资料发现，其实由于<code>linux</code>主机（云服务器）都具有<code>ssh</code>连接，所以转移一些备份就很方便。</p>
<span id="more"></span>
<h2 id="迁移步骤"><a class="markdownIt-Anchor" href="#迁移步骤"></a> 迁移步骤</h2>
<ol>
<li>在目标<code>linux</code>主机上安装<code>mongodb</code>软件：</li>
</ol>
<p>由于不同<code>linux</code>主机之间的系统环境有所区别，所以得先安装相适应版本的<code>mongodb</code>软件；</p>
<ol start="2">
<li>对要迁移的<code>mongodb</code>数据库进行备份：</li>
</ol>
<p>跳转到<code>mongodb</code>的安装路径下的<code>bin</code>目录，执行<code>mongodump</code>命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mongodump</span><br></pre></td></tr></table></figure>
<p>然后该目录下就会多出一个<code>dump</code>目录，<code>dump</code>目录下备份了当前运行的数据库的所有数据。</p>
<p><font color=red><strong>注</strong></font>：<code>mongodump</code>命令执行时需要有正在运行的<code>mongodb</code>服务器，默认备份的为<code>127.0.0.1:27017</code>的<code>mongodb</code>服务器；</p>
<ol start="3">
<li>将备份文件拷贝到目标主机中：</li>
</ol>
<p>最简单的方法就是将备份目录<code>dump</code>下的文件打包后，上传到目标主机中，然后解压；然后<code>linux</code>主机有一个强大的命令——<code>scp</code>，这个命令可以<font color=#39f><strong>在两个不同的<code>linux</code>主机之间进行远程拷贝文件或文件夹</strong></font>！比如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">scp -r ./dump root@xx.xx.xx.xx:/path/bin</span><br></pre></td></tr></table></figure>
<p>上述命令就是将当前目录下的<code>dump</code>（及其子目录下的所有文件）文件夹，远程复制到<code>ip</code>地址为<code>xx.xx.xx.xx</code>的主机下的<code>root</code>用户的<code>/path/bin</code>目录下（注意是<font color=red><strong>该目录的子级而非替换整个目录</strong></font>），执行命令后需要输入该用户的访问密码，密码正确后就会远程复制到目标位置！</p>
<p>之前都不知道有这么强大的命令，一直通过打包解压的方式转移文件……</p>
<ol start="4">
<li>在目标主机中进行<code>mongodb</code>数据恢复：</li>
</ol>
<p>首先也是需要确保目标主机的<code>mongodb</code>数据库<strong>已经运行</strong>，然后已经将之前的备份文件夹转移到目标主机中<code>mongodb</code>安装路径的<code>bin</code>目录下，然后执行<code>mongorestore</code>命令即可：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mongorestore</span><br></pre></td></tr></table></figure>
<p><font color=red><strong>注</strong></font>：该命令默认以<code>bin</code>目录下的<code>dump</code>为备份文件夹进行数据恢复。</p>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>经过以上步骤的折腾后，之前主机上的<code>mongodb</code>数据库中数据就完全转移到目标主机中的<code>mongodb</code>数据库中了。但是这种方法也只是适用于像我这种<font color=#39f><strong>用来测试或者自己玩玩</strong></font>的项目中，要是属于那种有大量用户正在使用的生产数据库，那就得<strong>另寻他法</strong>了！</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="http://www.runoob.com/mongodb/mongodb-mongodump-mongorestore.html">MongoDB 备份(mongodump)与恢复(mongorestore) | 菜鸟教程</a></li>
<li><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/scp.html">scp 跨机远程拷贝 —— Linux Tools Quick Tutorial</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>mongoose的基本操作</title>
    <url>/post/mongoose-basic/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<h3 id="mongoose与mongodb的关系"><a class="markdownIt-Anchor" href="#mongoose与mongodb的关系"></a> mongoose与mongodb的关系</h3>
<p><code>mongodb</code>实际上是一个跨平台的<code>nosql</code>型数据库软件，而<code>mongoose</code>是一个基于<code>mongodb</code>的<a href="https://mongodb.github.io/node-mongodb-native/">官方<code>js</code>驱动</a>实现的<code>js</code>库，即专门用于在<code>node.js</code>环境下与<code>mongodb</code>数据库进行连接操作。</p>
<span id="more"></span>
<h3 id="为什么使用mongoose"><a class="markdownIt-Anchor" href="#为什么使用mongoose"></a> 为什么使用mongoose</h3>
<p>事实上<code>mongodb</code><strong>官方</strong>已经实现了基于<code>node.js</code>的驱动库，<code>npm</code>包名就叫<code>mongodb</code>，专门用来与<code>mongodb</code><strong>数据库</strong>进行连接操作的，所以<font color=red><strong>为何</strong></font>还要使用<strong>第三方</strong>实现的<code>mongoose</code>库。这是实际上还是取决于每个人的习惯和理念，由于<code>mongodb</code>在设计上就对于<code>collection</code>（对应于<code>sql</code>数据库中的<strong>数据表</strong>）的结构限制很少，可以认为其存取数据很灵活，也可以认为其存取数据比较松散，这完全是个人口味问题。</p>
<p>而<font color=#39f><strong>我个人</strong></font>比较习惯对于同一集合（<code>collection</code>）中数据的格式要保持一致性，即每条数据的结构和类型是一致的，不然总觉得不同结构和类型的数据存放于同一集合中就太混乱了（也许是还无法适应<code>mongodb</code>的设计模式）。</p>
<p>而<code>mongoose</code>就加入了<code>Schema</code>这一设计，使得集合中的数据保持<strong>结构和类型</strong>的一致性成为可能，方便数据管理。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180902/gdlE8I6k7I.png?imageslim" alt="mark" /></p>
<h2 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h2>
<h3 id="数据库连接"><a class="markdownIt-Anchor" href="#数据库连接"></a> 数据库连接</h3>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>)</span><br><span class="line"><span class="comment">// mongodb连接地址：mongodb://ip:port/database</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;mongodb://0.0.0.0:27017/test&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> db = mongoose.<span class="title function_">createConnection</span>(url) <span class="comment">// 返回数据库的连接对象</span></span><br><span class="line">db.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">err</span>)=&gt;</span>&#123; <span class="comment">// 监听数据库连接错误事件</span></span><br><span class="line">    <span class="keyword">throw</span> err</span><br><span class="line">&#125;)</span><br><span class="line">db.<span class="title function_">once</span>(<span class="string">&#x27;open&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="comment">// 监听数据库连接成功事件（once就是监听一次）</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;connect success&#x27;</span>)</span><br><span class="line">    db.<span class="title function_">close</span>() <span class="comment">// 关闭数据库连接</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p><font color=red><strong>注：</strong></font><code>mongodb</code>数据库的默认端口为<code>27017</code>；</p>
<h3 id="连接集合与model"><a class="markdownIt-Anchor" href="#连接集合与model"></a> 连接集合与Model</h3>
<p><code>Schema</code>可以看做是<code>Model</code>与<code>collection</code>之间的中介（相当于<code>proxy</code>），因为<strong>实际上</strong>不同的<code>Schema</code>可以连接到同一个<code>collection</code>，也就是即便是使用<code>mongoose</code>后仍然会出现同一个集合内存在<font color=#39f><strong>不同数据结构</strong></font>的数据；但是由于有<code>Schema</code>这层中介的存在，使得同一<code>Schema</code>内的数据结构是一致的，就不需要我们自己手动地去集合内约束和判断数据结构了（<strong>即把数据结构从集合中抽离出来，集合本身不再有固定的数据结构</strong>）。</p>
<p>而<code>Model</code>可以看做某个<code>collecton</code>中具有某个<code>Schema</code>的<font color=red><strong>一部分</strong></font>数据，即一个<code>Model</code>需要通过某个<code>Schema</code>来对某个<code>collection</code>进行数据操作。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Schema</span> = mongoose.<span class="property">Schema</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> testSchema = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="title class_">Number</span>,</span><br><span class="line">    <span class="attr">habits</span>: [<span class="title class_">String</span>]</span><br><span class="line">&#125; <span class="comment">// 首先定义一个Schema结构</span></span><br></pre></td></tr></table></figure>
<p>连接集合的方式有两种，一种是<code>mongoose</code>约定的形式；另一种是给<code>schema</code>指定一个具体的<code>collection</code>，使用此<code>schema</code>的<code>model</code>都自动连接到这个<code>collection</code>；</p>
<h4 id="方法一"><a class="markdownIt-Anchor" href="#方法一"></a> 方法一</h4>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方法一：指定一个具体的collection</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> schema = <span class="title class_">Schema</span>(testSchema, &#123;<span class="attr">collection</span>: <span class="string">&#x27;info&#x27;</span>&#125;) <span class="comment">// 将testSchema绑定到名为info的集合上</span></span><br><span class="line"><span class="comment">// db为数据库连接对象，该model自动连接schema绑定的集合上</span></span><br><span class="line"><span class="keyword">let</span> model = db.<span class="title function_">model</span>(<span class="string">&#x27;Habit&#x27;</span>, schema)</span><br></pre></td></tr></table></figure>
<h4 id="方法二"><a class="markdownIt-Anchor" href="#方法二"></a> 方法二</h4>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方法二：根据Model的名称自动查找</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> schema = <span class="title class_">Schema</span>(testSchema) <span class="comment">// schema没有绑定集合</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 此时model连接到其名称的复数形式（小写）的集合上，即habits集合</span></span><br><span class="line"><span class="keyword">let</span> model = db.<span class="title function_">model</span>(<span class="string">&#x27;Habit&#x27;</span>, schema)</span><br></pre></td></tr></table></figure>
<h3 id="crud"><a class="markdownIt-Anchor" href="#crud"></a> CRUD</h3>
<h4 id="插入数据"><a class="markdownIt-Anchor" href="#插入数据"></a> 插入数据</h4>
<p>一条数据即一条<code>document</code>，而每条<code>document</code>都是某个<code>model</code>的实例；所以插入一条数据到某个<code>集合</code>就要先得到该<code>集合</code>的某个<code>Model</code>，然后<code>new</code>一个该<code>Model</code>的实例，填入数据后可以使用<code>save</code>方法进行插入；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> schema = <span class="title class_">Schema</span>(testSchema, &#123;<span class="attr">collection</span>: <span class="string">&#x27;info&#x27;</span>&#125;)</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Habit</span> = db.<span class="title function_">model</span>(<span class="string">&#x27;Habit&#x27;</span>, schema)</span><br><span class="line"><span class="keyword">let</span> habit = <span class="keyword">new</span> <span class="title class_">Habit</span>(&#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xxf&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;age&#x27;</span>: <span class="number">22</span></span><br><span class="line">&#125;) <span class="comment">// 可以只填部分或不填数据，新增一条数据</span></span><br><span class="line"></span><br><span class="line">habit.<span class="title function_">save</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;) <span class="comment">// 使用save方法对新增的数据进行插入</span></span><br></pre></td></tr></table></figure>
<h4 id="查询数据"><a class="markdownIt-Anchor" href="#查询数据"></a> 查询数据</h4>
<hr />
<p>查询条件应该是数据库操作中用的最多的操作，写法自然也是丰富多样，我觉得有必要<font color=red><strong>单独</strong></font>去专门写一个<code>mongoose</code>条件语句（<code>mongoose</code>实际上使用的条件语句格式是<code>mongodb</code>官方规定的语句）的文章，目前还没有使用那么多的语法（主要是还没有遇到那么多的应用场景……）。</p>
<hr />
<p><code>mongoose</code>的查询<code>API</code>有：</p>
<ul>
<li>Model.find()</li>
<li>Model.findById()</li>
<li>Model.findByIdAndDelete()</li>
<li>Model.findByIdAndRemove()</li>
<li>Model.findByIdAndUpdate()</li>
<li>Model.findOne()</li>
<li>Model.findOneAndDelete()</li>
<li>Model.findOneAndRemove()</li>
<li>Model.findOneAndUpdate()</li>
</ul>
<p>经常使用的方法主要是<code>find()</code>和<code>findOne()</code>这两个，前者可以返回<font color=#39f><strong>多条</strong></font>满足条件的数据，而后者只返回<font color=#39f><strong>第一条</strong></font>匹配条件的数据；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> schema = <span class="title class_">Schema</span>(testSchema, &#123;<span class="attr">collection</span>: <span class="string">&#x27;info&#x27;</span>&#125;)</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Habit</span> = db.<span class="title function_">model</span>(<span class="string">&#x27;Habit&#x27;</span>, schema)</span><br><span class="line"></span><br><span class="line"><span class="title class_">Habit</span>.<span class="title function_">findOne</span>(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xxf&#x27;</span>&#125;, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>如上，<code>findOne()</code>方法的第一个参数为<strong>查询条件</strong>，第二个参数为<strong>回调函数</strong>（回调函数第一个参数为<code>Error</code>对象，当不为<code>undefined</code>时则代表查询发生错误，第二个参数为<font color=red><strong>匹配条件的数据</strong></font>）；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> schema = <span class="title class_">Schema</span>(testSchema, &#123;<span class="attr">collection</span>: <span class="string">&#x27;info&#x27;</span>&#125;)</span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Habit</span> = db.<span class="title function_">model</span>(<span class="string">&#x27;Habit&#x27;</span>, schema)</span><br><span class="line"></span><br><span class="line"><span class="title class_">Habit</span>.<span class="title function_">findOne</span>(&#123;<span class="string">&#x27;age&#x27;</span>: &#123;<span class="attr">$gt</span>: <span class="number">18</span>&#125;&#125;, <span class="function">(<span class="params">err, docs</span>) =&gt;</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>而<code>find()</code>方法的用法几乎与<code>findOne()</code>的一致，只是回调函数的第二个参数是一个<strong>数组</strong>，包含<strong>所有</strong>满足查询条件的数据；</p>
<h4 id="更新数据"><a class="markdownIt-Anchor" href="#更新数据"></a> 更新数据</h4>
<p>更新的本质就是先查询后修改，所以也需要用到查询语句；但是除此外还需要用到<strong>修改语句</strong>，又是有许多内容可讲；</p>
<p><code>mongoose</code>的更新数据<code>API</code>有：</p>
<ul>
<li>Model.replaceOne()</li>
<li>Model.updateMany()</li>
<li>Model.updateOne()</li>
</ul>
<h4 id="删除数据"><a class="markdownIt-Anchor" href="#删除数据"></a> 删除数据</h4>
<p>删除操作也是先进行查询在删除的，所以也要用到查询语句；</p>
<p><code>mongoose</code>的删除数据<code>API</code>有：</p>
<ul>
<li>Model.deleteMany()</li>
<li>Model.deleteOne()</li>
</ul>
<h4 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h4>
<p>当对某条数据的<strong>一部分（字段）的内容</strong>进行增删操作时，实际上还是属于更新数据的范畴，注意不要混淆！</p>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>实际上<font color=red><strong>还有很多</strong></font>需要整理的，但是目前使用的场景并不多，使用的语法的也比较零散，还是需要时间和项目的使用慢慢积累才行。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://mongoosejs.com/docs/">Mongoose v5.3.9: Getting Started</a></li>
<li><a href="https://docs.mongodb.com/manual/crud/">MongoDB CRUD Operations</a></li>
<li><a href="https://docs.mongodb.com/manual/reference/operator/query/">Query and Projection Operators —— MongoDB Manual</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>mongodb</tag>
        <tag>mongoose</tag>
      </tags>
  </entry>
  <entry>
    <title>关于js中的作用域与变量</title>
    <url>/post/js-scope-variable/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>说实话，虽然一直知道<code>js</code>中有全局作用域、函数作用域和块级作用域这几种作用域，但一直说不清到底怎样才算是块级作用域以及作用域到底用来干啥的。还有就是虽然知道<code>var</code>声明和<code>let</code>、<code>const</code>声明的一些表现差异，但根本无法解释这种差异性为何发生以及变量提升的准确定义是什么。总而言之，在实际使用中将<code>js</code>与浏览器绑定得过于紧密，而<font color=red><strong>忽略了<code>js</code>作为一种独立的编程语言的基本特性</strong></font>了！</p>
<span id="more"></span>
<h2 id="作用域"><a class="markdownIt-Anchor" href="#作用域"></a> 作用域</h2>
<blockquote>
<p>作用域是一套规则，用于确定在何处以及如何查找变量（标识符）。如果查找的目的是对变量进行赋值，那么就会使用 LHS 查询；如果目的是获取变量的值，就会使用 RHS 查询。<br><br />
LHS 和 RHS 查询都会在当前执行作用域中开始，如果有需要（也就是说它们没有找到所需的标识符），就会向上级作用域继续查找目标标识符，这样每次上升一级作用域（一层楼），最后抵达全局作用域（顶层），无论找到或没找到都将停止。<br>——《你不知道的js（上卷）》</p>
</blockquote>
<p><strong>作用域是在<code>js</code>编译过阶段中产生的</strong>，然后在运行阶段发挥作用的。而<code>js</code>的编译过程发生在运行前不久（尽管编译时间很短，且编译完后立即执行，还是属于先编译然后执行，而非实时运行的），编译过程大概经历<code>分词 → 解析 → 代码生成</code>这几个阶段：</p>
<ul>
<li><font color=#36f><strong>分词</strong></font>：将代码字符串划分成具有<code>js</code>语法意义的代码块（词法单元）；</li>
<li><font color=#36f><strong>解析</strong></font>：将分词过程中产生的代码块列表转化成具有<code>js</code>程序语法结构的树（抽象语法树<code>AST</code>）；</li>
<li><font color=#36f><strong>代码生成</strong></font>：将<code>AST</code>转化成可执行代码；</li>
</ul>
<p><strong>函数作用域</strong>：即函数在声明时的词法作用域。</p>
<p><strong>块级作用域</strong>：<font color=red><strong>一对大括号</strong></font>内（<strong>不包括</strong><code>function</code>声明后的大括号）的词法作用域，或标记块声明后的大括号内的词法作用域。比如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    statement</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(...)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(...;...;...)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(...)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(...)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">label</span>: &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="变量提升与函数提升"><a class="markdownIt-Anchor" href="#变量提升与函数提升"></a> 变量提升与函数提升</h2>
<p>所谓的提升指的就是在代码<font color=red><strong>编译阶段</strong></font>将<font color=#36f><strong>声明语法单独提前到该作用域的顶部</strong></font>，也就是说每个作用域内都有提升，但是根据<strong>声明类型</strong>和<strong>作用域类型</strong>的不同提升的方式也会有所区别。</p>
<h3 id="变量提升"><a class="markdownIt-Anchor" href="#变量提升"></a> 变量提升</h3>
<p>虽然在一般的变量声明赋值操作中，我们觉得好像写的就只有一条语句，然而编译器并不是这么认为，编译器会将诸如<code>var a = 1</code>这样的语句<font color=red><strong>拆分</strong></font>成两部分理解：<code>var a</code>（声明语句）和<code>a = 1</code>（赋值语句）；然后在<strong>编译的时候</strong>将声明语句单独提升到该<strong>作用域的顶部</strong>，而<font color=red><strong>赋值语句则留在原地不动</strong></font>（当然，如果仅仅只有变量声明，那就相当于没有赋值）！</p>
<p>举个例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> a</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a) <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>
<p>在不了解变量提升之前，大多数人都会觉得打印出来的<code>a</code>应该是<code>undefined</code>（我之前就是这么觉得的╥﹏╥），然而在编译的时候有了变量提升，实际上执行的代码是这样的：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="comment">// ←变量声明提升到作用域顶部了</span></span><br><span class="line">a = <span class="number">1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a) <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>
<p>函数作用域内也一样：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 编译前</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">123</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 编译后</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> a <span class="comment">// ←变量声明提升到该函数作用域顶部了</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line">    a = <span class="number">123</span> <span class="comment">// 赋值语句则留在原地！</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然而<font color=red><strong>并非所有的变量声明都有提升</strong></font>，<code>ES6</code>新增的<code>let</code>和<code>const</code>声明就不会有提升：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a) <span class="comment">// ReferenceError: a is not defined</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>除此之外，<code>var</code>声明会自动忽略块级作用域，也就是说如果<code>var</code>声明所在的作用域为块级作用域时会自动向上找到<font color=red><strong>最近的非块级作用域</strong></font>（函数作用域或全局作用域），再进行提升；最著名的例子就是这个：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i) <span class="comment">// 10</span></span><br><span class="line"><span class="comment">// 因为实际上编译后时是这样：</span></span><br><span class="line"><span class="keyword">var</span> i <span class="comment">// ←直接跳过块级作用域，提升到上一层作用域</span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br></pre></td></tr></table></figure>
<h3 id="函数提升"><a class="markdownIt-Anchor" href="#函数提升"></a> 函数提升</h3>
<p>实际上<strong>函数声明</strong>没有赋值这一说法，因此是整体提升到作用域的顶部的：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">foo</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 编译后：</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125; <span class="comment">// ←整体提升到顶部</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>()</span><br></pre></td></tr></table></figure>
<p>然而如果是<font color=#36f><strong>函数表达式</strong></font>，就<font color=red><strong>不存在函数提升</strong></font>了！如果是将函数表达式作为值进行变量赋值，实际上也只是变量提升罢了：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">foo</span>() <span class="comment">// TypeError: foo is not a function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> foo = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 编译后：</span></span><br><span class="line"><span class="keyword">var</span> foo <span class="comment">// 只是普通的变量提升而已</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>() <span class="comment">// 实际上此时foo等于undefined，所以执行会报错</span></span><br><span class="line"></span><br><span class="line">foo = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="提升的优先级"><a class="markdownIt-Anchor" href="#提升的优先级"></a> 提升的优先级</h3>
<p>当<code>var</code>与<code>function</code>在同一作用域下出现重复声明（即标识符一样）的情况下，优先进行函数提升！</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">foo</span>() <span class="comment">// function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> foo = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;var&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;function&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 编译后：</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;function&#x27;</span>)</span><br><span class="line">&#125; <span class="comment">// ←函数被优先提升声明！</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">foo</span>()</span><br><span class="line"></span><br><span class="line">foo = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;var&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="let-const-和-var"><a class="markdownIt-Anchor" href="#let-const-和-var"></a> let、const 和 var</h2>
<p>虽然在感觉上知道<code>let</code>，<code>const</code>与<code>var</code>在声明上有一些差异，但是总是说不出来具体差异有哪些，希望在这里详细记录这3种声明的差异性。</p>
<h3 id="差异1变量提升与暂时性死区"><a class="markdownIt-Anchor" href="#差异1变量提升与暂时性死区"></a> 差异1：变量提升与暂时性死区</h3>
<ol>
<li>
<p><code>var</code>存在变量提升，而<code>let</code>和<code>const</code>则不存在变量提升；</p>
</li>
<li>
<p><code>let</code>和<code>const</code>存在暂时性死区（<code>temporal dead zone</code>，简称<code>TDZ</code>）;</p>
</li>
</ol>
<p><font color=#36f><strong>暂时性死区</strong></font>：指的是<code>let</code>和<code>const</code>在其声明的作用域内会该标识符<font color=red><strong>强制绑定</strong></font>到该作用域，即该标识符不受外层作用域的影响（外层作用域有同名标识符时无法访问到外层作用域的同名标识符变量，<font color=red><strong>相当于与外层作用域隔离</strong></font>），且无法在声明语句之前对其进行访问！</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> tmp = <span class="number">123</span></span><br><span class="line">&#123; <span class="comment">// TDZ starts</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(tmp) <span class="comment">// ReferenceError: tmp is not defined</span></span><br><span class="line">    <span class="keyword">let</span> tmp = <span class="number">666</span> <span class="comment">// TDZ ends</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="差异2重复声明"><a class="markdownIt-Anchor" href="#差异2重复声明"></a> 差异2：重复声明</h3>
<p><code>var</code>可以在同一作用域对<strong>同一变量进行多次声明</strong>，而<code>let</code>和<code>const</code>则不允许在同一作用域下对同一变量进行多次声明！</p>
<p>例1：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">666</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a) <span class="comment">// 666</span></span><br></pre></td></tr></table></figure>
<p>例2：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">666</span> <span class="comment">// SyntaxError: Identifier &#x27;a&#x27; has already been declared</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br></pre></td></tr></table></figure>
<p>例3：（同一作用域下的<code>let</code>声明特性优于<code>var</code>声明特性执行？）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">666</span> <span class="comment">// SyntaxError: Identifier &#x27;a&#x27; has already been declared</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br></pre></td></tr></table></figure>
<h3 id="差异3const的独特性"><a class="markdownIt-Anchor" href="#差异3const的独特性"></a> 差异3：const的独特性</h3>
<p><code>const</code>相比其他两种声明又多了一些独特性质：</p>
<ol>
<li>声明时<font color=red><strong>必须赋值</strong></font>！</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> a <span class="comment">// SyntaxError: Missing initializer in const declaration</span></span><br><span class="line">a = <span class="number">123</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li><font color=red><strong>值（引用指向）</strong></font>不可修改。当<code>const</code>声明的变量赋值对象是<strong>基本类型</strong>时，就是值不可更改；，如果赋值对象是<strong>引用类型</strong>，那就是引用的指向不可修改（实际上引用对象的属性值依然可以更改）。</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 例1：</span></span><br><span class="line"><span class="keyword">const</span> a = <span class="number">123</span></span><br><span class="line">a = <span class="number">666</span> <span class="comment">// TypeError: Assignment to constant variable.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 例2：</span></span><br><span class="line"><span class="keyword">const</span> a = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;foo&#x27;</span>,</span><br><span class="line">    <span class="attr">some</span>: <span class="string">&#x27;bar&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">a = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;nothing&#x27;</span></span><br><span class="line">&#125; <span class="comment">// TypeError: Assignment to constant variable.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 例3：</span></span><br><span class="line"><span class="keyword">const</span> a = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;foo&#x27;</span>,</span><br><span class="line">    <span class="attr">some</span>: <span class="string">&#x27;bar&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">a.<span class="property">name</span> = <span class="string">&#x27;foobar&#x27;</span> <span class="comment">// 引用类型的属性值可以更改</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a) <span class="comment">// &#123; name: &#x27;foobar&#x27;, some: &#x27;bar&#x27; &#125;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>const</code>实际上保证的，并不是变量的值不得改动，而是变量指向的那个内存地址所保存的数据不得改动。对于简单类型的数据（数值、字符串、布尔值），值就保存在变量指向的那个内存地址，因此等同于常量。但对于复合类型的数据（主要是对象和数组），变量指向的内存地址，保存的只是一个指向实际数据的指针，<code>const</code>只能保证这个指针是固定的（即总是指向另一个固定的地址），至于它指向的数据结构是不是可变的，就完全不能控制了。<br> ——《ECMAScript 6 入门》</p>
</blockquote>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/block">block | MDN</a></li>
<li><a href="http://www.ituring.com.cn/book/1488">《你不知道的JavaScript（上卷）》</a></li>
<li><a href="https://github.com/luqin/exploring-es6-cn/blob/master/md/9.4.md">9.4 暂时性死区（temporal dead zone）</a></li>
<li><a href="http://es6.ruanyifeng.com/#docs/let">let 和 const 命令 - ECMAScript 6入门</a></li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序（H5）接入腾讯IM</title>
    <url>/post/mp-im-sdk/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>腾讯<code>IM</code>是腾讯推出的即时通讯<code>SDK</code>，能在多端进行接入，用于聊天这类应用场景。</p>
<span id="more"></span>
<h2 id="小程序接入腾讯im"><a class="markdownIt-Anchor" href="#小程序接入腾讯im"></a> 小程序接入腾讯IM</h2>
<h3 id="相关准备"><a class="markdownIt-Anchor" href="#相关准备"></a> 相关准备</h3>
<ol>
<li>
<p>小程序需要事先添加一个<code>request 合法域名</code>：<code>https://webim.tim.qq.com</code>；因为<code>SDK</code>依赖这个域名的接口进行消息监听等操作。</p>
</li>
<li>
<p>在小程序项目中安装完<code>tim-js-sdk</code>这个包之后，还需要在开发者工具中进行<strong>构建npm</strong>操作：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200322113919.jpg?imageslim" alt="img" /></p>
</li>
<li>
<p>业务需要提供<code>SDKAppID</code>（<code>IM</code>应用<code>ID</code>），<code>userSig</code>（用户密钥），<code>userID</code>（用户<code>id</code>）以及<code>groupID</code>（群组<code>id</code>）；</p>
</li>
</ol>
<h3 id="接入步骤"><a class="markdownIt-Anchor" href="#接入步骤"></a> 接入步骤</h3>
<blockquote>
<p>这里以小程序的<code>IM</code><strong>群组消息</strong>接收业务场景为例；<code>H5</code>的接入步骤类似，因为<code>API</code>一致，只不过<code>SDK</code>的<strong>包名有所不同</strong>。</p>
</blockquote>
<ol>
<li>
<p>引入<code>SDK</code>；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="variable constant_">TIM</span> <span class="keyword">from</span> <span class="string">&#x27;tim-wx-sdk&#x27;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>根据接口获取<code>IM</code><strong>初始化</strong>所需的配置（包括<code>SDKAppID</code>和<code>userSig</code>）并初始化；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> config = <span class="keyword">await</span> api.<span class="title function_">getIMConfig</span>() <span class="comment">// 获取IM配置</span></span><br><span class="line"><span class="keyword">const</span> tim = <span class="variable constant_">TIM</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="title class_">SDKAppID</span>: config.<span class="property">appId</span> <span class="comment">// 应用id</span></span><br><span class="line">&#125;) <span class="comment">// 创建实例</span></span><br><span class="line">tim.<span class="title function_">setLogLevel</span>(<span class="number">1</span>) <span class="comment">// sdk日志输出级别, 0则开启全部；根据需要配置</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>注册监听事件</strong>，如<code>SDK</code>加载完成和消息接收等事件；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">tim.<span class="title function_">on</span>(<span class="variable constant_">TIM</span>.<span class="property">EVENT</span>.<span class="property">SDK_READY</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123; <span class="comment">// SDK 进入 ready 状态时触发</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ready&#x27;</span>, e)</span><br><span class="line">  <span class="comment">// 一些SDK的API必须在ready事件触发后才能执行！</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">tim.<span class="title function_">on</span>(<span class="variable constant_">TIM</span>.<span class="property">EVENT</span>.<span class="property">MESSAGE_RECEIVED</span>, <span class="function"><span class="params">e</span> =&gt;</span> &#123; <span class="comment">// SDK 收到推送的单聊、群聊、群提示、群系统通知的新消息，可通过遍历 event.data 获取消息列表数据并渲染到页面</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;received&#x27;</span>, e)</span><br><span class="line">  <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(e.<span class="property">data</span>)) &#123;</span><br><span class="line">    e.<span class="property">data</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">parseMessage</span>(item) <span class="comment">// 解析IM消息</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>登录</strong><code>IM</code>账号；</p>
</li>
<li>
<p>登录成功后<strong>加入到对应群组</strong>；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">tim.<span class="title function_">login</span>(&#123; <span class="comment">// 登录到IM</span></span><br><span class="line">  <span class="attr">userID</span>: userID,</span><br><span class="line">  <span class="attr">userSig</span>: userSig</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;login&#x27;</span>, res)</span><br><span class="line">  <span class="keyword">return</span> tim.<span class="title function_">joinGroup</span>(&#123; <span class="comment">// 加入到对应的群组</span></span><br><span class="line">    <span class="attr">groupID</span>: groupID, <span class="comment">// 群组id</span></span><br><span class="line">    <span class="attr">applyMessage</span>: <span class="string">&#x27;wechat&#x27;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="variable constant_">TIM</span>.<span class="property">TYPES</span>.<span class="property">GRP_AVCHATROOM</span> <span class="comment">// 群组类型：音视频聊天，根据业务需求选择</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;group&#x27;</span>, res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>群组类型以下几种：</p>
<ul>
<li>TIM.TYPES.GRP_PUBLIC（公开群）</li>
<li>TIM.TYPES.GRP_CHATROOM （聊天室）</li>
<li>TIM.TYPES.GRP_AVCHATROOM （音视频聊天室）</li>
</ul>
</li>
<li>
<p><strong>解析消息</strong>：<code>IM</code>返回消息有系统消息和自定义消息两种，这个根据实际业务定制的消息结构进行解析即可。</p>
</li>
</ol>
<p>发送消息需要引入另一个包<code>cos-wx-sdk-v5</code>，其他<code>SDK</code>的功能可以查看这个文档：<a href="https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html">https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html</a></p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><code>SDK</code><strong>接入</strong>文档：<a href="https://cloud.tencent.com/document/product/269/37413">即时通信 IM 集成 SDK（Web &amp; 小程序） - 常规集成（无 UI 库） - 文档中心 - 腾讯云</a></li>
<li><code>SDK</code><strong>详细</strong>文档：<a href="https://imsdk-1252463788.file.myqcloud.com/IM_DOC/Web/SDK.html?_ga=1.73510930.1415595610.1551836088">SDK - Documentation</a></li>
<li><strong>消息收发</strong>文档：<a href="https://cloud.tencent.com/document/product/269/37448#.E8.A7.A3.E6.9E.90.E6.96.87.E6.9C.AC.E6.B6.88.E6.81.AF">即时通信 IM 消息收发（Web &amp; 小程序） - 常规集成（无 UI 库） - 文档中心 - 腾讯云</a></li>
</ul>
]]></content>
      <categories>
        <category>业务</category>
      </categories>
      <tags>
        <tag>H5</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>解决多分支并行开发公共文件维护的几种方案</title>
    <url>/post/multi-branch-common-file/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>当项目越来越大，且存在多分支同时开发的时候，就会遇到公共文件维护的问题；比如当在<code>A</code>分支修改某个公共文件时，<code>B</code>分支无法同步该文件的修改，毕竟两个开发分支（迭代）的<font color=#f00>排期和测试进度是不一样</font>的，不能贸然交叉合并开发分支，否则会<font color=#f00><strong>造成代码污染</strong></font>的问题。因此需要一种解决方案来专门维护项目公共文件，避免出现公共文件修改<strong>不同步</strong>造成各种冲突和可能存在的关联性<code>bug</code>出现。</p>
<span id="more"></span> 
<h2 id="方案一npm私库"><a class="markdownIt-Anchor" href="#方案一npm私库"></a> 方案一：npm私库</h2>
<p>利用<code>npm</code>私库可以把项目<strong>公共组件</strong>部分独立成<code>npm</code>包，不受分支影响；</p>
<p>优点：</p>
<ul>
<li>独立性强</li>
<li>可以存在多个版本，有问题时可以快速回滚版本，也可以发版本修复</li>
</ul>
<p>缺点：</p>
<ul>
<li>组件调试不方便</li>
<li>文档插件兼容性和引入方式待确认</li>
</ul>
<h2 id="方案二git-subtree"><a class="markdownIt-Anchor" href="#方案二git-subtree"></a> 方案二：git subtree</h2>
<p>利用<code>git subtree</code>将公共组件文件夹变成项目的一个子仓库，关于公共组件的修改可以全部同步在子仓库，其他分支可以随时从子仓库<code>pull</code>进行同步；</p>
<p>优点</p>
<ul>
<li>相对项目内其它文件，子仓库文件比较独立</li>
<li>无需结构更改，可以无缝兼容项目结构</li>
<li>组件调试方便</li>
</ul>
<p>缺点</p>
<ul>
<li>子仓库相关更新的<code>subtree</code>命令比较繁琐（不过目测可以通过添加<code>npm script</code>解决）</li>
<li>需要<strong>严格遵循</strong>子仓库的改动必须使用<code>subtree</code>命令提交</li>
</ul>
<h2 id="方案三独立的公共文件维护分支"><a class="markdownIt-Anchor" href="#方案三独立的公共文件维护分支"></a> 方案三：独立的公共文件维护分支</h2>
<p>就是指定一条分支专门维护公共文件（包括公共组件），也就是说<font color=red><strong>所有涉及到公共文件的修改全都必须切到该分支</strong></font>，修改后在该分支进行上传；且该分支<font color=red><strong>不能</strong></font>合并其他任何开发或测试分支的代码，但是<strong>可以定期合并主分支代码</strong>（已通过测试的）；</p>
<p>优点</p>
<ul>
<li>利用<code>git</code>分支即可维护项目公共文件，无需额外学习成本</li>
<li>同样兼容已有项目结构</li>
<li>组件调试方便</li>
<li><strong>不仅可以维护组件，还能维护其他公共文件</strong></li>
</ul>
<p>缺点</p>
<ul>
<li>需要保证公共文件维护分支的纯洁性，即不能让其他分支污染</li>
</ul>
<h2 id="优化措施"><a class="markdownIt-Anchor" href="#优化措施"></a> 优化措施</h2>
<p>由于公共文件比较特殊，可以考虑引入一些工具加强规范，减少人为错误，和及时的改动通知等；</p>
<ul>
<li><strong>公共文件改动群通知</strong>：无论是<code>git</code>库，还是单独分支，都可以利用<code>webhook</code>进行钉钉群通知；</li>
<li>规范<code>commit</code>消息，自动生成公共文件<code>changelog</code>：利用一些成熟的工具加强<code>commit</code>消息格式，然后每次自动记录生成规范的<code>changelog</code>文件，以便有<font color=#39f><strong>清晰的修改记录</strong></font>，而且<code>commit</code>通知也会更具<font color=#39f><strong>可读性</strong></font>；</li>
<li>针对方案三，可能存在一种强制校验的方式来禁止合并其他代码的分支到公共文件分支：利用<code>git hook</code>来检测本地代码合并是否满足要求，目前也有相关的<code>npm</code>包支持这种<code>git hook</code>，比如：<a href="https://github.com/typicode/husky">husky</a>。但是由于需要写脚本来验证是否有命令能够支持检测<code>merge</code>来源分支，所以尚不明确；</li>
</ul>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://segmentfault.com/a/1190000021090620">多项目并行开发之公共资源处理：Git Sbutree拆分子仓库 - wl-ui - SegmentFault 思否</a></li>
<li><a href="https://segmentfault.com/a/1190000012002151">git subtree教程 - 个人文章 - SegmentFault 思否</a></li>
<li><a href="https://blog.csdn.net/basicthinker/article/details/6629508">Git管理多个分支的公共部分Howtomanagethecommonpartofmultiplebranches_basicthinker的专栏-CSDN博客</a></li>
<li><a href="https://www.atlassian.com/git/tutorials/git-subtree">Git subtree: the alternative to Git submodule | Atlassian Git Tutorial</a></li>
<li><a href="https://juejin.im/post/5bd2debfe51d457abc710b57">规范你的 commit message 并且根据 commit 自动生成 CHANGELOG.md - 掘金</a></li>
<li><a href="https://juejin.im/post/5e09b706e51d45580359b367">Git子仓库深入浅出 - 掘金</a></li>
<li><a href="https://tech.youzan.com/git-subtree/">用 Git Subtree 在多个 Git 项目间双向同步子项目，附简明使用手册Sina Weibo icon</a>：实践总结</li>
<li><a href="https://www.jianshu.com/p/de90ffbd53e9">使用git钩子对提交代码进行检查(pre-commit) - 简书</a></li>
<li><a href="https://imweb.io/topic/5b13aa38d4c96b9b1b4c4e9d">git hook实践心得 - 腾讯Web前端 IMWeb 团队社区 | blog | 团队博客</a></li>
<li><a href="https://github.com/typicode/husky">GitHub - typicode/husky: Git hooks made easy 🐶 woof!</a></li>
<li><a href="https://github.com/PaicFE/blog/issues/10">手牵手使用Husky &amp; Nodejs自定义你的Git钩子 · Issue #10 · PaicFE/blog · GitHub</a></li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>基建</tag>
        <tag>工程</tag>
      </tags>
  </entry>
  <entry>
    <title>音频播放器的制作与WebAudio API</title>
    <url>/post/music-player-and-webaudio/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>最近一直在制作一个音乐<code>web app</code>的练习项目，播放器的功能当然是音乐类<code>app</code>的基础；除此之外，个人对于音乐可视化也比较感兴趣，一旦遇上音乐就想着可视化；然而这些功能都离不开<code>HTML5</code>推出的<code>audio</code>元素以及强大的<code>WebAudio API</code>。</p>
<span id="more"></span>
<h2 id="audio元素"><a class="markdownIt-Anchor" href="#audio元素"></a> audio元素</h2>
<p><code>audio</code>元素是<code>H5</code>新增的多媒体标签，通过它就可以轻松的用来进行音频播放等一些操作；</p>
<h3 id="常用属性"><a class="markdownIt-Anchor" href="#常用属性"></a> 常用属性</h3>
<ol>
<li>
<p><code>src</code>：音频地址；</p>
</li>
<li>
<p><code>autoplay</code>：布尔属性，默认值为<code>false</code>；当设置时，音频会马上播放，而非等到音频加载完后再播放；</p>
</li>
<li>
<p><code>loop</code>：布尔属性，默认值为<code>false</code>；设置时音频播放完后会<strong>自动循环播放</strong>；</p>
</li>
<li>
<p><code>controls</code>：布尔属性，默认值为<code>false</code>；设置时浏览器会给<code>audio</code>元素提供一个默认的控制面板（<code>UI</code>，可以进行播放，暂停等操作）；</p>
</li>
<li>
<p><code>preload</code>：用来提示浏览器<strong>以什么方式来加载音频信息</strong>，有<code>auto</code>、<code>none</code>和<code>metadata</code>三个选项，当设置值为<strong>空字符串时</strong>等同于<code>auto</code>；<font color=red><strong>没有规定的默认值</strong></font>，所以不同浏览器的默认值可能不一样；<code>autoplay</code>属性的优先级大于<code>preload</code>！</p>
<ul>
<li><code>none</code>：示意用户可能不会播放该音频，或者服务器希望节省带宽；换句话说，<font color=red><strong>该音频不会被缓存</strong></font>；</li>
<li><code>metadata</code>：示意即使用户可能不会播放该音频，但<font color=red><strong>获取元数据</strong></font> (例如音频长度) 还是有必要的。</li>
<li><code>auto</code>：示意用户可能会播放音频；换句话说，如果有必要，<font color=red><strong>整个音频都将被加载</strong></font>，即使用户不期望使用。</li>
</ul>
</li>
<li>
<p><code>muted</code>：布尔属性，默认为<code>false</code>；设置时代表音频是<strong>静音</strong>的；</p>
</li>
</ol>
<h3 id="常用的dom属性"><a class="markdownIt-Anchor" href="#常用的dom属性"></a> 常用的<code>DOM</code>属性</h3>
<ol>
<li>
<p><code>paused</code>：音频元素是否处于暂停状态（<code>true</code>or<code>false</code>），<font color=red><strong>缓冲状态并不算暂停状态</strong></font>！</p>
</li>
<li>
<p><code>currentTime</code>：音频元素的当前播放时间，<strong>单位为秒</strong>（浮点型）；设置该属性可以调整音频的当前播放时间！</p>
</li>
<li>
<p><code>duration</code>：音频元素的总时间长度，<strong>单位为秒</strong>；没有音频文件时，值为<code>0</code>！</p>
</li>
</ol>
<h3 id="常用方法"><a class="markdownIt-Anchor" href="#常用方法"></a> 常用方法</h3>
<ol>
<li><code>play()</code>：播放音频；</li>
<li><code>pause()</code>：暂停播放；</li>
</ol>
<h2 id="播放器的制作"><a class="markdownIt-Anchor" href="#播放器的制作"></a> 播放器的制作</h2>
<p>虽说<code>audio</code>元素可以使用自带的控制器进行操作，但是一般为了融合进产品，当然会重新设计；所以一般是隐藏<code>audio</code>元素，利用<code>js</code>获取其<code>DOM</code>，然后使用自带的方法和属性进行控制；</p>
<ol>
<li>
<p><strong>播放/暂停/停止</strong>：这些利用<code>play()</code>和<code>pause()</code>方法即可实现；</p>
</li>
<li>
<p><strong>进度条显示</strong>：利用<code>currentTime</code>和<code>duration</code>属性即可获知当前播放进度的百分比；</p>
</li>
<li>
<p><strong>进度跳转</strong>：点击进度条元素时获取其<code>event.offsetX</code>及其容器宽度即可知道<font color=#39f><strong>点击位置对应的进度百分比</strong></font>，然后设置<code>currentTime</code>即可；</p>
</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">timePoint</span>(<span class="params">e</span>) &#123; <span class="comment">// 歌曲进度条跳转</span></span><br><span class="line">    $player.<span class="property">currentTime</span> = $player.<span class="property">duration</span> * e.<span class="property">offsetX</span> / barWidth</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="4">
<li><strong>上一首/下一首/其它切换操作</strong>：直接设置<code>src</code>即可；</li>
</ol>
<h2 id="音频可视化"><a class="markdownIt-Anchor" href="#音频可视化"></a> 音频可视化</h2>
<p>音频可视化一般是获取音频频率进行相应转换，形成与音乐同步的视觉信息；而要获取频率信息就需要借助<code>WebAudio API</code>的方法了。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20190103173643.png?imageslim" alt="mark" /></p>
<p>上面是来自<code>MDN</code>的一张图，很好地表达了<code>Audio context</code>与<code>Audio node</code>之间的关系，其中<code>Inputs</code>就是音频文件或信息，而<code>Destination</code>则是播放设备；因此，一个<code>Audio context</code>的作用就是引入音源，连接中间节点（<code>AudioNode</code>，可以多个进行串联，有不同类型的<code>AudioNode</code>），最后输出到播放设备；</p>
<h3 id="获取频率信息"><a class="markdownIt-Anchor" href="#获取频率信息"></a> 获取频率信息</h3>
<ol>
<li><strong>创建上下文</strong>：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title class_">AudioContext</span> = <span class="variable language_">window</span>.<span class="property">AudioContext</span> || <span class="variable language_">window</span>.<span class="property">webkitAudioContext</span></span><br><span class="line"><span class="keyword">let</span> ctx = <span class="keyword">new</span> <span class="title class_">AudioContext</span>()</span><br></pre></td></tr></table></figure>
<ol start="2">
<li><strong>创建音源</strong>：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> source = ctx.<span class="title function_">createMediaElementSource</span>(<span class="variable language_">this</span>.<span class="property">$player</span>)</span><br></pre></td></tr></table></figure>
<p><code>createMediaElementSource</code>只是创建音源的其中一种方法，该方法接受一个<code>audio</code>元素或<code>video</code>元素作为音源对象，得到一个<code>MediaElementAudioSourceNode</code>对象（属于<code>AudioNode</code>节点）；</p>
<ol start="3">
<li><strong>创建分析器节点</strong>：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> analyser = ctx.<span class="title function_">createAnalyser</span>()</span><br></pre></td></tr></table></figure>
<p><code>createAnalyser</code>方法可以创建一个<code>AnalyserNode</code>，而<code>AnalyserNode</code>可以实时获取音频的频率相关信息（前提是连接了音源节点）；</p>
<ol start="4">
<li><strong>连接音源、分析器和播放设备</strong>：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">source.<span class="title function_">connect</span>(analyser)</span><br><span class="line">analyser.<span class="title function_">connect</span>(ctx.<span class="property">destination</span>)</span><br></pre></td></tr></table></figure>
<p>将音源与分析器连接后，分析器就可以工作了；<code>destination</code>属性是默认的音频渲染设备，连接<code>destination</code>后就能正常输出音频信息；</p>
<p>以上就是获取<font color=#39f><strong>音频频率信息</strong></font>的最直接方法，其实可以在音源和<code>destination</code>之间添加多个不同的<code>AudioNode</code>，玩出更多的花样。</p>
<h3 id="analysernode"><a class="markdownIt-Anchor" href="#analysernode"></a> AnalyserNode</h3>
<p>分析器节点拥有丰富的频率信息，是可视化的主要信息来源；常用的属性和方法有：</p>
<ol>
<li><code>fftSize</code>：音频频域的<code>FFT</code>样本窗口大小；</li>
</ol>
<blockquote>
<p>fftSize 属性的值必须是从32到32768范围内的2的非零幂； 其默认值为2048.</p>
</blockquote>
<ol start="2">
<li>
<p><code>frequencyBinCount</code>：数值为<code>fftSize</code>属性值的一半，代表可用于可视化的频率信息数量；</p>
</li>
<li>
<p><code>getByteFrequencyData(arr)</code>：获取当前频率信息至<code>Uint8Array</code>类型数组中；<code>Uint8Array</code>类型数组中元素值为<code>0~255</code>之间的整数；</p>
</li>
<li>
<p><code>getFloatFrequencyData(arr)</code>：获取当前频率信息至<code>Float32Array</code>类型数组中；<code>Float32Array</code>类型数组中元素值为32位浮点数，因此方法获取的数据具有更高的精度；</p>
</li>
</ol>
<h3 id="可视化"><a class="markdownIt-Anchor" href="#可视化"></a> 可视化</h3>
<p>当成功创建音源和分析器并进行连接后，可以利用<code>AnalyserNode</code>的方法和属性获取实时频率信息，进而进行绘制：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(analyser.<span class="property">frequencyBinCount</span>)</span><br><span class="line">analyser.<span class="title function_">getByteFrequencyData</span>(arr)</span><br></pre></td></tr></table></figure>
<p>以上步骤就能获取实时的音频频率数据了，只需在<code>requestAnimationFrame</code>中不停地利用<code>getByteFrequencyData</code>等方法获取实时数据就能实现各种各样的音乐可视化，数据有了，后面就靠创意了。</p>
<h3 id="移动端兼容性问题"><a class="markdownIt-Anchor" href="#移动端兼容性问题"></a> 移动端兼容性问题</h3>
<p>目前使用过程中发现，在移动端的某些浏览器使用<code>getByteFrequencyData</code>获取数据时会出现数据全为<code>0</code>的情况，找了很久也没找到解决办法，可能是某些浏览器内核对于<code>WebAudio API</code>的支持程度不够吧。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/audio">audio | MDN</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement">HTMLMediaElement | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/AudioContext">AudioContext | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/AnalyserNode">AnalyserNode | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/Events/Media_events">媒体相关事件 | MDN</a></li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>H5</tag>
        <tag>WebAudio</tag>
        <tag>visualization</tag>
      </tags>
  </entry>
  <entry>
    <title>在node上搭建一个mongodb服务器</title>
    <url>/post/node-mongodb-server/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>由于<code>Cloud Studio</code>中每个工作空间只能使用<strong>1G</strong>的内存，当后台运行进程过多时，如果当前运行的进程需要比较多的内存时，就会造成该进程『<strong>killed</strong>』（由于可用内存不够导致内存溢出）；比如使用<code>npm run dev</code>或<code>npm run build</code>时，被<code>kill</code>时就会报一个137的错误，对于<code>node</code>可以通过设置<code>--max-old-space-size</code>来限制<code>node</code>或<code>npm</code>本身占用的最大内存；但是限制内存后程序自然就运行得慢了。</p>
<p>而像<code>mongodb</code>这种进程在后台运行肯定会占用较多的内存，因此决定将其单独设立到另一个主机空间，做成<strong>远程服务器</strong>（即不是集成到当前空间和项目中，而是利用ip或网址进行访问，就是调用<code>API</code>接口的形式）进行连接。</p>
<span id="more"></span>
<h2 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h2>
<p>要使用<code>mongodb</code>光在<code>node</code>项目中引入相关依赖包是<strong>不够</strong>的，因为那些包只是对<code>mongodb</code>数据库进行连接和操作的！！！所以，首先必须在主机空间里安装<code>mongodb</code>软件。</p>
<h3 id="安装mongodb"><a class="markdownIt-Anchor" href="#安装mongodb"></a> 安装mongodb</h3>
<ol>
<li>由于<code>Cloud Studio</code>给定的主机是<code>Ubuntu 16.04 x64</code>的，所以需要去<a href="https://www.mongodb.com/download-center#community">Mongodb官网下载中心</a>选择对应系统版本的安装包，然后下载，如：</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1604-3.6.7.tgz</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>下载完安装包后，进行解压：</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">tar -xvf mongodb-linux-x86_64-ubuntu1604-3.6.7.tgz</span><br></pre></td></tr></table></figure>
<p>解压后顺便把文件夹名称一改，因为这文件夹名实在是有点长：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> mongodb-linux-x86_64-ubuntu1604-3.6.7 mongodb</span><br></pre></td></tr></table></figure>
<p>现在相当于把<code>mongodb</code>安装在<code>~/path/mongodb</code>文件夹下了。</p>
<ol start="3">
<li>添加到环境变量中：</li>
</ol>
<p>由于studio使用的命令行是<code>zsh</code>，所以需要在<code>~/.zhsrc</code>的末尾添加：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> MONGODB_HOME=<span class="string">&quot;<span class="variable">$HOME</span>/path/mongodb&quot;</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$MONGODB_HOME</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>添加完后执行更新命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> .zshrc</span><br></pre></td></tr></table></figure>
<p>然后就可以使用<code>mongodb</code>的命令了。</p>
<h3 id="启动mongodb数据库"><a class="markdownIt-Anchor" href="#启动mongodb数据库"></a> 启动mongodb数据库</h3>
<p>启动一个<code>mongodb</code>数据库，需要给定一个存放数据库文件的文件夹路径；比如在<code>~</code>下新建了一个<code>dbdata</code>文件夹，然后指定为数据库文件存放路径并启动<code>mongodb</code>数据库：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">mongod -dbpath=./dbdata</span><br></pre></td></tr></table></figure>
<p>启动的数据库默认端口是<code>27017</code>，如果要使数据库一直保持运行（<strong>后台运行</strong>），可以在启动命令的最后添加<code>&amp;</code>即可。</p>
<h2 id="搭建express服务器"><a class="markdownIt-Anchor" href="#搭建express服务器"></a> 搭建Express服务器</h2>
<p>显然，只有数据库是无法完成<code>API</code>接口的；因此需要一个用来接收<code>request</code>，返回<code>response</code>的服务器组件。经过一番查询后，发现在<code>Node.js</code>使用较多的是<code>Express</code>这个服务器框架，看了一下确实比较方便，只需要关心输入输出即可，不需要考虑太多的配置，所以决定搭建一个<code>Express</code>服务器来处理<code>request</code>和<code>response</code>。</p>
<h3 id="安装依赖"><a class="markdownIt-Anchor" href="#安装依赖"></a> 安装依赖</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm i express -S</span><br></pre></td></tr></table></figure>
<h3 id="简单的express服务器"><a class="markdownIt-Anchor" href="#简单的express服务器"></a> 简单的Express服务器</h3>
<p>在项目文件夹创建一个<code>app.js</code>文件，然后写一个简单的处理<code>request</code>和<code>response</code>的服务器：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> app = <span class="title function_">express</span>() <span class="comment">// 创建一个express服务器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置路由，根据请求地址的路径来处理request，输出相应的response</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>)=&gt;</span>&#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&#x27;Hello World!&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// listen函数用来设置监听端口和ip地址</span></span><br><span class="line"><span class="keyword">let</span> server = app.<span class="title function_">listen</span>(<span class="string">&#x27;3000&#x27;</span>, <span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">let</span> host = server.<span class="title function_">address</span>().<span class="property">address</span></span><br><span class="line">  <span class="keyword">let</span> port = server.<span class="title function_">address</span>().<span class="property">port</span></span><br><span class="line"></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;app listening at http://%s:%s&#x27;</span>, host, port)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>上面的代码就相当于建立了一个服务器，这个服务器的地址就是<code>0.0.0.0:3000</code>；然后当使用<code>get</code>方法访问服务器根路径<code>/</code>时，给出的<code>response</code>正文为<code>Hello World!</code>。</p>
<p>使用<code>node app.js</code>启动服务器，访问效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180902/72Jafk7bL8.png?imageslim" alt="mark" /></p>
<h2 id="mongoose"><a class="markdownIt-Anchor" href="#mongoose"></a> Mongoose</h2>
<p>由于<code>node</code>并不能直接连接<code>mongodb</code>服务器进行数据获取和操作，因此需要能够在<code>node</code>下对<code>mongodb</code>服务器进行操作的工具。事实上<code>mongodb</code>官方早就实现了基于<code>Node.js</code>的<a href="https://mongodb.github.io/node-mongodb-native/">驱动</a>和<code>API</code>，只需要在<code>node</code>项目中安装<code>mongodb</code>这个依赖包就可以实现对<code>mongodb</code>服务器的连接和操作；但是由于对数据结构没有限定，使用比较自由，所以觉得另一个<font color=red><strong>基于官方驱动</strong></font>的<code>mongoose</code>更符合我的胃口，因为<code>mongoose</code>的<code>Schema</code>可以实现对数据的<strong>结构和数据类型</strong>进行限定。</p>
<h3 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm i mongoose -S</span><br></pre></td></tr></table></figure>
<h3 id="连接数据库"><a class="markdownIt-Anchor" href="#连接数据库"></a> 连接数据库</h3>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Schema</span> = mongoose.<span class="property">Schema</span> <span class="comment">// Schema构造函数</span></span><br><span class="line"><span class="comment">// mongodb连接地址：mongodb://ip:port/database</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;mongodb://0.0.0.0:27017/test&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> db = mongoose.<span class="title function_">createConnection</span>(url) <span class="comment">// 返回数据库的连接对象</span></span><br><span class="line">db.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">err</span>)=&gt;</span>&#123; <span class="comment">// 监听数据库连接错误事件</span></span><br><span class="line">    <span class="keyword">throw</span> err</span><br><span class="line">&#125;)</span><br><span class="line">db.<span class="title function_">once</span>(<span class="string">&#x27;open&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="comment">// 监听数据库连接成功事件（once就是监听一次）</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;connect success&#x27;</span>)</span><br><span class="line">    db.<span class="title function_">close</span>() <span class="comment">// 关闭数据库连接</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>显然，所有的<code>CRUD</code>操作肯定需要在<strong>连接成功事件</strong>（<code>open</code>）内进行。</p>
<h3 id="schema-model和document"><a class="markdownIt-Anchor" href="#schema-model和document"></a> Schema、model和document</h3>
<p>由于<code>mongodb</code>属于<code>nosql</code>类型数据库，对于数据库中的表（在<code>mongodb</code>中并没有表这一说，相对应的是集合（<code>collection</code>），一个集合并<strong>没有数据结构和类型限制</strong>，集合内的数据并<strong>不需要</strong>格式相同）；而<code>Schema</code>算是<code>mongoose</code>对于<code>mongodb</code>没有限定集合内数据结构和类型的<strong>补充</strong>，而<code>model</code>可以看做具有给定<code>Schema</code>的<strong>集合</strong>，而<code>docuement</code>则是<code>model</code>的<strong>实例</strong>，可以看做是该集合内的一条<strong>数据</strong>。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180902/gdlE8I6k7I.png?imageslim" alt="mark" /></p>
<h4 id="schema"><a class="markdownIt-Anchor" href="#schema"></a> Schema</h4>
<p><code>Schema</code>以键值对的形式来定义数据结构和类型，键名就是<strong>字段名称</strong>，而值就是<strong>类型限制或更加详细的设定</strong>；其中可以使用的数据类型有：</p>
<ul>
<li>String</li>
<li>Number</li>
<li>Date</li>
<li>Buffer</li>
<li>Boolean</li>
<li><strong>Mixed</strong>：<code>Schema.Types.Mixed</code>，实际上就相当于一个<code>Object</code>；这种类型无法对其内部数据类型进行准确限定！</li>
<li>ObjectId</li>
<li><strong>Array</strong>：数组内元素类型可以是<code>Schema</code>或其它数据类型</li>
<li>Decimal128</li>
<li><strong>Schema</strong>：一个已经被定义的<code>Schema</code>可以作为一种类型使用，也就是<code>Schema</code>可以<strong>嵌套</strong>！</li>
</ul>
<p><font color=red><strong>P.s</strong></font>：当某个字段的类型为一个对象，且对象的字段全都给定了类型限定，则会被自动转为一个<code>Schema</code>作为该字段的类型！</p>
<p><strong>实例</strong>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&#x27;mongoose&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Schema</span> = mongoose.<span class="property">Schema</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> user = <span class="keyword">new</span> <span class="title class_">Schema</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="title class_">String</span></span><br><span class="line">&#125;) <span class="comment">// 一个已定义的Schema</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> group = &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="title class_">Number</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="title class_">String</span></span><br><span class="line">&#125; <span class="comment">// 一个所有字段被限定类型的对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> habit = &#123;</span><br><span class="line">    <span class="attr">group</span>: <span class="title class_">Number</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">tip</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">start</span>: <span class="title class_">Number</span>,</span><br><span class="line">    <span class="attr">theme</span>: <span class="title class_">Number</span>,</span><br><span class="line">    <span class="attr">icon</span>: <span class="title class_">Number</span>,</span><br><span class="line">    <span class="attr">day</span>: [<span class="title class_">Number</span>]</span><br><span class="line">&#125; <span class="comment">// 一个所有字段被限定类型的对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> data = &#123;</span><br><span class="line">    <span class="attr">uid</span>: <span class="title class_">Number</span>,</span><br><span class="line">    <span class="attr">user</span>: user, <span class="comment">// Schema作为类型使用</span></span><br><span class="line">    <span class="attr">habits</span>: [habit], <span class="comment">// 对象作为类型，自动转换成Schema，作为数组元素的类型</span></span><br><span class="line">    <span class="attr">group</span>: [group]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> dataType = <span class="keyword">new</span> <span class="title class_">Schema</span>(data) <span class="comment">// 最终的Schema数据结构和类型</span></span><br></pre></td></tr></table></figure>
<h4 id="modeldocument"><a class="markdownIt-Anchor" href="#modeldocument"></a> model，document</h4>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 按给定数据结构和类型生成Schema，并绑定到指定集合</span></span><br><span class="line"><span class="keyword">let</span> schema = <span class="title class_">Schema</span>(schemaType, &#123;<span class="attr">collection</span>: <span class="string">&#x27;info&#x27;</span>&#125;)</span><br><span class="line"><span class="comment">// 按照给定的Schema生成model</span></span><br><span class="line"><span class="keyword">let</span> model = dbase.<span class="title function_">model</span>(<span class="string">&#x27;&#x27;</span>, schema)</span><br><span class="line"><span class="comment">// 按照给定的model和参数生成一条数据</span></span><br><span class="line"><span class="keyword">let</span> data = <span class="keyword">new</span> <span class="title function_">model</span>(&#123;...&#125;)</span><br></pre></td></tr></table></figure>
<p>事实上，<code>Schema</code>只是格式，真正具有<code>CRUD</code>的是<code>model</code>和<code>document</code>；而<code>model</code>具有最直接的数据操作。</p>
<h2 id="收尾"><a class="markdownIt-Anchor" href="#收尾"></a> 收尾</h2>
<p><strong>简单地</strong>来说：<code>mongodb</code><strong>数据库</strong>也有了，<code>Express</code><strong>服务器</strong>也有了，剩下的就是在相应的路由里由<code>mongoose</code>连接数据库进行<code>CRUD</code>操作，并在<code>response</code>中<strong>返回</strong>相应的数据，这样就构成了一个完整的<code>API</code>服务器了。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://cnodejs.org/topic/59b8941ab1a5852e67bb7f23">node+vue+MongoDB从构建项目到服务器部署</a></li>
<li><a href="https://segmentfault.com/q/1010000005732508/a-1020000005767310">为什么用NPM安装mongodb开启服务不成功？</a></li>
<li><a href="https://www.cnblogs.com/mmykdbc/p/8509034.html">使用vue-cli结合express获取mongodb里面的数据 - 明明一颗大白菜 - 博客园</a></li>
<li><a href="http://www.expressjs.com.cn/starter/basic-routing.html">一个简单的 Express 路由</a></li>
<li><a href="http://www.expressjs.com.cn/4x/api.html#app.listen">Express 4.x - API 中文手册</a></li>
<li><a href="https://mongoosedoc.top/docs/index.html">Mongoose 5.0 中文文档</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>mongodb</tag>
        <tag>mongoose</tag>
        <tag>Node.js</tag>
        <tag>Express</tag>
      </tags>
  </entry>
  <entry>
    <title>使用npm的注意事项及错误收集</title>
    <url>/post/npm-use-and-error/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>记录<code>npm</code>使用的一些注意事项，以及收集一些<code>npm</code>错误的<strong>解决</strong>办法。</p>
<span id="more"></span>
<h2 id="更新node和npm"><a class="markdownIt-Anchor" href="#更新node和npm"></a> 更新node和npm</h2>
<h3 id="更新node"><a class="markdownIt-Anchor" href="#更新node"></a> 更新node</h3>
<ol>
<li>安装<code>n</code>模块：</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> npm i -g n</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>安装最新稳定版node：</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> n stable</span><br></pre></td></tr></table></figure>
<h3 id="更新npm"><a class="markdownIt-Anchor" href="#更新npm"></a> 更新npm</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> npm i -g npm</span><br></pre></td></tr></table></figure>
<p>注意：更新完node和npm后，可能当前环境并没有刷新，需要手动更新命令行工具或重新进入；</p>
<p>手动更新：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~.zshrc</span><br></pre></td></tr></table></figure>
<h2 id="通过nvm更新node和npm"><a class="markdownIt-Anchor" href="#通过nvm更新node和npm"></a> 通过nvm更新node和npm</h2>
<p><code>nvm</code>即<code>Node version manager</code>，是专门用来管理<code>node</code>版本切换的工具；</p>
<ol>
<li>安装相应版本的<code>node</code>：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm install v10.8.0</span><br></pre></td></tr></table></figure>
<p>执行上述命令会自动安装<code>v10.8.0</code>的<code>node</code>及其对应的<code>npm</code>；安装完后会自动切换到安装完后的<code>node</code>版本，需要注意的是这只是<strong>临时切换</strong>。</p>
<ol start="2">
<li>永久切换<code>node</code>版本：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm <span class="built_in">alias</span> default v10.8.0</span><br></pre></td></tr></table></figure>
<p>这样关闭终端后，打开的默认<code>node</code>版本就是上述设置的版本。</p>
<ol start="3">
<li>临时切换<code>node</code>版本：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm use vxx.x.x</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>查看已安装的<code>node</code>版本：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm list</span><br></pre></td></tr></table></figure>
<h2 id="npm错误收集"><a class="markdownIt-Anchor" href="#npm错误收集"></a> NPM错误收集</h2>
<h3 id="err-4048-unlink"><a class="markdownIt-Anchor" href="#err-4048-unlink"></a> ERR 4048 unlink</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm ERR!   errno: -4048,</span><br><span class="line">npm ERR!   code: &#x27;EPERM&#x27;,</span><br><span class="line">npm ERR!   syscall: &#x27;unlink&#x27;</span><br></pre></td></tr></table></figure>
<p><strong>导致问题的原因</strong>：项目中文件夹或某个文件被其他程序占用（很可能就是vscode的锅），导致文件没有权限被读写；</p>
<p><strong>解决办法</strong>：使用杀毒软件对文件夹进行占用解锁；如腾讯管家：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200315155726.jpg?imageslim" alt="img" /></p>
<p><strong>相关参考链接</strong>：</p>
<ol>
<li><a href="https://stackoverflow.com/questions/30860795/fail-to-install-npm-package-npm-err-errno-4048">node.js - Fail to install npm package “npm ERR! errno -4048” - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/27845251/npm-install-give-error-eperm-unlink">node.js - npm install give Error: EPERM, unlink - Stack Overflow</a></li>
</ol>
<h3 id="eperm-operation-not-permitted"><a class="markdownIt-Anchor" href="#eperm-operation-not-permitted"></a> EPERM: operation not permitted</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm ERR! code EPERM</span><br><span class="line">npm ERR! errno -4048</span><br><span class="line">npm ERR! syscall lstat</span><br><span class="line">npm ERR! Error: EPERM: operation not permitted</span><br></pre></td></tr></table></figure>
<p>该类错误通常是项目文件夹的权限不够（<code>win10</code>中可能出现），在文件夹右击，然后选择『管理员取得所有权』即可。（很纳闷，明明是管理员账户为啥还有这情况出现？）</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200315155801.jpg?imageslim" alt="img" /></p>
<p>如果是解锁文件和赋予管理员权限还是提示<code>-4048</code>的错误时，可以考虑在<code>npm</code>命令后面加上<code>--no-bin-links</code>参数；如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i xxx --no-bin-links</span><br></pre></td></tr></table></figure>
<p><strong>参考文档</strong>：<a href="https://github.com/phoenixframework/phoenix/issues/2464#issuecomment-328853460">Error: EPERM: operation not permitted, unlink · Issue #2464 · phoenixframework/phoenix</a></p>
<h3 id="unexpected-end-of-json-input-while-parsing-near"><a class="markdownIt-Anchor" href="#unexpected-end-of-json-input-while-parsing-near"></a> Unexpected end of JSON input while parsing near</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Unexpected end of JSON input while parsing near xxx</span><br></pre></td></tr></table></figure>
<p><strong>导致问题的原因</strong>：可能是之前安装的时候出现错误导致安装中断，因此<code>npm</code>缓存中含有不正确的安装包；</p>
<p><strong>解决办法</strong>：使用<code>npm cache clean -f</code>清除缓存，然后再次安装即可；</p>
<p><strong>相关参考链接</strong>：</p>
<ol>
<li><a href="https://github.com/LLK/scratch-gui/issues/4328#issuecomment-465612534">npm install error unexpected end of JSON input while parsing near ‘…omment:http://open’ · Issue #4328 · LLK/scratch-gui</a></li>
</ol>
<h3 id="node-sass安装失败"><a class="markdownIt-Anchor" href="#node-sass安装失败"></a> node-sass安装失败</h3>
<p><strong>解决办法</strong>：直接单独设置淘宝源镜像进行安装；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set sass_binary_site https://npm.taobao.org/mirrors/node-sass/</span><br></pre></td></tr></table></figure>
<p><strong>参考链接</strong>：<a href="https://segmentfault.com/a/1190000010984731">整理 node-sass 安装失败的原因及解决办法 - 个人文章 - SegmentFault 思否</a></p>
<h3 id="提示包不存在code-etarget"><a class="markdownIt-Anchor" href="#提示包不存在code-etarget"></a> 提示包不存在：code ETARGET</h3>
<p>如这样的错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm ERR! code ETARGET</span><br><span class="line">npm ERR! notarget No matching version found for es-abstract@1.14.0</span><br><span class="line">npm ERR! notarget In most cases you or one of your dependencies are requesting</span><br><span class="line">npm ERR! notarget a package version that doesn&#x27;t exist.</span><br><span class="line">npm ERR! notarget</span><br><span class="line">npm ERR! notarget It was specified as a dependency of &#x27;xxx&#x27;</span><br><span class="line">npm ERR! notarget</span><br></pre></td></tr></table></figure>
<p>查找原因是<code>package-lock.json</code>当中的这个包确实没有这个版本；</p>
<p><strong>解决办法</strong>：直接把<code>package-lock.json</code>这个包的信息去掉，然后重新安装即可；千万不要尝试直接在里面改变包的版本号，那样校验不会通过！</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ul>
<li><a href="https://blog.csdn.net/luntan6788/article/details/79093494">通过NVM安装Node.js - CSDN博客</a></li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>client、offset、scroll相关属性</title>
    <url>/post/offset-client-scroll/</url>
    <content><![CDATA[<p>在动态获取元素的位置和鼠标位置时，总是被诸如offset、client和scroll等种类所困惑，这些位置属性之间到底有什么差异，到底我该怎样获取我想要的位置。</p>
<span id="more"></span>
<h2 id="offset相关属性"><a class="markdownIt-Anchor" href="#offset相关属性"></a> offset相关属性</h2>
<ul>
<li><strong>offsetWidth</strong>：元素在水平方向上占用的空间大小，<strong>以像素计</strong>。包括元素的宽度、（可见的）垂直滚动条的宽度、左边框宽度和右边框宽度。</li>
<li><strong>offsetHeight</strong>：元素在垂直方向上占用的空间大小，<strong>以像素计</strong>。包括元素的高度、（可见的）水平滚动条的高度、上边框高度和下边框高度。</li>
<li><strong>offsetTop</strong>：元素的上外边框至<font color=red>包含元素</font>的上内边框之间的像素距离。</li>
<li><strong>offsetLeft</strong>：元素的左外边框至<font color=red>包含元素</font>的左内边框之间的像素距离。</li>
</ul>
<p>什么是当前元素的<strong>包含元素</strong>？可以理解为<font color=#36f><strong>父级DOM结点中离得最近的具有大小（宽高不为0）的元素</strong></font>，可以通过<code>offsetParent</code>属性来访问这个包含元素！</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180708/LmfAfDh9J6.png?imageslim" alt="mark" /></p>
<h2 id="client相关属性"><a class="markdownIt-Anchor" href="#client相关属性"></a> client相关属性</h2>
<ul>
<li><strong>clientWidth</strong>：元素内容区宽度加上<strong>左右内边距</strong>（padding）宽度；</li>
<li><strong>clientHeight</strong>：元素内容区高度加上<strong>上下内边距</strong>（padding）高度；</li>
<li><strong>clientTop</strong>：元素的上边框的高度，以像素表示；若上下两端出现水平滚动条，则应<font color=red><strong>加上滚动条的高度</strong></font>。</li>
<li><strong>clientLeft</strong>：元素的左边框的宽度，以像素表示；若左右两侧出现垂直滚动条，则应<font color=red><strong>加上滚动条的宽度</strong></font>。</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/180708/fLb5bGb677.png?imageslim" alt="mark" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180708/HiHL78LgbF.png?imageslim" alt="mark" /></p>
<h2 id="scroll相关属性"><a class="markdownIt-Anchor" href="#scroll相关属性"></a> scroll相关属性</h2>
<ul>
<li><strong>scrollWidth</strong>：元素内容的总宽度，包含<strong>滚动内容</strong>的宽度；</li>
<li><strong>scrollHeight</strong>：元素内容的总高度，包含<strong>滚动内容</strong>的高度；</li>
<li><strong>scrollTop</strong>：被<font color=red><strong>隐藏在内容区域上方</strong></font>的像素数。通过设置这个属性可以改变元素的滚动位置。</li>
<li><strong>scrollLeft</strong>：被<font color=red><strong>隐藏在内容区域左侧</strong></font>的像素数。通过设置这个属性可以改变元素的滚动位置。</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/180708/DEIhKc50fg.png?imageslim" alt="mark" /></p>
<h2 id="mouseevent中的相关属性"><a class="markdownIt-Anchor" href="#mouseevent中的相关属性"></a> MouseEvent中的相关属性</h2>
<p><code>MouseEvent</code>对象即专门用来处理鼠标事件的事件对象；其中有些属性与上面的<code>DOM</code>属性有关；</p>
<ul>
<li><strong>offsetX</strong>：鼠标<code>x</code>位置距离元素左内边框的距离；</li>
<li><strong>offsetY</strong>：鼠标<code>y</code>位置距离元素上内边框的距离；</li>
<li><strong>clientX</strong>：鼠标位于元素<font color=red><strong>客户端区域</strong></font>（<code>client dimension</code>）中的<code>x</code>坐标；</li>
<li><strong>clientY</strong>：鼠标位于元素<font color=red><strong>客户端区域</strong></font>（<code>client dimension</code>）中的<code>y</code>坐标；</li>
<li><strong>screenX</strong>：鼠标在整个屏幕中的<code>x</code>坐标；</li>
<li><strong>screenY</strong>：鼠标在整个屏幕中的<code>y</code>坐标；</li>
<li><strong>pageX</strong>：鼠标位于整个文档（包括水平和垂直滚动条滚动的内容）的水平（x）位置；</li>
<li><strong>pageY</strong>：鼠标位于整个文档（包括水平和垂直滚动条滚动的内容）的垂直（y）位置；</li>
</ul>
<p>以上属性都是<code>只读</code>属性，所以改动并不会使鼠标位置发生改变！！！<font color=#36f><strong>元素客户端区域指的是元素内容及其内边距所占据的空间</strong></font>。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="http://visugar.com/2017/07/25/20170725ClienOffsetScroll/">JS中client/offset/scroll等的宽高解析 | Visugar个人博客</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MouseEvent/MouseEvent">MouseEvent() - Web API 接口 | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MouseEvent/offsetX">MouseEvent.offsetX - Web API 接口 | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MouseEvent/clientX">MouseEvent.clientX - Web API 接口 | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MouseEvent/screenX">MouseEvent.screenX - Web API 接口 | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MouseEvent/pageX">MouseEvent.pageX - Web API 接口 | MDN</a></li>
<li>《JavaScript高级程序设计（第3版）》——12.2.3 元素大小</li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>DOM</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Mac 上搭建 owncloud 环境</title>
    <url>/post/owncloud-env-on-mac/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>没想到在<code>Mac</code>上搭建<code>PHP</code>开发环境会有这么多坑，手动编译真是坑到吐血；果然还是包管理器才是王道，不过经过此次折腾，确实是时候学习一些<code>docker</code>的用法了；</p>
<span id="more"></span>
<h2 id="tldr"><a class="markdownIt-Anchor" href="#tldr"></a> TL;DR</h2>
<ol>
<li>
<p>利用<code>homebrew</code>分别安装<code>php</code>，<code>mysql</code>和<code>nginx</code>；</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install php</span><br><span class="line">brew install mysql</span><br><span class="line">brew install nginx</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>启动服务：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew services start php</span><br><span class="line">brew services start mysql</span><br><span class="line">brew services start nginx</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>下载对应版本的<code>owncloud</code>的安装包，解压后放到本地服务器路径下；</p>
</li>
<li>
<p>设置<code>nginx</code>的服务器配置文件<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>；</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream php-handler &#123;</span><br><span class="line">    server 127.0.0.1:9000; # 本地php服务器默认地址</span><br><span class="line">    #server unix:/var/run/php5-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80; # 要监听的本地端口</span><br><span class="line">    server_name ***; # 服务器访问域名</span><br><span class="line"></span><br><span class="line">    # Add headers to serve security related headers</span><br><span class="line">    # Before enabling Strict-Transport-Security headers please read into this topic first.</span><br><span class="line">    #add_header Strict-Transport-Security &quot;max-age=15552000; includeSubDomains&quot;;</span><br><span class="line">    add_header X-Content-Type-Options nosniff;</span><br><span class="line">    add_header X-Frame-Options &quot;SAMEORIGIN&quot;;</span><br><span class="line">    add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class="line">    add_header X-Robots-Tag none;</span><br><span class="line">    add_header X-Download-Options noopen;</span><br><span class="line">    add_header X-Permitted-Cross-Domain-Policies none;</span><br><span class="line"></span><br><span class="line">    # Path to the root of your installation</span><br><span class="line">    root /data/domains/cloud; # owncloud解压后部署的本地路径</span><br><span class="line">    location = /robots.txt &#123;</span><br><span class="line">        allow all;</span><br><span class="line">        log_not_found off;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # The following 2 rules are only needed for the user_webfinger app.</span><br><span class="line">    # Uncomment it if you&#x27;re planning to use this app.</span><br><span class="line">    #rewrite ^/.well-known/host-meta /public.php?service=host-meta last;</span><br><span class="line">    #rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;</span><br><span class="line"></span><br><span class="line">    location = /.well-known/carddav &#123;</span><br><span class="line">        return 301 $scheme://$host/remote.php/dav;</span><br><span class="line">    &#125;</span><br><span class="line">    location = /.well-known/caldav &#123;</span><br><span class="line">        return 301 $scheme://$host/remote.php/dav;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ^~ /.well-known/acme-challenge &#123; &#125;</span><br><span class="line"></span><br><span class="line">    # set max upload size</span><br><span class="line">    client_max_body_size 512M;</span><br><span class="line">    fastcgi_buffers 64 4K;</span><br><span class="line"></span><br><span class="line">    # Disable gzip to avoid the removal of the ETag header</span><br><span class="line">    gzip off;</span><br><span class="line"></span><br><span class="line">    # Uncomment if your server is build with the ngx_pagespeed module</span><br><span class="line">    # This module is currently not supported.</span><br><span class="line">    #pagespeed off;</span><br><span class="line"></span><br><span class="line">    error_page 403 /core/templates/403.php;</span><br><span class="line">    error_page 404 /core/templates/404.php;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        rewrite ^ /index.php$uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ &#123;</span><br><span class="line">        return 404;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) &#123;</span><br><span class="line">        return 404;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|core/templates/40[34])\.php(?:$|/) &#123;</span><br><span class="line">        fastcgi_split_path_info ^(.+\.php)(/.*)$;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        fastcgi_param PATH_INFO $fastcgi_path_info;</span><br><span class="line">        #fastcgi_param HTTPS on;</span><br><span class="line">        fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice</span><br><span class="line">        fastcgi_param front_controller_active true;</span><br><span class="line">        fastcgi_pass php-handler;</span><br><span class="line">        fastcgi_intercept_errors on;</span><br><span class="line">        fastcgi_request_buffering off; #Available since NGINX 1.7.11</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^/(?:updater|ocs-provider)(?:$|/) &#123;</span><br><span class="line">        try_files $uri $uri/ =404;</span><br><span class="line">        index index.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # Adding the cache control header for js and css files</span><br><span class="line">    # Make sure it is BELOW the PHP block</span><br><span class="line">    location ~* \.(?:css|js)$ &#123;</span><br><span class="line">        try_files $uri /index.php$uri$is_args$args;</span><br><span class="line">        add_header Cache-Control &quot;max-age=15778463&quot;;</span><br><span class="line">        # Add headers to serve security related headers (It is intended to have those duplicated to the ones above)</span><br><span class="line">        # Before enabling Strict-Transport-Security headers please read into this topic first.</span><br><span class="line">        #add_header Strict-Transport-Security &quot;max-age=15552000; includeSubDomains&quot;;</span><br><span class="line">        add_header X-Content-Type-Options nosniff;</span><br><span class="line">        add_header X-Frame-Options &quot;SAMEORIGIN&quot;;</span><br><span class="line">        add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class="line">        add_header X-Robots-Tag none;</span><br><span class="line">        add_header X-Download-Options noopen;</span><br><span class="line">        add_header X-Permitted-Cross-Domain-Policies none;</span><br><span class="line">        # Optional: Don&#x27;t log access to assets</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~* \.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg)$ &#123;</span><br><span class="line">        try_files $uri /index.php$uri$is_args$args;</span><br><span class="line">        # Optional: Don&#x27;t log access to other assets</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>重启<code>nginx</code>服务；</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew services restart nginx</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>访问配置的本地服务地址（域名+端口），然后按照页面指示初始化<code>owncloud</code>应用设置（管理员账号和数据库配置）即可；需要注意的是<font color=#f00><code>MySQL</code>数据库地址需要带上端口号</font>，默认端口为<code>3306</code>；</p>
</li>
</ol>
<p><strong>注</strong>：<code>owncloud</code>不同的版本对于<code>PHP</code>版本会有不同的要求，以<code>10.11.1</code>版本为例，该版本不兼容<code>7.3</code>及以上版本的<code>PHP</code>；</p>
<h3 id="homebrew加速镜像"><a class="markdownIt-Anchor" href="#homebrew加速镜像"></a> Homebrew加速镜像</h3>
<p>由于<code>homebrew</code>安装包的服务器默认都在国外，因此下载包时速度较慢，对于体积大的包来说经常会出现超时而导致安装失败的问题；解决这种问题的套路那自然就是使用国内镜像，这里推荐使用<strong>中科大</strong>的镜像：</p>
<ul>
<li><a href="https://mirrors.ustc.edu.cn/help/brew.git.html">Homebrew 源使用帮助 — USTC Mirror Help 文档</a></li>
<li><a href="https://mirrors.ustc.edu.cn/help/homebrew-bottles.html">Homebrew Bottles 源使用帮助 — USTC Mirror Help 文档</a></li>
</ul>
<p>上面两个镜像建议都替换，上述页面都有详细的替换和还原说明；</p>
<h3 id="nginx配置文件"><a class="markdownIt-Anchor" href="#nginx配置文件"></a> nginx配置文件</h3>
<p><code>nginx</code>安装成功后，通过<code>nginx -h</code>命令可以看到默认配置文件的路径：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210411225331.png?imageslim" alt="img" /></p>
<p>打开默认配置文件可以看到，默认<code>servers</code>文件夹（默认配置文件的同级目录）下的所有配置文件都会被自动解析，因此一般都在该文件下放入自定义的服务器配置文件；</p>
<h2 id="遇到的坑"><a class="markdownIt-Anchor" href="#遇到的坑"></a> 遇到的坑</h2>
<p>由于之前在<code>windows</code>系统上搭建过<code>PHP</code>开发环境，因此不自觉的以为在<code>Mac</code>上也是那么轻松，所以一开始就选了那种流行的<code>PHP</code><strong>集成环境安装包</strong>的模式，结果就碰到了很多的坑……</p>
<h3 id="集成环境安装包的问题"><a class="markdownIt-Anchor" href="#集成环境安装包的问题"></a> 集成环境安装包的问题</h3>
<p>在<code>Mac</code>上用集成环境安装包搭建<code>PHP</code>环境的最大问题是：一旦<code>PHP</code>需要额外的扩展模块时，需要<strong>自行安装</strong>或<strong>手动编译</strong>；而在<code>Windows</code>系统上往往只需要在<code>php.ini</code>配置文件上将相应模块的注释取消即可，因为默认扩展模块的<code>dll</code>文件都编译好了；</p>
<p>以<code>owncloud10.11.1</code>为例，该应用依赖<code>intl</code>（国际化）扩展模块，而集成环境默认都没有携带这个扩展模块的编译文件（<code>.so</code>），因此需要自行解决；</p>
<h3 id="手动编译可能会遇到的问题"><a class="markdownIt-Anchor" href="#手动编译可能会遇到的问题"></a> 手动编译可能会遇到的问题</h3>
<p>一般来说，<code>PHP</code>扩展模块在<code>Mac</code>上的手动编译流程大如下<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>：</p>
<ol>
<li>
<p>到<a href="https://pecl.php.net/">PECL网站</a>（专门托管<code>PHP</code>扩展模块源码的仓库）找到对应的扩展模块；</p>
</li>
<li>
<p>然后下载扩展模块相应版本的源码压缩包，进行解压；</p>
</li>
<li>
<p>命令行进入源码文件夹下（有<code>config.m4</code>文件的那级目录），运行：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">phpize</span><br></pre></td></tr></table></figure>
<p>运行成功后，目录下会生成一个<code>configure</code>文件；</p>
</li>
<li>
<p>接着运行:</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># path-to-php为当前使用的PHP安装路径</span></span><br><span class="line">./configure --with-php-config=path-to-php/bin/php-config</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>然后进行编译：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> make</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>最后将编译好的文件安装到<code>PHP</code>扩展模块目录中：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> make install</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>理想情况下，经过上面的一番操作，应该是生成对应扩展模块编译产物（<code>.so</code>文件）且安装到目录中的；然而，事实上<strong>运行的每个命令</strong>都可能会出现<font color=#39f>各种各样的错误</font>……</p>
<h4 id="icu4c包找不到"><a class="markdownIt-Anchor" href="#icu4c包找不到"></a> icu4c包找不到</h4>
<p>在运行<code>./configure</code>命令时，极有可能会出现下面的错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">configure: error: Unable to detect ICU prefix or no failed. Please verify ICU install prefix and make sure icu-config works.</span><br></pre></td></tr></table></figure>
<p>原因可能是：</p>
<ul>
<li>
<p>没有安装<code>icu4c</code>包；此时可以通过<code>homebrew</code>来安装解决：</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install icu4c</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>安装了但是没有暴露到环境变量中；可以尝试使用<code>homebrew</code>的<code>link</code>命令来解决：</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew <span class="built_in">link</span> icu4c</span><br></pre></td></tr></table></figure>
<p>不过有可能会出现警告，但是也提示了如何手动暴露到环境变量中去：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210411225356.png?imageslim" alt="img" /></p>
</li>
</ul>
<h4 id="extstandardphp_smart_strh-file-not-found"><a class="markdownIt-Anchor" href="#extstandardphp_smart_strh-file-not-found"></a> ext/standard/php_smart_str.h’ file not found</h4>
<p>可能好不容易成功运行了<code>./configure</code>命令后，在执行编译命令时又会出现如下错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Fatal error: &#x27;ext/standard/php_smart_str.h&#x27; file not found</span><br></pre></td></tr></table></figure>
<p>很明显，<code>php_smart_str.h</code>这个头文件要么是缺失了，要么就是没有正确地暴露在环境变量中；</p>
<h3 id="mysql加密方式不支持"><a class="markdownIt-Anchor" href="#mysql加密方式不支持"></a> mysql加密方式不支持</h3>
<p>在使用<code>mysql8.0+</code>版本时，其默认账号加密方式变为<code>caching_sha2_password</code>，而很多<code>PHP</code>版本不支持这种加密方式，因此就会出现如下错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqli_real_connect(): The server requested authentication method unknown to the client [sha256_password]  </span><br></pre></td></tr></table></figure>
<p>一般可以采用改写数据库中账号加密方式来解决<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;你的密码&#x27;</span></span><br></pre></td></tr></table></figure>
<p>不过上述方式我试了后仍然无效，所以此时可以采用另一种方法，那就是使用<a href="https://dev.mysql.com/downloads/mysql/"><code>mysql</code>官方的<code>Mac</code>安装包</a>来安装<code>mysql</code>，安装过程中可以选择采用<code>mysql5.7</code>的加密方式来兼容现有的<code>PHP</code>；</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://learnku.com/articles/35981">在 macOS Catalina 10.15 搭建 PHP 开发环境 | Laravel China 社区</a>：基于<code>homebrew</code>安装相应的包（<code>php+mysql+linux</code>），强烈推荐</li>
<li><a href="https://dev.mysql.com/downloads/mysql/">MySQL :: Download MySQL Community Server</a>： <code>mysql</code>的安装包，如果<code>mysql8.0+</code>（通过<code>homebrew</code>安装）的加密方式报错无法解决时，可以使用官方安装包，因为安装时可以选择低版本（<code>mysql5.7</code>）的加密方式；</li>
<li><a href="https://zhuanlan.zhihu.com/p/27960044">Mac 系统下安装配置MySQL的方法 - 知乎</a>：通过安装包安装<code>MySQL</code>需要自己暴露环境变量</li>
<li><a href="https://php-osx.liip.ch/">PHP for OS X / macOS as binary package (deprecated)</a>：基于<code>Mac</code>编译了大多数扩展模块的<code>PHP</code>源码，不过目前不再维护了</li>
<li><a href="https://stackoverflow.com/questions/55024726/fatal-error-ext-standard-php-smart-str-h-file-not-found">php - Fatal error: ‘ext/standard/php_smart_str.h’ file not found - Stack Overflow</a>：自行编译<code>intl</code>扩展包可能会出现<code>Fatal error: 'ext/standard/php_smart_str.h' file not found</code>的报错；</li>
<li><a href="https://github.com/phpbrew/phpbrew/issues/21">Installation failed with icu-config error on Mac OS X 10.8 · Issue #21 · phpbrew/phpbrew</a>：编译<code>intl</code>模块（具体是运行<code>./configure</code>命令时）可能会出现<code>configure: error: Unable to detect ICU prefix or no failed. Please verify ICU install prefix and make sure icu-config works.</code>的报错，原因是环境变量中找不到<code>icu4c</code>包</li>
<li><a href="https://blog.csdn.net/sdutphp/article/details/79885466">phpMyAdmin - 配置文件权限错误，不应任何用户都能修改！_JadePlus的技术博客-CSDN博客</a>：运行<code>phpmyadmin</code>时可能会出现<code>配置文件权限错误，不应任何用户都能修改！ </code>的报错，原因就是<code>phpmyadmin</code>目录权限过高</li>
<li><a href="https://www.codeleading.com/article/15684554523/">MAC 10.15.6系统修改允许安装任何来源后，依然无效问题 - 代码先锋网</a></li>
<li><a href="http://www.xsrvs.com/index.html">MxSrvs - MacOS平台的PHP集成开发环境</a></li>
<li><a href="http://hk.uwenku.com/question/p-ulrbkqaa-zm.html">安裝/激活運行MAMP的PHP「intl」擴展 - 優文庫</a>：一种解决<code>PHP</code>扩展模块缺失的方法</li>
<li><a href="https://www.geek-share.com/detail/2730890687.html">mac xampp php安装intl扩展 - 极客分享</a>：一种解决<code>PHP</code>扩展模块缺失的方法</li>
<li><a href="https://blog.csdn.net/jhsword/article/details/108672675">2020年最好用的6个php环境搭建工具推荐</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/113042273">mac 下安装使用pear/pecl - 范松伟的文章 - 知乎</a>：也可以借助<code>pear/pecl</code>来管理<code>PHP</code>扩展模块</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://cloud.tencent.com/developer/article/1622167">Nginx+ownCloud+PHP+MySQL搭建私有云 - 云+社区 - 腾讯云</a>：<code>owncloud</code>默认带了<code>Apache</code>服务器的一些配置（<code>.htaccess</code>文件），使用<code>Nginx</code>作为服务器时，需要转化为相应的规则（<code>.cnf</code>文件），这篇文章就有现成的 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/27210889">Mac环境下安装PHP扩展踩坑指南 - Renjie的文章 - 知乎</a>：<code>PHP</code>扩展模块编译的一般流程 <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://blog.csdn.net/youcijibi/article/details/81153789">mysql 安装了最新版本8.x版本后的报错： the server requested authentication method unknown to the client_youcijibi的博客-CSDN博客</a>：<code>mysql8.0+</code>版本加密方式错误的解决办法之一 <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>踩坑</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>接入七牛云SDK上传文件</title>
    <url>/post/qiniu-sdk-upload/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>想把<code>markdown</code>的图片都上传到图床上，方便管理引用；刚好手里有个七牛云的对象存储空间，所以就动手接入七牛的<code>SDK</code>，将图片上传到存储空间。</p>
<p>由于单纯地利用客户端的<code>SDK</code>并不能直接上传文件到七牛云空间中，还需要服务端的<code>SDK</code>返回上传<code>token</code>后才能进行上传操作，因此要配置一个服务端接口来获取上传的<code>token</code>。</p>
<span id="more"></span>
<h2 id="接入流程"><a class="markdownIt-Anchor" href="#接入流程"></a> 接入流程</h2>
<h3 id="服务端"><a class="markdownIt-Anchor" href="#服务端"></a> 服务端</h3>
<p>由于手上只有一个<code>PHP</code>的服务器可以用，所以这里就以<code>PHP SDK</code>为例。</p>
<ol>
<li>
<p>在项目中引入七牛云的<code>SDK</code>包；</p>
</li>
<li>
<p>在对应接口文件中引入<code>SDK</code>包，调用<code>Auth</code>类生成上传<code>token</code>；如：</p>
 <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;../tools/qiniu-sdk/7.2.10/autoload.php&quot;</span>);</span><br><span class="line"><span class="keyword">use</span> <span class="title">Qiniu</span>\<span class="title">Auth</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$auth</span> = <span class="keyword">new</span> <span class="title class_">Auth</span>(<span class="variable">$AK</span>, <span class="variable">$SK</span>); <span class="comment">// $AK就是Access Key，$SK就是Serect Key</span></span><br><span class="line"><span class="variable">$token</span> = <span class="variable">$auth</span>-&gt;<span class="title function_ invoke__">uploadToken</span>(<span class="variable">$bucket</span>); <span class="comment">//</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$token</span>) &#123; <span class="comment">// 判断token是否生成</span></span><br><span class="line">  <span class="variable">$data</span> = [</span><br><span class="line">    <span class="string">&quot;token&quot;</span> =&gt; <span class="variable">$token</span></span><br><span class="line">  ];</span><br><span class="line">  <span class="variable">$message</span> = <span class="string">&quot;七牛云上传token获取成功！&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable">$code</span> = <span class="number">400</span>;</span><br><span class="line">  <span class="variable">$message</span> = <span class="string">&quot;七牛云上传token生成失败！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注</strong>：生成<code>token</code>需要存储空间的<code>Access Key</code>、<code>Serect Key</code>和<code>bucket</code>（空间名）参数。</p>
</li>
<li>
<p>返回<code>token</code>即可；</p>
</li>
</ol>
<h3 id="客户端浏览器"><a class="markdownIt-Anchor" href="#客户端浏览器"></a> 客户端（浏览器）</h3>
<ol>
<li>
<p>安装<code>qiniu-js</code>并引入；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">Qiniu</span> <span class="keyword">from</span> <span class="string">&#x27;qiniu-js&#x27;</span> <span class="comment">// 注意qiniu-js并没有export default！</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>获取到要上传的文件后，根据服务端接口获取上传<code>token</code>；</p>
</li>
<li>
<p>利用<code>upload()</code>方法上传文件；</p>
 <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">token</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> cur = <span class="title function_">dayjs</span>().<span class="title function_">format</span>(<span class="string">&#x27;YYYYMMDDHHmmss&#x27;</span>)</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">observer</span>: <span class="title class_">QiniuObservable</span> = <span class="title class_">Qiniu</span>.<span class="title function_">upload</span>(</span><br><span class="line">      img, <span class="comment">// 文件</span></span><br><span class="line">      <span class="string">`<span class="subst">$&#123;config.path&#125;</span><span class="subst">$&#123;cur&#125;</span><span class="subst">$&#123;getSuffix(img.name)&#125;</span>`</span>, <span class="comment">// 文件名</span></span><br><span class="line">      res.<span class="property">data</span>.<span class="property">token</span> <span class="comment">// 上传token</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> observer</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>调用<code>js SDK</code>的上传方法后，会返回一个对象，这个对象包含几个回调，可以用于监听<strong>上传进度，错误以及上传完成</strong>等状态；</p>
 <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">ObserverNextRes</span> &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 进度更新回调数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">total</span>: &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 已上传大小，单位为字节</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">loaded</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 本次上传的总量控制信息，单位为字节</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">total</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当前上传进度，范围：0～100</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">percent</span>: <span class="built_in">number</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">ObserverError</span> &#123;</span><br><span class="line">  <span class="attr">isRequestError</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">code</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">message</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">reqId</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">QiniuObserver</span> &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 接收上传进度信息的回调</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">next</span>: <span class="function">(<span class="params"><span class="attr">res</span>: <span class="title class_">ObserverNextRes</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 上传错误回调</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">error</span>: <span class="function">(<span class="params"><span class="attr">err</span>: <span class="title class_">ObserverError</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 上传完成后的回调</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">complete</span>: <span class="function">(<span class="params"><span class="attr">info</span>: <span class="built_in">any</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个对象的结构大致如<code>QiniuObserver</code>接口所描述的；其中<code>complete</code>回调参数的具体结构可以在<strong>服务端进行配置</strong>；</p>
</li>
</ol>
<p>对<code>qiniu-js</code>的封装可以看看这个<a href="https://gist.github.com/xxf1996/d69db4da7dadc86c852efb3536b36e63">demo</a>；</p>
<h2 id="sdk文档"><a class="markdownIt-Anchor" href="#sdk文档"></a> SDK文档</h2>
<h3 id="服务端sdk"><a class="markdownIt-Anchor" href="#服务端sdk"></a> 服务端SDK</h3>
<ul>
<li><code>PHP</code>：<a href="https://developer.qiniu.com/kodo/sdk/1241/php">https://developer.qiniu.com/kodo/sdk/1241/php</a></li>
<li><code>Node</code>：<a href="https://developer.qiniu.com/kodo/sdk/1289/nodejs">https://developer.qiniu.com/kodo/sdk/1289/nodejs</a></li>
</ul>
<h3 id="客户端sdk"><a class="markdownIt-Anchor" href="#客户端sdk"></a> 客户端SDK</h3>
<ul>
<li><code>JS</code>：<a href="https://developer.qiniu.com/kodo/sdk/1283/javascript">https://developer.qiniu.com/kodo/sdk/1283/javascript</a></li>
</ul>
]]></content>
      <categories>
        <category>业务</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>随机与噪声</title>
    <url>/post/random-and-noise/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>随机和噪声是计算机图形生成艺术中的常用手段，可以利用随机和噪声构建出迷人又不尽相同的图案。</p>
<span id="more"></span>
<h2 id="随机"><a class="markdownIt-Anchor" href="#随机"></a> 随机</h2>
<blockquote>
<p>一个随机的过程是一个不定因子不断产生的重复过程，但它可能遵循某个概率分布。<br><br />
—— <a href="https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E6%80%A7">https://zh.wikipedia.org/wiki/随机性</a></p>
</blockquote>
<ul>
<li><strong>随机数</strong>：即随机产生的数字，计算机中常用的随机算法都是产生一个<code>[0, 1)</code>之间的数；<strong>随机数最重要的特性是它在产生时后面的那个数与前面的那个数毫无关系</strong>。</li>
<li><strong>伪随机</strong>（确定性随机）：即通过<strong>一个固定的计算函数</strong>来获取一个『随机』数，<ins>只要初值（随机种子）相同，得到的随机数就是相同的</ins>，得到随机数就是伪随机数，但是它们具有<strong>类似于随机数的统计特征</strong>。</li>
</ul>
<h3 id="伪随机函数"><a class="markdownIt-Anchor" href="#伪随机函数"></a> 伪随机函数</h3>
<blockquote>
<p>注：这里提及的伪随机函数只是简单地<strong>使用一些常见函数模拟出一个伪随机数</strong>，与『伪随机数生成器』有一定区别；</p>
</blockquote>
<p>伪随机函数有以下几个特点：</p>
<ul>
<li>足够混乱（<strong>相邻</strong>的种子数得到的『随机数』应该有<strong>较大差别</strong>）</li>
<li><s>周期应该比较长</s></li>
<li>不太容易预测出『随机值』（虽然确实有具体的函数描述）</li>
</ul>
<p><strong>相似</strong>概念：<strong>伪随机数生成器</strong>（pseudo random number generator，<strong>PRNG</strong>）；</p>
<h4 id="三角函数"><a class="markdownIt-Anchor" href="#三角函数"></a> 三角函数</h4>
<p>显然，初始的三角函数都不够混乱；要使得三角函数看起来足够混乱，有以下一些方法：</p>
<ol>
<li>
<p><strong>使周期变小，小到无法分辨</strong>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200411195355.jpg?imageslim" alt="img" /></p>
<p>上面这个图像是函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>x</mi><mo>∗</mo><mn>545673.42</mn><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">y = |sin(x * 545673.42)|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord">4</span><span class="mord">5</span><span class="mord">6</span><span class="mord">7</span><span class="mord">3</span><span class="mord">.</span><span class="mord">4</span><span class="mord">2</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span>生成的随机数图像，可以看到取得周期数极小，得到的随机图像也是『杂乱无章』，但是如果<strong>周期数</strong>与当前<strong>系统的最小精度</strong>之间<strong>存在倍数关系</strong>时，就会出现很有规律的随机值分布，如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>x</mi><mo>∗</mo><mn>4153745.42</mn><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">y = |sin(x * 4153745.42)|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord">1</span><span class="mord">5</span><span class="mord">3</span><span class="mord">7</span><span class="mord">4</span><span class="mord">5</span><span class="mord">.</span><span class="mord">4</span><span class="mord">2</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200411195427.jpg?imageslim" alt="img" /></p>
</li>
<li>
<p><strong>使长度变大，截取小数部分</strong>（相当于<strong>放大小数部分</strong>）；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200411195450.jpg?imageslim" alt="img" /></p>
<p>上述图像是函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mo stretchy="false">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mn>85595.42</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = fract(sin(x) * 85595.42)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mord">5</span><span class="mord">5</span><span class="mord">9</span><span class="mord">5</span><span class="mord">.</span><span class="mord">4</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>得到的随机数分布图像；可以很明显的看到在函数<strong>极值处</strong>有比较明显的分割；且这种方法也同样存在第一种方法的问题，即<strong>放大倍数过大</strong>时，以至于得到的随机数分布出现比较规律的变化，如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mo stretchy="false">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mn>23485595.42</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = fract(sin(x) * 23485595.42)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mord">4</span><span class="mord">8</span><span class="mord">5</span><span class="mord">5</span><span class="mord">9</span><span class="mord">5</span><span class="mord">.</span><span class="mord">4</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200411195827.jpg?imageslim" alt="img" /></p>
</li>
<li>
<p><strong>两种方法结合</strong>可以避免一些问题：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200411195844.jpg?imageslim" alt="img" /></p>
<p>函数为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mo stretchy="false">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>x</mi><mi mathvariant="normal">/</mi><mn>84.462</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>59595.42</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = fract(sin(x / 84.462) * 59595.42)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">/</span><span class="mord">8</span><span class="mord">4</span><span class="mord">.</span><span class="mord">4</span><span class="mord">6</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord">9</span><span class="mord">5</span><span class="mord">9</span><span class="mord">5</span><span class="mord">.</span><span class="mord">4</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>；通过<strong>同时放大小数部分，提高函数周期</strong>，可以使得到的随机数分布更均匀，更『随机』；</p>
</li>
</ol>
<h4 id="取小数部分"><a class="markdownIt-Anchor" href="#取小数部分"></a> 取小数部分</h4>
<p>实际上，直接通过取一维线性函数的小数部分也能得到比较混乱的随机数分布；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = fract(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>的周期就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，然后缩小周期（对于一维线性函数来说，同时也是放大小数部分）至无法分辨即可：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200411195904.jpg?imageslim" alt="img" /></p>
<p>函数为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mi>r</mi><mi>a</mi><mi>c</mi><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo>∗</mo><mn>68875.42</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = fract(x * 68875.42)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mord">8</span><span class="mord">8</span><span class="mord">7</span><span class="mord">5</span><span class="mord">.</span><span class="mord">4</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></p>
<h3 id="降维"><a class="markdownIt-Anchor" href="#降维"></a> 降维</h3>
<p>有时候需要对一个<strong>二维及以上的向量</strong>生成一个随机数，这时候需要将向量降维至一维值，然后再使用伪随机函数生成伪随机数；而降维的方法就是<strong>向量点乘</strong>，通过将输入值点乘一个<strong>相应维度的固定向量值</strong>得到一个降维后的值。</p>
<h2 id="噪声"><a class="markdownIt-Anchor" href="#噪声"></a> 噪声</h2>
<p>简单地可以这么理解：<strong>噪声 = 随机数之间的插值</strong>；</p>
<blockquote>
<p>数学的数值分析领域中，内插或称插值（英语：interpolation）是一种通过已知的、离散的数据点，在范围内推求新数据点的过程或方法。</p>
</blockquote>
<h3 id="一维线性插值"><a class="markdownIt-Anchor" href="#一维线性插值"></a> 一维线性插值</h3>
<p>假设有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>两个值，则根据插值系数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo stretchy="false">(</mo><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k(\in[0,\ 1])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mclose">)</span></span></span></span>，可以得到插值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo>=</mo><mi>a</mi><mo>+</mo><mi>k</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>b</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c = a + k * (b - a)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></span></p>
<h3 id="一维多项式插值"><a class="markdownIt-Anchor" href="#一维多项式插值"></a> 一维多项式插值</h3>
<p>同上的假设：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>u</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mstyle scriptlevel="0" displaystyle="true"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><msub><mi>p</mi><mi>i</mi></msub><mo>∗</mo><msup><mi>k</mi><mi>i</mi></msup></mrow><mo separator="true">,</mo><mtext> </mtext><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mtext>是对应项的系数</mtext><mo stretchy="false">)</mo></mstyle></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mi>a</mi><mo>+</mo><mi>u</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>b</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}
u &amp;= \displaystyle\sum_{i=1}^n{p_i * k^i},\ (p_i\text{是对应项的系数}) \\
c &amp;= a + u * (b - a)
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.369066em;vertical-align:-1.934533em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.434533em;"><span style="top:-4.434533em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord mathnormal">u</span></span></span><span style="top:-2.148864em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.934533em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.434533em;"><span style="top:-4.434533em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord cjk_fallback">是对应项的系数</span></span><span class="mclose">)</span></span></span><span style="top:-2.148864em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.934533em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>一般来说，插值函数需要满足在<strong>定义域</strong>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,\ 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>上的<strong>值域</strong>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,\ 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>这个条件；</p>
<h3 id="三次多项式插值"><a class="markdownIt-Anchor" href="#三次多项式插值"></a> 三次多项式插值</h3>
<p>在噪声的插值中，用的最多的插值方法就是三次多形式插值了；因为三次多项式插值具有<strong>平滑且计算快</strong>的特点。<code>GLSL</code>内置的<code>smoothstep()</code>函数本质上就是一个三次多项式插值函数，插值效果如下所示：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200411195930.jpg?imageslim" alt="img" /></p>
<p>其插值函数为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>u</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn><mo>∗</mo><msup><mi>k</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mo>∗</mo><msup><mi>k</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">u(k) = 3*k^2 - 2*k^3
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>也就是著名的 <a href="https://zh.m.wikipedia.org/zh/Perlin%E5%99%AA%E5%A3%B0">Perlin 噪声</a>的三次多项式形式！</p>
<h3 id="perlin-噪声"><a class="markdownIt-Anchor" href="#perlin-噪声"></a> Perlin 噪声</h3>
<p><code>Perlin</code>噪声满足以下特征<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>：</p>
<ul>
<li>对旋转具有<strong>统计不变性</strong>；</li>
<li>能量在频谱上集中于一个窄带，即：图像是连续的，高频分量受限；</li>
<li>对变换具有统计不变性。</li>
</ul>
<p>经典的 <code>Perlin</code> 噪声有两种形式：</p>
<ul>
<li><strong>三次</strong>多项式：</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>u</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn><mo>∗</mo><msup><mi>k</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mo>∗</mo><msup><mi>k</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">u(k) = 3*k^2 - 2*k^3
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></p>
<ul>
<li><strong>五次</strong>多项式：</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>u</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mn>6</mn><mo>∗</mo><msup><mi>k</mi><mn>5</mn></msup><mo>−</mo><mn>15</mn><mo>∗</mo><msup><mi>k</mi><mn>4</mn></msup><mo>+</mo><mn>10</mn><mo>∗</mo><msup><mi>k</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">u(k) = 6*k^5 - 15*k^4 + 10 * k^3
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="二维插值"><a class="markdownIt-Anchor" href="#二维插值"></a> 二维插值</h3>
<p>二维插值的原理就是在插值点<strong>附近的方格</strong>（矩形）顶点之间进行<strong>三次一维插值</strong>：即先对<code>x</code>方向进行两次插值得到插值点<strong>上下两个插值</strong>（即下图的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>a</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x + a, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>a</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x + a, y + 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>两个点的插值），然后利用这两个点再对<code>y</code>方向做一次插值即可得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>a</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x + a, y + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>点的插值！</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200411195952.jpg?imageslim" alt="img" /></p>
<p>最后可以得到点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>a</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x + a, y + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>的插值为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>a</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>−</mo><mi>u</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>u</mi><mo stretchy="false">(</mo><mi>a</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>y</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>−</mo><mi>u</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>u</mi><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">f&#x27;(x + a, y + b) = 
\begin{bmatrix} 1 - u(a) &amp; u(a) \end{bmatrix}
\begin{bmatrix} f(x, y) &amp; f(x, y + 1) \\ f(x + 1, y) &amp; f(x + 1, y + 1) \end{bmatrix}
\begin{bmatrix} 1 - u(b) \\ u(b) \end{bmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p>
<p>推导过程我就懒得用<code>latex</code>写一遍了，看图吧：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200411200015.jpg?imageslim" alt="img" /></p>
<p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>就是各类<strong>一维插值函数</strong>；联系到噪声本身，其中四个顶点的值就是<strong>当前方格四个顶点位置的随机值</strong>。这里有一个简单<code>2D</code>噪声生成的<a href="https://codepen.io/xxf1996/full/zYYMvmR">demo</a>。</p>
<p>其它更高维的插值可以以此类推，可以想象当维度变大时，<strong>插值次数会呈指数型增长</strong>！</p>
<h3 id="simplex-噪声"><a class="markdownIt-Anchor" href="#simplex-噪声"></a> Simplex 噪声</h3>
<p><code>Simplex</code>噪声是<code>Ken Perlin</code>（没错，就是<code>Perlin</code>噪声的提出者）提出的更自然，性能更好的噪声算法。</p>
<p>其不同的地方在于：</p>
<ul>
<li>
<p>在二维插值的时候，不使用正方形的四个顶点进行插值，而是使用等边三角形的三个顶点进行插值；更高维的插值也是如此，也就是说<code>N</code>维的插值只需要<code>N+1</code>个点！比传统的指数型增长相比改善显著！</p>
</li>
<li>
<p>使用<strong>五次多项式</strong>进行插值，使边界处的衔接更<strong>平滑</strong>。</p>
</li>
</ul>
<p>如何在二维平面构建等边三角形单元格？<a href="https://thebookofshaders.com/11/?lan=ch">The Book of Shaders</a>提到了一个巧妙的构建方法：首先将正方形单元格<strong>平分为两个等腰三角形</strong>，然后进行<strong>斜切变换</strong>将等腰三角形变成等边三角形<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>！</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200411200055.jpg?imageslim" alt="img" /></p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E6%80%A7">随机性 - 维基百科，自由的百科全书</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E6%95%B0">随机数 - 维基百科，自由的百科全书</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/22337544">不只是噪音 - 知乎</a></li>
<li><a href="https://thebookofshaders.com/11/?lan=ch">The Book of Shaders: Noise</a></li>
<li><a href="https://zh.m.wikipedia.org/zh/Perlin%E5%99%AA%E5%A3%B0">Perlin噪声 - 维基百科，自由的百科全书</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E5%8F%8C%E7%BA%BF%E6%80%A7%E6%8F%92%E5%80%BC">双线性插值 - 维基百科，自由的百科全书</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://zh.m.wikipedia.org/zh/Perlin%E5%99%AA%E5%A3%B0">Perlin噪声 - 维基百科，自由的百科全书</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://thebookofshaders.com/11/?lan=ch">The Book of Shaders: Noise</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>GLSL</tag>
        <tag>计算机图形</tag>
        <tag>webGL</tag>
      </tags>
  </entry>
  <entry>
    <title>关于rem布局</title>
    <url>/post/rem-layout/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>由于移动端的设备存在许多分辨率的差异，所以一般的面向移动端的网站都不会直接按照某一固定分辨率的屏幕进行设计，而是尽可能的<font color=red><strong>适配所有分辨率的移动端设备</strong></font>。除了响应式布局之外，最近听闻基于<code>rem</code>的等比例适配布局比较流行。还有就是最近面试的时候连续被问到<code>rem</code>是什么，我竟哑口无言，简直惭愧，看来对于移动端这一块了解的确实是太少了，得好好补一补。</p>
<span id="more"></span>
<h2 id="等比例适配布局"><a class="markdownIt-Anchor" href="#等比例适配布局"></a> 等比例适配布局</h2>
<p>等比例，顾名思义就是尽管随着设备屏幕分辨率大小的不同页面元素的大小也不同，但是所有分辨率下展示的页面元素之间宽度的比例关系没有发生改变；比如：在一个设备宽度为<code>480px</code>的屏幕下，<code>a</code>元素的宽度为<code>480px</code>，<code>b</code>元素的宽度为<code>240px</code>，而在另一个设备宽度为<code>320px</code>的屏幕下，<code>a</code>元素的宽度为<code>320px</code>，<code>b</code>元素的宽度为<code>160px</code>，这样<code>a</code>元素与<code>b</code>元素之间宽度大小的比例没有变化，且<font color=red><strong>正比于设备宽度</strong></font>。</p>
<h2 id="相关概念"><a class="markdownIt-Anchor" href="#相关概念"></a> 相关概念</h2>
<ol>
<li><strong>物理像素</strong>：</li>
</ol>
<blockquote>
<p>一个物理像素是显示器(手机屏幕)上最小的物理显示单元，在操作系统的调度下，每一个设备像素都有自己的颜色值和亮度值。</p>
</blockquote>
<ol start="2">
<li><strong>设备独立像素</strong>（<code>density-independent pixel</code>）：</li>
</ol>
<blockquote>
<p>设备独立像素(也叫密度无关像素)，可以认为是计算机坐标系统中得一个点，这个点代表一个可以由程序使用的虚拟像素(比如: css 像素)，然后由相关系统转换为物理像素。</p>
</blockquote>
<ol start="3">
<li>
<p><strong>屏幕分辨率</strong>：也叫物理像素分辨率，即显示器拥有的物理像素的个数。比如：<code>1080x1920</code>表示该显示器的水平方向有<code>1080</code>个物理像素，而竖直方向有<code>1920</code>个物理像素；</p>
</li>
<li>
<p><strong>设备独立分辨率</strong>：即显示器拥有的设备独立像素的个数（水平，竖直方向）。由于<code>css</code>中的像素为设备独立像素，所以获取的<strong>元素的宽高</strong>使用的像素也是设备独立像素，比如<code>window.innerWidth</code>实际上获取的是视窗的设备独立像素宽度，而非物理像素的宽度！</p>
</li>
<li>
<p><strong>设备像素比</strong>（<code>device pixel ratio</code>）：简称<code>dpr</code>；</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">设备像素比 = 物理像素个数 / 设备独立像素个数 （水平或竖直方向）</span><br></pre></td></tr></table></figure>
<p><strong>比如</strong>：某手机的屏幕分辨率为<code>1080x1920</code>，而其设备独立分辨率为<code>360x640</code>，因此该手机的<code>dpr = 3</code>。<code>dpr = 3</code>的意思就是<code>css</code>中设置的<code>1px</code>实际上对应了<code>3 * 3</code>个物理像素！</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20190102165045.png?imageslim" alt="mark" /></p>
<ol start="6">
<li><strong>位图像素</strong>：</li>
</ol>
<blockquote>
<p>一个位图像素是栅格图像(如：png, jpg, gif 等)最小的数据单元。每一个位图像素都包含着一些自身的显示信息(如：显示位置，颜色值，透明度等)。</p>
</blockquote>
<h2 id="rem"><a class="markdownIt-Anchor" href="#rem"></a> rem</h2>
<p><code>rem</code>是<code>css3</code>新增的一种相对单位，即<code>root em</code>；而<code>1 em</code>指的就是<font color=red><strong>当前元素</strong></font>的<code>font-size</code>值，因此<code>1 rem</code>就指的是根元素<code>html</code>的<code>font-size</code>值。比如：<code>html</code>元素的<code>font-size: 16px;</code>，那么<code>1 rem</code>就等于<code>16px</code>，同理<code>0.5 rem</code>就是<code>8px</code>。</p>
<h2 id="rem与等比例适配布局"><a class="markdownIt-Anchor" href="#rem与等比例适配布局"></a> rem与等比例适配布局</h2>
<p>由于<code>rem</code>针对的是<code>html</code>元素，那么只需要将<code>html</code>元素的<code>font-size</code>值<font color=red><strong>与设备屏幕的宽度进行正相关</strong></font>，然后其他页面都使用<code>rem</code>来设置宽度，那么就能很轻易地实现不同大小设备之间的等比例适配布局。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 用来根据当前设备宽度来调整html元素的font-size</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> n: 默认设计稿宽度对应的rem数，即设备宽度被分割成个rem</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">rem</span>(<span class="params">n = <span class="number">10</span></span>)&#123; </span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span> / n + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="一些问题"><a class="markdownIt-Anchor" href="#一些问题"></a> 一些问题</h2>
<h3 id="移动端兼容性"><a class="markdownIt-Anchor" href="#移动端兼容性"></a> 移动端兼容性</h3>
<p>由于移动端（主要是安卓）的浏览器<code>app</code>数量众多，内核又各不相同，因此多少会出现一些意料之外的事情；</p>
<p>目前我发现的兼容性问题主要是某些浏览器对于所有元素的<font color=red><strong>最小<code>font-size</code>值有限制</strong></font>（比如<strong>夸克浏览器</strong>设置的最小<code>font-size</code>值为<code>8px</code>），当<code>html</code>设置的<code>font-size</code>小于浏览器的最小值时，浏览器默认会使用<code>font-size</code>最小值进行替换，因此会造成其它依赖<code>rem</code>的元素完全变样；除此之外，某些浏览器还有<font color=red><strong>小数点精度</strong></font>的问题，即当设置的<code>font-size</code>值过小，而其它元素的<code>rem</code>值比较大时，小数点后的精度就变得十分敏感了，因此会出现元素尺寸与设计图相差一定<code>px</code>的情况（<strong>小米自带浏览器</strong>就会出现，当<code>font-size</code>小于<code>1px</code>时，有些元素的尺寸就会出现偏差）；</p>
<p>因此，最好将<code>html</code>的<code>font-size</code>值<font color=#36f><strong>设置比较大一点</strong></font>；比如可以将设备宽度划分为<code>10rem</code>，使得<code>html</code>的<code>font-size</code>值在不同分辨率的设备之间都保持在一个较大的数字，然后利用<code>scss</code>自动计算元素的<code>rem</code>值即可。</p>
<h3 id="图片模糊"><a class="markdownIt-Anchor" href="#图片模糊"></a> 图片模糊</h3>
<p>由于<code>&lt;img&gt;</code>元素是<strong>位图</strong>，因此如果设备的<code>dpr &gt; 1</code>时且设计图的尺寸是按照一倍屏（<code>dpr = 1</code>）进行设计时，图片中<font color=red><strong>一个像素点信息要分到设备中的多个像素点</strong></font>，就相当于把图片放大了；一般图片放大都是利用临近插值算法模拟多余的像素点信息，所以图片自然就模糊了。</p>
<p>解决的办法就是按照二倍屏（<code>dpr = 2</code>）进行设计，因此图片资源尺寸被放大了一倍，在一倍屏和二倍屏上显示自然不会有模糊问题；还有一种办法就是准备多种尺寸的图片资源，利用<code>js</code>检测设备的<code>dpr</code>，然后选择使用对应尺寸的图片。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://juejin.im/post/5b90e07ce51d450e6a2dd140">rem布局解析 - 掘金</a></li>
<li>《css世界》 —— 8.1.2 理解 <code>font-size</code> 与 <code>ex</code>、 <code>em</code> 和 <code>rem</code> 的关系</li>
<li><a href="http://www.html-js.com/article/Mobile-terminal-H5-mobile-terminal-HD-multi-screen-adaptation-scheme%203041"><font color=red>【原创】移动端高清、多屏适配方案 - 移动端H5 - 前端乱炖</font></a></li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>布局</tag>
      </tags>
  </entry>
  <entry>
    <title>sass的安装与配置</title>
    <url>/post/sass-install/</url>
    <content><![CDATA[<h2 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h2>
<h3 id="安装ruby"><a class="markdownIt-Anchor" href="#安装ruby"></a> 安装Ruby</h3>
<p>由于Sass和Compass都是依赖于ruby的，所以首先得安装ruby；windows直接去官网下载或者使用<a href="https://rubyinstaller.org/">rubyinstaller</a>，推荐使用后者，下载一键配置，关键是下载速度快！</p>
<p>在ruby中安装各种包都是基于<code>gem</code>命令（类似于node.js中的<code>npm</code>），由于服务器在国外，安装包的速度当然慢的要死，所以要更换一下镜像，推荐使用ruby-China的镜像（淘宝的镜像今后不会维护了）：</p>
<p>更换前最好把自带的镜像删除（可以用<code>gem source --remove</code>命令移除），查看镜像列表可以使用命令行<code>gem source -l</code>；</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gem <span class="built_in">source</span> -a https://gems.ruby-china.org</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="安装sass"><a class="markdownIt-Anchor" href="#安装sass"></a> 安装Sass</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gem sass</span><br></pre></td></tr></table></figure>
<h3 id="安装compass"><a class="markdownIt-Anchor" href="#安装compass"></a> 安装compass</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">gem compass</span><br></pre></td></tr></table></figure>
<h2 id="创建compass工程"><a class="markdownIt-Anchor" href="#创建compass工程"></a> 创建compass工程</h2>
<p>通过<code>compass create</code>可以创建一个compass工程；</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">compass create projectNmae</span><br></pre></td></tr></table></figure>
<p>创建后会生成一个名为<code>projectName</code>的文件夹，该文件夹代表了一个compass和sass工程，该文件夹下还会有一些默认生成的文件夹和文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">|---stylesheets</span><br><span class="line">    |---*.css</span><br><span class="line">|---sass</span><br><span class="line">    |---*.scss</span><br><span class="line">|---.sass-cache</span><br><span class="line">    |---</span><br><span class="line">|---config.rb</span><br></pre></td></tr></table></figure>
<p>这些文件夹的名称可以通过命令行参数进行定制，也可以直接在<code>config.rb</code>配置文件中进行设定；</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">compass create -sass-dir <span class="string">&quot;sass&quot;</span> -css-dir <span class="string">&quot;css&quot;</span> -javascript-dir <span class="string">&quot;js&quot;</span> -image-dir <span class="string">&quot;img&quot;</span> </span><br></pre></td></tr></table></figure>
<p>也可以创建一个空的compass工程，即没有一些预定的css和scss文件；</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">compass create --bare </span><br></pre></td></tr></table></figure>
<h3 id="configrb文件"><a class="markdownIt-Anchor" href="#configrb文件"></a> config.rb文件</h3>
<p><code>config.rb</code>文件时compass工程的核心，它设定了如何编译sass文件，怎么生成css文件；</p>
<p>一个常见的配置文件如下：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;compass/import-once/activate&#x27;</span></span><br><span class="line"><span class="comment"># 通过 require 命令导入其它的compass插件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># http_path代表工程根目录的路径</span></span><br><span class="line">http_path = <span class="string">&quot;/&quot;</span></span><br><span class="line">css_dir = <span class="string">&quot;css&quot;</span></span><br><span class="line">sass_dir = <span class="string">&quot;sass&quot;</span></span><br><span class="line">images_dir = <span class="string">&quot;images&quot;</span></span><br><span class="line">javascripts_dir = <span class="string">&quot;javascripts&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cache代表是否开启sass编译缓存，默认开启（true）</span></span><br><span class="line">cache = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># output_style代表css文件输出样式</span></span><br><span class="line"><span class="comment"># output_style = :expanded or :nested or :compact or :compressed</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否开启资源相对路径功能</span></span><br><span class="line"><span class="comment"># relative_assets = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否在css文件中选择器的位置显示调试注释，默认开启</span></span><br><span class="line"></span><br><span class="line">line_comments = <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>css输出样式有四种：<code>:expanded</code>，<code>:nested</code>，<code>:compact</code>，<code>:compressed</code>；</p>
<h3 id="在webstorm中配置compass工程"><a class="markdownIt-Anchor" href="#在webstorm中配置compass工程"></a> 在webStorm中配置compass工程</h3>
<ol>
<li>
<p>找到<code>setting</code>-<code>language</code>-<code>stylesheets</code>-<code>compass</code>，设置正确的compass安装路径和compass工程的config.rb文件路径；要注意的是compass安装路径指的是<code>compass.bat</code>文件所在地方，如：<code>D:\Ruby\bin\compass.bat</code>；</p>
</li>
<li>
<p>到<code>setting</code>-<code>tool</code>-<code>File Watchers</code>中新增一个<code>Compass Scss</code>的实例，以实现自动监视scss文件的改动并进行实时编译；</p>
</li>
</ol>
<p><img src="https://pic.xiexuefeng.cc/markdown/180417/7FGdb3GChg.png?imageslim" alt="file watcher设置" /></p>
<h2 id="编译"><a class="markdownIt-Anchor" href="#编译"></a> 编译</h2>
<p>当编译的时候，对于文件名以<font color=red>下划线<code>_</code>开头</font>的<code>.scss</code>文件是不会编译的；且编译后的<code>.css</code>文件名与<code>.scss</code>的文件名一致！</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>sass</tag>
      </tags>
  </entry>
  <entry>
    <title>sass基本使用</title>
    <url>/post/sass-use/</url>
    <content><![CDATA[<p><strong>注意</strong>：sass有两种文件格式，同时也是两种不同的语法体系，默认使用<code>.scss</code>的语法！</p>
<h2 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h2>
<h3 id="变量声明"><a class="markdownIt-Anchor" href="#变量声明"></a> 变量声明</h3>
<p>形式为：<code>$ + 变量名: value;</code>，值可以是css的任意属性值（包括各种颜色）；如：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$blue</span>: <span class="number">#3399ff</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    backgrond-<span class="attribute">color</span>: <span class="variable">$blue</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要注意的是属性值不必加引号！值还可以定义为<font color=#36f>列表（<code>list</code>）或映射（<code>map</code>）</font>的形式，形成多值，可以按照索引进行取用，如：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$color</span>: <span class="number">#ff3366</span> <span class="number">#66ff99</span> <span class="number">#6699ff</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.div1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">nth</span>(<span class="variable">$color</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.div2</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">nth</span>(<span class="variable">$color</span>, <span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>利用<code>nth</code>函数对变量进行指定索引的取值，索引<strong>从1开始</strong>；（当一些css属性值本身就是多个值用空格断开的时候，是否也可以把其当做列表？）</p>
<span id="more"></span>
<h3 id="注释"><a class="markdownIt-Anchor" href="#注释"></a> 注释</h3>
<p>sass中有两种注释风格，一种就是css中使用的那种<code>/* */</code>，另一种就是单行注释<code>//</code>（单行注释不会编译到css文件中）；</p>
<h3 id="导入"><a class="markdownIt-Anchor" href="#导入"></a> 导入</h3>
<p>在scss文件中可以导入工程内的其它scss文件（包括带<code>_</code>的文件），语法为：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> (<span class="string">&#x27;someFile&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>导入文件时不需要添加scss文件的后缀，也不需要添加<code>_</code>（若是以下划线<code>_</code>开头的文件）；导入后，就相当于把导入的文件中所有内容都添加到当前文件中！</p>
<h3 id="嵌套"><a class="markdownIt-Anchor" href="#嵌套"></a> 嵌套</h3>
<p>在sass中代码可以嵌套，即在一个选择器内部再嵌入子选择器（最后并非一定是父子关系，但通常是这么做的）；如：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">nav</span> &#123;</span><br><span class="line">  <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">li</span> &#123; <span class="attribute">display</span>: inline-block; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">12px</span>;</span><br><span class="line">    <span class="selector-tag">text</span>-decoration: none;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译成正常css为：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">12px</span>;</span><br><span class="line">  <span class="selector-tag">text</span>-decoration: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="符号"><a class="markdownIt-Anchor" href="#符号"></a> &amp;符号</h4>
<p>在嵌套的时候，有一个特殊符号<code>&amp;</code>代表该级选择器的父选择器（即嵌套的上一层选择器），如：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="selector-tag">text</span>-decoration: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333333</span>;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3366ff</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译后的代码为：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="selector-tag">text</span>-decoration: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#3366ff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="扩展继承"><a class="markdownIt-Anchor" href="#扩展继承"></a> 扩展/继承</h3>
<p>通过<code>@extend</code>继承任何已定义的选择器样式（貌似与先后顺序无关，即前面定义的样式可以继承后面定义的样式），如：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#div1</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#00ffdd</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#div2</span>&#123;</span><br><span class="line">  <span class="keyword">@extend</span> #div1;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="占位符"><a class="markdownIt-Anchor" href="#占位符"></a> 占位符</h4>
<p>可以通过占位符<code>%</code>的形式来定义一个专门用来被继承的基础样式选择器，如：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">%box&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#3399ff</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">    <span class="keyword">@extend</span>: %box;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过<code>%</code>定义的占位符选择器，只会在被继承使用的地方进行编译，本身并不会单独的编译成css代码！即如果没有一个选择器继承使用该占位符选择器的样式，该占位符选择器的内容是不会被编译的。</p>
<h3 id="混合宏mixin"><a class="markdownIt-Anchor" href="#混合宏mixin"></a> 混合宏（mixin）</h3>
<p>混合宏有点类似于函数，可接受一组参数（当然也可以定义无参数的），然后返回一段css代码，如：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> box(<span class="variable">$style</span>)&#123;</span><br><span class="line">  -webkit-<span class="attribute">box-sizing</span>: <span class="variable">$style</span>;</span><br><span class="line">  -moz-<span class="attribute">box-sizing</span>: <span class="variable">$style</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: <span class="variable">$style</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后可以通过<code>@include</code>命令来引用定义的混合宏：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span>&#123;</span><br><span class="line">  <span class="keyword">@include</span> box(border-box);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译后为：</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  -moz-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://www.w3cplus.com/sassguide/">sass入门 - sass教程（w3plus）</a></li>
<li><a href="https://www.w3cplus.com/sassguide/syntax.html">sass语法（w3plus）</a></li>
</ol>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>sass</tag>
      </tags>
  </entry>
  <entry>
    <title>形状与图案</title>
    <url>/post/shape-and-pattern/</url>
    <content><![CDATA[<h2 id="常见形状"><a class="markdownIt-Anchor" href="#常见形状"></a> 常见形状</h2>
<h3 id="矩形"><a class="markdownIt-Anchor" href="#矩形"></a> 矩形</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200505164705.jpg?imageslim" alt="img" /></p>
<p>如图，若要画出上述矩形；正常思路就是<strong>扣去</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>&gt;</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">y &gt; a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>&lt;</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y &lt; b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>&lt;</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">x &lt; c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>及<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>&gt;</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">x &gt; d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>的所有像素点，剩下的像素点就是我们想要的矩形区域；</p>
<p>具体到<code>GLSL</code>中，可以使用<code>step()</code>函数来进行<strong>扣去像素点</strong>的操作；如：</p>
<span id="more"></span>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="built_in">step</span>(b, y);</span><br></pre></td></tr></table></figure>
<p>就代表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>&lt;</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y &lt; b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>的像素点会返回<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>；那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>&gt;</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">y &gt; a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>呢？如下：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1.0</span> - <span class="built_in">step</span>(a, y);</span><br></pre></td></tr></table></figure>
<p><strong>综上</strong>，利用<code>step()</code>抠出一个矩形区域的做法为：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="built_in">step</span>(b, y) - <span class="built_in">step</span>(a, y) - <span class="built_in">step</span>(d, x) - (<span class="number">1.0</span> - <span class="built_in">step</span>(c, x));</span><br></pre></td></tr></table></figure>
<p>当然，这样得到矩形区域的边缘<strong>会出现很明显的锯齿</strong>，可以使用<code>smoothstep()</code>函数来替代<code>step()</code>函数，得到一个比较平滑的边缘。</p>
<h3 id="圆形"><a class="markdownIt-Anchor" href="#圆形"></a> 圆形</h3>
<p>圆形区域就比较容易获取了，只需要计算<strong>像素点到圆心的距离</strong>就可以确定是不是在区域内了；</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1.0</span> - <span class="built_in">step</span>(r, <span class="built_in">length</span>(pos - center));</span><br></pre></td></tr></table></figure>
<h3 id="正多边形"><a class="markdownIt-Anchor" href="#正多边形"></a> 正多边形</h3>
<p>画出任意边数的正多边形可以根据一个<strong>距离场函数</strong>来进行；这个距离场函数实际上就是利用极坐标来进行计算的；</p>
<p>根据正多边形的<strong>内切圆或外接圆</strong>，将角度均分为相应的份数，在<ins>每份角度周期</ins>内<strong>圆心到边上的距离</strong>呈<font color=red><strong>相同的规律变化</strong></font>。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200505164723.jpg?imageslim" alt="img" /></p>
<p>如上图所示，以『正三角形』为例；在正三角形内得到一个内切圆，从圆心到顶点的边可以将内切圆均分为<code>3</code>份（即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>120</mn><mi mathvariant="normal">°</mi></mrow><annotation encoding="application/x-tex">120\degree</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mord">°</span></span></span></span>）。以<code>0</code>号边为起点，<code>1</code>号边为终点，对应内切圆的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mn>120</mn><mi mathvariant="normal">°</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,\ 120\degree]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mord">°</span><span class="mclose">]</span></span></span></span>，将该区间转化为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>60</mn><mi mathvariant="normal">°</mi><mo separator="true">,</mo><mtext> </mtext><mn>60</mn><mi mathvariant="normal">°</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-60\degree,\ 60\degree]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span><span class="mclose">]</span></span></span></span>，很自然地得到该段三角形边的极坐标方程为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><mo>=</mo><mi>ρ</mi><mo>⋅</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>α</mi><mspace linebreak="newline"></mspace><mo>⇒</mo><mi>ρ</mi><mo>=</mo><mfrac><mi>r</mi><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>α</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">r = \rho \cdot cos\alpha \\
\Rightarrow \rho = \frac{r}{cos\alpha}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.63889em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>而对应到整个正三角形，关键就在于边上的点的角度到底位于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>60</mn><mi mathvariant="normal">°</mi><mo separator="true">,</mo><mtext> </mtext><mn>60</mn><mi mathvariant="normal">°</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-60\degree,\ 60\degree]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mord">0</span><span class="mord">°</span><span class="mclose">]</span></span></span></span>区间的哪个位置。显然，只需要<strong>对角度取余</strong>即可。同理，该极坐标方程可以推广到任何正多边形；除此之外，也可以利用正多边形的<ins>外接圆</ins>来确定极坐标方程，精髓就在于确定一个周期内<strong>不变的三角函数关系</strong>即可！</p>
<p>上述极坐标方程只是确定了<strong>正多边形边上的点</strong>，若要得到一个<strong>正多边形区域</strong>，只需要满足到内切圆圆心的距离<strong>小于</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span></span></span></span>即可。</p>
<h4 id="glsl中的实现"><a class="markdownIt-Anchor" href="#glsl中的实现"></a> GLSL中的实现</h4>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据内切圆法得到正多边形的极坐标方程</span></span><br><span class="line"><span class="type">float</span> polygon (<span class="type">float</span> n, <span class="type">float</span> r, <span class="type">vec2</span> p) &#123;</span><br><span class="line">  <span class="type">float</span> per = TWO_PI / n; <span class="comment">// 均分一圈得到的弧度</span></span><br><span class="line">  <span class="type">float</span> x = p.x;</span><br><span class="line">  <span class="type">float</span> y = p.y;</span><br><span class="line">  <span class="type">float</span> radius = <span class="built_in">length</span>(<span class="type">vec2</span>(x, y)); <span class="comment">// 该点距离圆心的距离</span></span><br><span class="line">  <span class="type">float</span> angle = <span class="built_in">atan</span>(y, x); <span class="comment">// 该点相对于圆心的角度</span></span><br><span class="line">  <span class="type">float</span> delta = angle - <span class="built_in">floor</span>(angle / per + <span class="number">0.5</span>) * per; <span class="comment">// 该点处于[-per/2, per/2]区间的位置</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1.0</span> - <span class="built_in">smoothstep</span>(r, r * <span class="number">1.01</span>, radius * <span class="built_in">cos</span>(delta)); <span class="comment">// 判断 r = ρ * cosα</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述方法可以画出一个<strong>正多边形区域</strong>，且对区域边缘部分进行了光滑处理；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>参数可以看做<strong>内切圆心（即多边形中心位置）到正多边形边上的向量</strong>，而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>参数则是<strong>内切圆的半径</strong>，稍微处理一下就可以当做多边形的边长。</p>
<p>关于使用内切圆来绘制正多边形，可以查看这个<code>demo</code>：<a href="https://codepen.io/xxf1996/full/XWmKmoq">32. Polygon</a>。</p>
<h3 id="极坐标"><a class="markdownIt-Anchor" href="#极坐标"></a> 极坐标</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ρ</mi><mo>=</mo><mi>ρ</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\rho = \rho(\theta)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ρ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span></span></span></span>就是<strong>当前点距离中心点的长度</strong>；而<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>则是<strong>当前点相对于中心点的角度（弧度）</strong>；只要图形边缘满足上述特点即可使用极坐标进行绘制，如最常见的<strong>圆形</strong>，可以使用如下极坐标方程：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ρ</mi><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">\rho = a
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span>是任意常数；</p>
<p>可以通过以下方式来计算某点的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="type">vec2</span> pos = p - center; <span class="comment">// p是当前坐标点，center为图形中心点坐标</span></span><br><span class="line"><span class="type">float</span> len = <span class="built_in">length</span>(); <span class="comment">// 计算长度</span></span><br><span class="line"><span class="type">float</span> angle = <span class="built_in">atan</span>(pos.y, pos.x); <span class="comment">// 计算角度</span></span><br></pre></td></tr></table></figure>
<h3 id="组合图形"><a class="markdownIt-Anchor" href="#组合图形"></a> 组合图形</h3>
<ol>
<li>叠加</li>
<li>扣除</li>
</ol>
<h2 id="图案patterns"><a class="markdownIt-Anchor" href="#图案patterns"></a> 图案（patterns）</h2>
<blockquote>
<p>广义指对某种器物的造型结构、色彩、纹饰进行工艺处理而事先设计的施工方案，制成图样，通称图案。有的器物（如某些木器家具等）除了造型结构，别无装饰纹样，亦属图案范畴（或称立体图案）。狭义则指器物上的装饰纹样和色彩而言。<br><br />
—— <a href="https://baike.baidu.com/item/%E5%9B%BE%E6%A1%88/52183">https://baike.baidu.com/item/图案/52183</a></p>
</blockquote>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200505164742.jpg?imageslim" alt="img" /></p>
<center>几何图案</center>
<h3 id="网格"><a class="markdownIt-Anchor" href="#网格"></a> 网格</h3>
<p>通过将屏幕从水平和垂直方向分成一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>∗</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">n*m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>的网格，其中每个网格单元可以进行图形的独立绘制，得到一个<strong>重复排列</strong>的图案；</p>
<p>假设最初得到的屏幕坐标为标准设备坐标（即坐标范围为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mtext> </mtext><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-1, \ 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>），可以通过<code>fract()</code>方法来进行网格单元的切割：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="type">vec2</span> num = <span class="type">vec2</span>(n, m); <span class="comment">// 水平及竖直方向单元的个数</span></span><br><span class="line">pos *= num; <span class="comment">// 放大坐标</span></span><br><span class="line">pos = <span class="built_in">fract</span>(pos); <span class="comment">// 得到网格中的独立坐标</span></span><br></pre></td></tr></table></figure>
<p>通过上述方法可以将坐标分成<code>n * m</code>个网格，其中每个网格内的坐标都是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mtext> </mtext><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0, \ 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>之间；然后对每个单元格进行相同的图形绘制，就可以得到重复填充的图案。可以查看这个根据网格进行重复填充的<code>demo</code>：<a href="https://codepen.io/xxf1996/full/vYNWPpb">35. Pattern Test</a></p>
<p>不仅如此，还可以进一步获取每个单元格<strong>位于水平和竖直方向上的索引</strong>，然后进行<strong>偏移</strong>或其它操作，得到更加丰富的填充效果；</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://thebookofshaders.com/09/?lan=ch">The Book of Shaders: Patterns</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>GLSL</tag>
        <tag>计算机图形</tag>
        <tag>webGL</tag>
      </tags>
  </entry>
  <entry>
    <title>前端小团队应该建设哪些基础设施？</title>
    <url>/post/small-team-infrastructure/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>我为什么会思考这个问题？这得从一篇演讲稿说起：</p>
<p><a href="https://zhuanlan.zhihu.com/p/148210793">前端搞基建|堂主 - 如何推动前端团队的基础设施建设 - 知乎</a></p>
<p>上文最初大概是在<code>2020</code>年<code>4、5</code>月份的时候看到的（当时还是在语雀上，不过现在链接已经失效，好在知乎上面还找得到），作者在上述演讲稿中详尽地介绍了其团队在一年多的时间内如何从零到一构建了庞大的前端基础设施体系，以及这些基础设施到底起到了多大的作用；整篇演讲稿看完真是令人恍然大悟，原来前端可以如此高效以及成体系，看完后我真是对该团队拥有的前端基础设施垂涎三尺，然后臆想了一下在如此高效的前端体系中工作应该是一件很幸福的事情。</p>
<p>不过，考虑到文中这种庞大的、成熟的前端基础设施是建立在庞大的前端团队以及超多的前端业务场景的积累下建设而成的，那么小团队怎么办？</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210109171646.png?imageslim" alt="img" /></p>
<p>于是很自然地我就想到了这个问题，也在一直试图寻找这个问题的答案；在经过<code>2020</code>年内大半年的在团队内部的基建实践（比较初级）后，我想<font color=#39f>也许是时候回答和整理这个问题的思路了</font>。</p>
<span id="more"></span>
<h2 id="小团队的现实问题"><a class="markdownIt-Anchor" href="#小团队的现实问题"></a> 小团队的现实问题</h2>
<p>考虑到现实，毕竟大多数前端团队不像大厂那样有丰富的团队人员配置，大多数还是很小的团队，小团队在实施基建时就不可避免的遇到<strong>很现实的阻力</strong>：</p>
<ul>
<li>最大的阻力应该就是受限于团队规模小，无法投入较多精力处理<font color=#f00>作用于直接业务</font>以外的事情</li>
<li>其次应该是团队内部对于基建的必要性和积极性认识不够（够用就行的思想）</li>
</ul>
<h2 id="小团队基建的必要性"><a class="markdownIt-Anchor" href="#小团队基建的必要性"></a> 小团队基建的必要性</h2>
<p>综合上面的现实问题，是否就可以认为前端基建就是大厂/大团队的专属权利和义务呢？毕竟看起来有点无法下手和吃力不讨好的样子；</p>
<p>在我看来，所谓的基建就是一切可以提升<font color=#f00>编码效率、团队协作效率及业务鲁棒性</font>的<strong>工具和方法</strong>的集合；只要是项目还在迭代、扩展，就不可避免地遇到新的问题以及效率瓶颈，更不用说很多项目内的业务痛点；目前很多的项目内问题解决路径就是：<strong>直到问题出现才会去解决问题</strong>（甚至是到问题严重的时候才会去解决问题）；</p>
<blockquote>
<p>这就是基建最核心的价值：帮助业务更好的活在未来。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>我很认同上面这句话，基建不仅可以帮助提升当下的效率，还可以避免一些问题的出现，以便业务更好地可持续发展；</p>
<h2 id="小团队应该建设哪些基础设施"><a class="markdownIt-Anchor" href="#小团队应该建设哪些基础设施"></a> 小团队应该建设哪些基础设施？</h2>
<p>考虑到基建的必要性和小团队的现实问题，我给出的答案是：</p>
<ul>
<li><strong>优先级</strong>：优先发展<strong>投入产出比</strong>大的地方</li>
<li><strong>范围</strong>：着眼于自身业务沉淀及业务需求</li>
<li><strong>自动化程度</strong>：量力而行，不要一开始就追求大团队所拥有的成体系的自动化前端基建，推荐“<strong>局部研发链路的自动化</strong>”</li>
</ul>
<blockquote>
<p>在设计工具的相关交流中，我们还发现了有的团队开始把交互相关的功能也做了进去，例如将页面跳转，后端处理流程逻辑等进行了可视化编辑，自动生成相应的接口和流程代码。这种探索可以概括成：“<font color=#f00>局部研发链路的自动化</font>”。它是一个初期提效很有用的方法。在对外交流中我们发现了两点有用的建议：</p>
</blockquote>
<blockquote>
<p>一是任何团队都可以并且也都应该做，不必觉得自己团队研发实力不够，等大公司推出相应方案。<font color=#f00>局部自动化的关键其实对自己的业务和人员分工的一种总结和思考。在技术上，当自己的业务相对确定时，通过一些简单的方法就能实现</font>。而大公司要考虑的大而全，不一定适合。在人员组织上，几乎所有的自动化方案都有一定的分工要求，这也是因组织而异的。局部的自动化是之后整体架构变革的关键前提。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
</blockquote>
<h3 id="投入产出比较大的地方"><a class="markdownIt-Anchor" href="#投入产出比较大的地方"></a> 投入产出比较大的地方</h3>
<ul>
<li><strong>规范文档</strong>：个人觉得规范文档应当是<font color=#f00>整个基建中的灵魂</font>，因为<font color=#39f>规范文档可以看做是整个团队的共识</font>，在没有共识的情况下开展基建不免会遇到很多不理解的地方；而且制订相应的规范可以先参考业界常用的，然后再具体讨论内部的细节，花费的时间不需要太多，但是带来的收益绝对是极大的（有效地提升团队协作共识和效率）；</li>
<li><strong>业务（通用）组件</strong>：前端项目随着业务扩展，就会自然地抽象出可以被复用的业务组件，这也是一种业务沉淀；不过个人觉得<font color=#f00>组件的产出流程应该纳入基建中</font>，加以规范和流程化，否则容易造成组件复用率不高、扩展性不强，耦合度过高等问题；</li>
<li><strong>工具函数</strong>：实际上跟业务组件类似，只是组件在前端项目内偏向于视图层，而工具函数就是逻辑层，同样地工具函数的产出流程也应当规范化；</li>
<li><strong>代码检测</strong>：这个实际上是配合代码规范文档进行的<strong>一种辅助手段</strong>，因为口说无凭，规范毕竟不是一种实体性质的东西，实际编码过程中<strong>可能出现不遵守和遗忘代码规范的情况</strong>，如果缺乏一种强制手段来检测规范的执行，那么代码相关的规范约束力就会大打折扣；事实上，如今社区已经存在各种相应成熟的代码检测工具，只需要根据内部约定的规范做一些修改配置就够了；</li>
<li><strong>脚手架</strong>：当公司业务项目之间出现高度的相似时，则可以利用脚手架将之前沉淀的项目配置规范化，完成项目创建流程的规范化，可以满足项目快速创建的目的，且项目初始化工作显著减少还可以复用已经沉淀的一些项目配置；</li>
</ul>
<h2 id="基建实践"><a class="markdownIt-Anchor" href="#基建实践"></a> 基建实践</h2>
<p>说了这么多，那么如何在项目中实施前端基建呢？这里以我在内部的某个项目实践为例：</p>
<ul>
<li>项目背景：<code>APP</code>配套使用的<strong>业务后台</strong>；前期工作是从老项目中迁移（重构），后期加入各种新增模块；</li>
<li>项目特点：模块繁多，某些模块功能相似度很高，表单复杂度较大；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210109171715.png?imageslim" alt="img" /></p>
<p>上图就是我在项目中大概做的一些基建相关实践的概况；</p>
<h3 id="公共组件产出流程"><a class="markdownIt-Anchor" href="#公共组件产出流程"></a> 公共组件产出流程</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210109171741.png?imageslim" alt="img" /></p>
<h3 id="渲染模型dsl"><a class="markdownIt-Anchor" href="#渲染模型dsl"></a> 渲染模型/DSL</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210109171802.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210109171827.png?imageslim" alt="img" /></p>
<h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3>
<ul>
<li><a href="https://note.xiexuefeng.cc/post/multi-branch-common-file/">解决多分支并行开发公共文件维护的几种方案 | snowdream</a></li>
</ul>
<h3 id="基建的效果"><a class="markdownIt-Anchor" href="#基建的效果"></a> 基建的效果</h3>
<ul>
<li>团队协作效率提升，规范性明显增强</li>
<li>通过前期组件/公共的积累和沉淀，后续开发速度明显提升（搭积木式开发）</li>
<li>代码复用率明显提高，减少复制粘贴次数</li>
</ul>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<h3 id="尝试基建可以收获很多"><a class="markdownIt-Anchor" href="#尝试基建可以收获很多"></a> 尝试基建可以收获很多</h3>
<p>在项目中积极实践/推进基建后我才发现，原来尝试基建可以收获到很多东西：</p>
<ul>
<li>对前端项目整体会有更深、更本质的认识，能够找出更多的业务及编码痛点</li>
<li>可以拓展提效的更多思路，接触到更多高效的编码体系及工具</li>
<li>可以加强全局观念，认识到各种架构、解决方案的具体适用场景，然后尝试提出更适用于具体业务场景下的架构及解决方案</li>
</ul>
<p>简言之，积极尝试基建不仅可以对当下项目提效，还能提升自我解决问题的能力；在这不到一年的实践中脑海里已经闪出了各种各样的解决方案，有的是已经应用了，更多的则是还在探索和检验中，<font color=#f00>总之收获了很多灵感</font>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210109171853.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210109171923.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210109171952.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210109172024.png?imageslim" alt="img" /></p>
<ul>
<li><a href="https://note.xiexuefeng.cc/post/a-skeleton-generation-method/">一个可行的全路由骨架屏生成方案 | snowdream</a></li>
</ul>
<h3 id="基建没有终点"><a class="markdownIt-Anchor" href="#基建没有终点"></a> 基建没有终点</h3>
<p>我个人觉得只要是项目还在发展/迭代，基建就没有终点；这一点从大厂的实践来看也是一样的，大厂们正齐步从可视化搭建（半自动化）迈向智能化搭建（全自动化）的探索之路；</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://www.yuque.com/zaotalk/posts/glkg6d">前端搞基建|堂主 - 如何推动前端团队的基础设施建设 · 语雀</a>：已失效</li>
<li><a href="https://zhuanlan.zhihu.com/p/107947462">前端 DSL 实践指南（上）—— 内部 DSL - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/38532183">如何从业务代码中提升技术：使用领域特定语言消除重复代码 - 知乎</a></li>
<li><a href="https://www.yuque.com/zaotalk/posts/oekk3r">前端搞基建|Scott - 如何在人单力薄时立项推动基建 · 语雀</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/148210793">前端搞基建|堂主 - 如何推动前端团队的基础设施建设 - 知乎</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/66474056">长夜未央——企业级研发提效的下一阶段 - 知乎</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>基建</tag>
      </tags>
  </entry>
  <entry>
    <title>svg基本使用</title>
    <url>/post/svg-basic/</url>
    <content><![CDATA[<h2 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h2>
<p>SVG（<code>Scalable Vector Graphics</code>），即可缩放矢量图形，用于描述二维矢量图形；SVG是基于<code>XML</code>制定的，因此遵循<code>XML</code>语法。</p>
<h2 id="坐标系统"><a class="markdownIt-Anchor" href="#坐标系统"></a> 坐标系统</h2>
<p><code>SVG</code>的坐标系统跟<code>canvas</code>以及<code>window</code>的一样，都是以左上角为原点，X轴向右变大，Y轴向下变大；</p>
<span id="more"></span>
<h3 id="视口viewport"><a class="markdownIt-Anchor" href="#视口viewport"></a> 视口（viewPort）</h3>
<p>视口就是指<code>SVG</code>画布所呈现的大小，即实际尺寸；可以通过属性<code>width</code>和<code>height</code>来设置，也可以通过<code>style</code>来设置。默认长度单位为<code>px</code>，其它单位有<code>em,ex,pt,cm,mm,in</code>等。</p>
<h3 id="viewbox"><a class="markdownIt-Anchor" href="#viewbox"></a> viewBox</h3>
<p>viewBox可以理解为设置<code>SVG</code>画布的坐标刻度；<code>viewBox</code>属性有四个参数，分别是x轴刻度最小值，y轴刻度最小值，x轴总长度，y轴总长度。坐标刻度铺满整个画布，并等比例缩放，因此并不总是1：1的比例！</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;-100 -100 500 500&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/180422/g4f0bekC36.png?imageslim" alt="example" /></p>
<p>上例中的<code>SVG</code>画布的视口大小为500x500，而坐标的左上角为（-100，-100），坐标系的总大小为500x500；所以可以理解为画布的右下角坐标为（400，400），左上角坐标为（-100，-100）。</p>
<h2 id="基本形状"><a class="markdownIt-Anchor" href="#基本形状"></a> 基本形状</h2>
<p><code>SVG</code>基本形状有<code>line</code>（线段），<code>polyline</code>（折线段），<code>rect</code>（矩形），<code>polygon</code>（多边形），<code>circle</code>（圆形），<code>ellipse</code>（椭圆）；基本属性如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180422/k6h7D5D9h0.png?imageslim" alt="svg basic graphics" /></p>
<h2 id="坐标系统变换"><a class="markdownIt-Anchor" href="#坐标系统变换"></a> 坐标系统变换</h2>
<p>在<code>SVG</code>中可以对某一图形添加<code>transform</code>属性来实现坐标变换，就类似于<code>CSS3</code>中的<code>transform</code>；基本使用方法如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180422/Dk7LH9JjF1.png?imageslim" alt="svg transform" /></p>
<p><strong><code>SVG</code>中使用的坐标变换原理</strong>：先对当前坐标系进行一系列变换（按变换序列的顺序进行），然后把图形按变换前的坐标位置放到变换后的坐标系中！</p>
<p><strong>矩阵变换参数</strong>：</p>
<p><img src="http://latex.codecogs.com/gif.latex?%5Cbegin%7Bbmatrix%7D%20a%20%26%20b%20%26%20e%20%5C%5C%5B1ex%5D%20c%20%26%20d%20%26%20f%20%5C%5C%5B1ex%5D%200%20%26%200%20%26%201%20%5Cend%7Bbmatrix%7D" alt="matrix" /></p>
<h2 id="路径"><a class="markdownIt-Anchor" href="#路径"></a> 路径</h2>
<p>所有的基本形状指令都是基于<code>path</code>标签来实现的，因此<code>path</code>可谓是<code>SVG</code>的画图指令之精髓。</p>
<p><code>path</code>通过在<code>d</code>属性中使用一系列指令来描绘各种线段或曲线；其中大写的指令使用的是绝对坐标，而小写的坐标使用的是相对坐标（即相对当前点的位移）；具体指令用法如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180422/FAleg69CdB.png?imageslim" alt="svg path" /></p>
<p><font color=red><strong>注</strong></font>：路径命令必须要以<code>M</code>开头，若以<code>m</code>开头也是自动使用绝对坐标！<font color=red><strong>闭合路径</strong></font>使用<code>Z</code>，大小写效果是一样的。</p>
<h3 id="椭圆弧"><a class="markdownIt-Anchor" href="#椭圆弧"></a> 椭圆弧</h3>
<p>椭圆弧绘制由7个参数确定：</p>
<ul>
<li>点所在椭圆的 x 半径和 y 半径。</li>
<li>椭圆的 x 轴旋转角度<code>x-axis-rotation</code>。</li>
<li><code>large-arc-flag</code>，如果需要圆弧的角度小于180度，其为0；如果需要圆弧的角度大于或等于180度，则为1。</li>
<li><code>sweep-flag</code>，如果需要弧以负角度绘制则为 0（逆时针），以正角度绘制则为 1（顺时针）。</li>
<li>终点的 x 坐标和 y 坐标（起点由最后一个绘制的点或者最后一个 <code>moveto</code> 命令确定）。</li>
</ul>
<p><strong>原理</strong>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180422/kH0L2llEGD.png?imageslim" alt="svg path ellipse" /></p>
<h3 id="贝赛尔曲线"><a class="markdownIt-Anchor" href="#贝赛尔曲线"></a> 贝赛尔曲线</h3>
<ol>
<li>
<p><strong>二次贝赛尔曲线</strong>：包括起始点、终点和一个控制点</p>
</li>
<li>
<p><strong>三次贝赛尔曲线</strong>：包括起始点、终点和两个控制点，其中两个控制点分别对应起点和终点！</p>
</li>
</ol>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="http://www.ituring.com.cn/book/1542">《SVG精髓（第2版）》</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>svg</tag>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>svg之渐变填充</title>
    <url>/post/svg-gradient/</url>
    <content><![CDATA[<p>与图案（<code>pattern</code>）一样，渐变也只是专门用来被填充的，所以也需要事先在<code>defs</code>中进行定义。</p>
<p><code>SVG</code>中的渐变分为线性渐变（<code>linearGradient</code>）和径向渐变（<code>radialGradient</code>）两种，从名字就能看出这是两种不同方向的渐变，所以参数也会有所不同。</p>
<h2 id="线性渐变"><a class="markdownIt-Anchor" href="#线性渐变"></a> 线性渐变</h2>
<p>线性渐变由<code>linearGradient</code>标签所定义，线性渐变主要受<strong>直线的方向和渐变点的位置</strong>的影响，也就是沿着直线的方向按照渐变点的颜色设置进行变化。</p>
<h3 id="渐变点"><a class="markdownIt-Anchor" href="#渐变点"></a> 渐变点</h3>
<p>渐变点就是在<code>linearGradient</code>标签内所定义的<code>&lt;stop&gt;</code>元素，该元素有以下的属性：</p>
<ul>
<li>
<p><strong>offset</strong>：偏离位置，范围为0-1（0%-100%）；实际上就是在直线方向（这个方向其实可看作向量方向）上的位置。</p>
</li>
<li>
<p><strong>stop-color</strong>：该渐变点的颜色</p>
</li>
<li>
<p><strong>stop-opacity</strong>：该渐变点的不透明度</p>
<span id="more"></span>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;lg1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#ff3366&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#3366ff&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">rect</span> <span class="attr">x</span>=<span class="string">&quot;50&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#lg1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/180518/267E3HafCm.png?imageslim" alt="mark" /></p>
<p>上面的示例就是在首尾两端（即<code>0%</code>和<code>100%</code>处）各定义了一个不同颜色的渐变点。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;lg1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">stop-color</span>=<span class="string">&quot;#36f&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;1&quot;</span> <span class="attr">offset</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">stop-color</span>=<span class="string">&quot;#36f&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;0.2&quot;</span><span class="attr">offset</span>=<span class="string">&quot;0.618&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">stop-color</span>=<span class="string">&quot;#36f&quot;</span> <span class="attr">stop-opacity</span>=<span class="string">&quot;0&quot;</span> <span class="attr">offset</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/180518/2cIGj3LFGe.png?imageslim" alt="mark" /></p>
<p>而这个示例不仅在首尾两端，还在中间设置了一个渐变点；这里的渐变点颜色都是一致的，只是每个渐变点的不透明度是不相同的。</p>
<h3 id="直线方向"><a class="markdownIt-Anchor" href="#直线方向"></a> 直线方向</h3>
<p>默认情况下的直线方向是从左端的中点<code>(0%, 50%)</code>指向右端的中点<code>(100%, 50%)</code>的。如下图所示：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180518/Llh0C21aJ6.png?imageslim" alt="mark" /></p>
<p>可以通过设置直线的起点<code>(x1,y1)</code>和终点<code>(x2,y2)</code>的位置（<font color=red><strong>这里的单位为比例大小</strong></font>，相对于被填充元素的大小而言）来控制线性渐变的方向：</p>
<ul>
<li>x1：起点的<code>x</code>坐标，范围为0-1（0%-100%）；</li>
<li>y1：起点的<code>y</code>坐标</li>
<li>x2：终点的<code>x</code>坐标</li>
<li>y2：终点的<code>y</code>坐标</li>
</ul>
<p><font color=red><strong>注</strong></font>：这里的单位也可以设置为用户坐标系的单位，通过设置<code>gradientUnits</code>属性即可；默认属性值为<code>objectBoundingBox</code>，设置为<code>userSpaceOnUse</code>即可使用用户坐标系的单位！</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;lg1&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;0&quot;</span> <span class="attr">y1</span>=<span class="string">&quot;0&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;1&quot;</span> <span class="attr">y2</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#ff3366&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#3366ff&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/180518/d9IjmkdmhI.png?imageslim" alt="mark" /></p>
<p>上面的示例当中，把起点设置在<code>(0,0)</code>，终点设置在<code>(1,1)</code>，也就是从左上角到右下角进行渐变。</p>
<h3 id="过渡填充spreadmethod属性"><a class="markdownIt-Anchor" href="#过渡填充spreadmethod属性"></a> 过渡填充：spreadMethod属性</h3>
<p>因为可能出现指定的起始点并没有覆盖被填充元素全部范围的情况，因此没有被定义渐变的区域该如何进行填充就可以通过<code>spreadMethod</code>属性来设置：</p>
<ul>
<li><strong>pad（默认值）</strong>：没有定义渐变的区域直接按照起始点的渐变颜色进行填充，即相当于未定义渐变的区域只有单色填充；</li>
<li><strong>repeat</strong>：即定义渐变的区域会<font color=red><strong>首尾相连</strong></font>（即起始点<code>0%</code>外侧相连的是<code>100%</code>处，反之终点<code>100%</code>的外侧相连的是<code>0%</code>处）的方式对未定义渐变的区域进行填充；</li>
<li><strong>reflect</strong>：镜像填充，即<font color=red><strong>首和首相连，尾和尾相连</strong></font>；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/180518/FI8L3CIA4c.png?imageslim" alt="mark" /></p>
<h2 id="径向渐变"><a class="markdownIt-Anchor" href="#径向渐变"></a> 径向渐变</h2>
<p>径向渐变则是由<code>radialGradient</code>标签进行定义的，径向渐变则受渐变点的位置与焦点的位置所控制。</p>
<h3 id="渐变点-2"><a class="markdownIt-Anchor" href="#渐变点-2"></a> 渐变点</h3>
<p>与线性渐变的渐变点不同的是，径向渐变的渐变点偏移的位置（<code>offset</code>）是相对于从<font color=red><strong>焦点</strong></font>（<code>0%</code>）到<font color=red><strong>最外层的圆弧</strong></font>（<code>100%</code>）之间的。</p>
<ul>
<li>offset：范围依然是0-1（0%-100%）2<sub>x</sub><sup>3</sup></li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">radialGradient</span> <span class="attr">id</span>=<span class="string">&quot;rg1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#ff3366&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#66ff99&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#3366ff&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">radialGradient</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rect</span> <span class="attr">x</span>=<span class="string">&quot;50&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#rg1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/180518/L8geaH8gAj.png?imageslim" alt="mark" /></p>
<p>上例定义了三个渐变点（<code>0%</code>，<code>50%</code>，<code>100%</code>），其中『圆心』、『半径』和『焦点』默认参数为：</p>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:center">默认属性值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">cx</td>
<td style="text-align:center">50%（相对于被填充元素的大小，下同）</td>
</tr>
<tr>
<td style="text-align:center">cy</td>
<td style="text-align:center">50%</td>
</tr>
<tr>
<td style="text-align:center">r</td>
<td style="text-align:center">50%</td>
</tr>
<tr>
<td style="text-align:center">fx</td>
<td style="text-align:center">与<code>cx</code>相同（注意并非指的是<code>50%</code>，而是跟<code>cx</code>的设置值相同！）</td>
</tr>
<tr>
<td style="text-align:center">fy</td>
<td style="text-align:center">与<code>cy</code>相同</td>
</tr>
</tbody>
</table>
<p>因此，默认情况下，『圆心』在元素正中心<code>(50%,50%)</code>，而『焦点』就在『圆心』处，『半径』为元素长宽的一半；也就是说，默认情况下<code>0%</code>处就在『圆心』，而最外层的圆弧即为元素边框的内切圆：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180518/0E2JlCLdEl.png?imageslim" alt="mark" /></p>
<h3 id="径向设置圆心-半径和焦点"><a class="markdownIt-Anchor" href="#径向设置圆心-半径和焦点"></a> 径向设置：『圆心』、『半径』和『焦点』</h3>
<p>不像线性渐变那样直接通过起始点的方向来控制渐变的方向，径向渐变是通过<font color=#36f><strong>焦点到最外层圆弧的方向</strong></font>来控制渐变的方向，<ins>这就是所谓的『径向』</ins>。在这里，『圆心』的作用就是和『半径』一起定义最外层圆弧位置的；当『焦点』使用默认值时，实际上就是由『圆心』向『最外层圆弧』进行渐变的。但是如果『焦点』改变时，比如下面这个：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">radialGradient</span> <span class="attr">id</span>=<span class="string">&quot;rg1&quot;</span> <span class="attr">cx</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cy</span>=<span class="string">&quot;0&quot;</span> <span class="attr">r</span>=<span class="string">&quot;1&quot;</span> <span class="attr">fx</span>=<span class="string">&quot;0.5&quot;</span> <span class="attr">fy</span>=<span class="string">&quot;0.5&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#ff3366&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#66ff99&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#3366ff&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">radialGradient</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rect</span> <span class="attr">x</span>=<span class="string">&quot;50&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#rg1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/180518/Fk8BjEChkF.png?imageslim" alt="mark" /></p>
<p>『圆心』位置为<code>(0,0)</code>，『半径』为<code>1</code>（也就是元素本身的大小），而『焦点』位置为<code>(0.5,0.5)</code>；所以渐变的方向就是从正中心的『焦点』（蓝色点）指向『最外层圆弧』（黑色圆弧），而『焦点』处为<code>0%</code>，『最外层圆弧』处为<code>100%</code>！而没有改变『焦点』的效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180518/dF081C9KA8.png?imageslim" alt="mark" /></p>
<h3 id="spreadmethod"><a class="markdownIt-Anchor" href="#spreadmethod"></a> spreadMethod</h3>
<p>同线性渐变中的设置！</p>
<h2 id="渐变引用"><a class="markdownIt-Anchor" href="#渐变引用"></a> 渐变引用</h2>
<p>可以在渐变的定义中直接引用已经定义好的<strong>同一类型</strong>的渐变，使用的是<code>xlink:href</code>属性，如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;lg1&quot;</span> <span class="attr">x1</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">x2</span>=<span class="string">&quot;0.8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;0%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#ff3366&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stop</span> <span class="attr">offset</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">stop-color</span>=<span class="string">&quot;#3366ff&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">stop</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">linearGradient</span> <span class="attr">id</span>=<span class="string">&quot;lg2&quot;</span> <span class="attr">xlink:href</span>=<span class="string">&quot;#lg1&quot;</span> <span class="attr">spreadMethod</span>=<span class="string">&quot;repeat&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="http://www.ituring.com.cn/book/1542">《SVG精髓（第2版）》</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>svg</tag>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>svg之图案填充</title>
    <url>/post/svg-pattern/</url>
    <content><![CDATA[<p>在<code>SVG</code>中的图案（<code>pattern</code>），可以理解为<font color=red><strong>通过重复填充某一图形</strong></font>得到的图像。因此被重复填充的那个图形可视为图案的填充单元（<code>tile</code>，直译就是<strong>瓷砖</strong>），最终得到的图案就取决于<font color=#36f><strong>如何在整个图案区域中重复这一填充单元</strong></font>以及<font color=#36f><strong>在分配到的单元格中如何填充这个图形</strong></font>。</p>
<span id="more"></span>
<h2 id="图案的使用"><a class="markdownIt-Anchor" href="#图案的使用"></a> 图案的使用</h2>
<h3 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h3>
<p>需要在<code>defs</code>标签内进行定义，然后必须要使用<code>pattern</code>标签包裹<code>path</code>，这样才算是定义了一个图案，也就是说<code>pattern</code>标签内所包裹的所有<code>path</code>标签组成了填充单元；比如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pattern</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span> <span class="attr">x</span>=<span class="string">&quot;0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;20%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;20%&quot;</span> <span class="attr">patternUnits</span>=<span class="string">&quot;objectBoundingBox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M 0 0 Q 5 20 10 10 T 20 20&quot;</span> <span class="attr">style</span>=<span class="string">&quot;stroke: black; fill: none;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M 0 0 h 20 v 20 h -20 z&quot;</span> <span class="attr">style</span>=<span class="string">&quot;stroke: gray; fill: none;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h3>
<p>使用的时候需要在<code>fill</code>属性中指定图案的路径，可以使用<code>url()</code>来指定；如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">g</span> <span class="attr">id</span>=<span class="string">&quot;pattern1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rect</span> <span class="attr">x</span>=<span class="string">&quot;20&quot;</span> <span class="attr">y</span>=<span class="string">&quot;20&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">style</span>=<span class="string">&quot;fill: url(#t1); stroke: black;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rect</span> <span class="attr">x</span>=<span class="string">&quot;135&quot;</span> <span class="attr">y</span>=<span class="string">&quot;20&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;80&quot;</span> <span class="attr">style</span>=<span class="string">&quot;fill: url(#t1); stroke: black;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rect</span> <span class="attr">x</span>=<span class="string">&quot;220&quot;</span> <span class="attr">y</span>=<span class="string">&quot;20&quot;</span> <span class="attr">width</span>=<span class="string">&quot;150&quot;</span> <span class="attr">height</span>=<span class="string">&quot;130&quot;</span> <span class="attr">style</span>=<span class="string">&quot;fill: url(#t1); stroke: black;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">g</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="图案的设置"><a class="markdownIt-Anchor" href="#图案的设置"></a> 图案的设置</h2>
<h3 id="patternunits"><a class="markdownIt-Anchor" href="#patternunits"></a> patternUnits</h3>
<p><code>patternUnits</code>属性定义了图案是如何分配重复单元格的，需要配合<code>width</code>和<code>height</code>属性来使用。</p>
<table>
<thead>
<tr>
<th style="text-align:center">属性值</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">objectBoundingBox <br>（<strong>默认值</strong>）</td>
<td style="text-align:center">此时单元格的大小<strong>按比例</strong>计算，即被填充的元素大小为<code>100%</code>，单元格的大小由<code>width</code>和<code>height</code>决定，取值为比例；比如当<code>width='0.1'</code>时，代表一个单元格的宽度为元素宽度的<code>10%</code>，<code>height</code>也同理；</td>
</tr>
<tr>
<td style="text-align:center">userSpaceOnUse</td>
<td style="text-align:center">此时单元格的大小<strong>按用户坐标系的单位</strong>计算，并且直接铺放在用户空间（即SVG容器内），只不过铺放的起始位置需要通过<code>x</code>和<code>y</code>属性进行设定；因此在该模式下的图案被使用时实际上与元素的位置相关，就像<font color=red><strong>在固定的图像上截取某一块区域</strong></font>一样！</td>
</tr>
</tbody>
</table>
<h3 id="patterncontentunits"><a class="markdownIt-Anchor" href="#patterncontentunits"></a> patternContentUnits</h3>
<p><code>patternContentUnits</code>属性则是用来定义在一个单元格内如何填充<code>tile</code>，即决定图案内所定义的图形（即<code>path</code>标签）使用的单位是什么。</p>
<table>
<thead>
<tr>
<th style="text-align:center">属性值</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">objectBoundingBox</td>
<td style="text-align:center">此时图形绘制的单位<strong>按比例</strong>来计算，即以<font color=red><strong>被填充的元素大小（而非单元格的大小！）</strong></font>为<code>100%</code>，以此进行推算，因此在该模式下<code>path</code>内的数值需要换算成比例，不然会超出！</td>
</tr>
<tr>
<td style="text-align:center">userSpaceOnUse <br>（<strong>默认值</strong>）</td>
<td style="text-align:center">此时图形绘制<strong>按照用户坐标系的单位</strong>进行计算，并且图形的原点<code>（0,0）</code>位于此单元格的左上角！</td>
</tr>
</tbody>
</table>
<h3 id="举个栗子"><a class="markdownIt-Anchor" href="#举个栗子"></a> 举个栗子</h3>
<h4 id="例1"><a class="markdownIt-Anchor" href="#例1"></a> 例1</h4>
<p>假设使用一个实际大小为<code>20x20</code>的填充单元：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/DDHae38K4F.png?imageslim" alt="tile" /></p>
<p>当<code>patternUnits</code>属性设置为<code>objectBoundingBox</code>，<code>patternContentUnits</code>属性设置为<code>userSpaceOnUse</code>，<code>width</code>为<code>0.2</code>，<code>height</code>为<code>0.2</code>时，对元素进行填充的效果为：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pattern</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span> <span class="attr">x</span>=<span class="string">&quot;0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">height</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">patternUnits</span>=<span class="string">&quot;objectBoundingBox&quot;</span> <span class="attr">patternContentUnits</span>=<span class="string">&quot;uesrSpaceOnUse&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M 0 0 Q 5 20 10 10 T 20 20&quot;</span> <span class="attr">style</span>=<span class="string">&quot;stroke: black; fill: none;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M 0 0 h 20 v 20 h -20 z&quot;</span> <span class="attr">style</span>=<span class="string">&quot;stroke: gray; fill: none;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rect</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">x</span>=<span class="string">&quot;50&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#t1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/iFm6fDK80L.png?imageslim" alt="example1" /></p>
<p><font color=#36f><strong>分析</strong></font>：由于<code>patternUnits</code>属性设置为<code>objectBoundingBox</code>，所以单元格大小是按照元素的比例进行分配，<code>width</code>和<code>height</code>都为<code>0.2</code>，表明单元格的大小相当于元素大小的<code>20%</code>，而元素大小为<code>100x100</code>，因此得到的单元格大小为<code>20x20</code>，刚好与填充图形的大小一样。而<code>patternContentUnits</code>属性设置为<code>userSpaceOnUse</code>，即表明单元格内使用的单位为用户坐标系的单位（一般默认为<code>px</code>）。</p>
<p>如果将上述中的元素大小改为<code>130x120</code>时，效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/mffi06Lgl1.png?imageslim" alt="mark" /></p>
<p><font color=#36f><strong>分析</strong></font>：同上，分配到的单元格大小为<code>27.5x24</code>，而绘制的图像只有<code>20x20</code>，因此会出现空余的间隔，而不是想象的填满。</p>
<p>如果将上述中的元素大小改为<code>80x70</code>时，效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/hGFchg5106.png?imageslim" alt="mark" /></p>
<p><font color=#36f><strong>分析</strong></font>：同上，分配到的单元格大小为<code>16x14</code>，而绘制的图像大小为<code>20x20</code>，因此单元格的大小不够绘制，在<font color=red><strong>单元格范围外的部分就不会被显示</strong></font>！</p>
<h4 id="例2"><a class="markdownIt-Anchor" href="#例2"></a> 例2</h4>
<p>同样使用上面<code>20x20</code>的填充图形；当<code>patternUnits</code>属性设置为<code>userSpaceOnUse</code>，<code>patternContentUnits</code>属性设置为<code>userSpaceOnUse</code>，<code>width</code>为<code>20</code>，<code>height</code>为<code>20</code>时，<code>x=0</code>，<code>y=0</code>，对元素进行填充的效果为：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/02H94j9EEj.png?imageslim" alt="mark" /></p>
<p><font color=#36f><strong>分析</strong></font>：由于<code>patternUnits</code>属性设置为<code>userSpaceOnUse</code>，所以单元格的分配实际上就放到<code>SVG</code>画布中去了，与元素本身无关了；<code>width</code>和<code>height</code>都为<code>20</code>，所以单元格的大小为<code>20x20</code>，然后设置的<code>x</code>和<code>y</code>都为<code>0</code>，也就是说图案填充的起点为<code>(0,0)</code>；因此实际上就相当于在画布中<code>(0,0)</code>的开始填充大小为<code>20x20</code>的图形，然后元素所在位置<code>(50,50)</code>截取一块大小为元素本身大小<code>100x100</code>的图案作为填充图案！</p>
<p>从画布<code>(0,0)</code>开始填充：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/bfJajb6BA9.png?imageslim" alt="mark" /></p>
<p>然后截取从<code>(50,50)</code>开始截取一块大小为<code>100x100</code>的区域：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/fEDLEkaf4d.png?imageslim" alt="mark" /></p>
<p>如果将<code>width</code>和<code>height</code>改为<code>10x10</code>，其他的都不变，效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/4H10cgGcj8.png?imageslim" alt="mark" /></p>
<p><font color=#36f><strong>分析</strong></font>：同上，由于单元格的大小变成了<code>25x25</code>，所以在单元格内绘制填充单元后还有剩余空间，所以看起来就有间隔了。</p>
<p>如果保持单元格大小为<code>25x25</code>，而<code>x</code>和<code>y</code>的坐标变为<code>(15,15)</code>，效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/5g6E3ce790.png?imageslim" alt="mark" /></p>
<p><font color=#36f><strong>分析</strong></font>：同上，实际上就是图案在画布上的填充起点发生了改变了，变成了下面这样：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/bAffDE19f4.png?imageslim" alt="mark" /></p>
<p>可以看到，<font color=red><strong>填充的方向实际上是由起点向四周进行</strong></font>，而不是只向右和下进行！</p>
<h4 id="例3"><a class="markdownIt-Anchor" href="#例3"></a> 例3</h4>
<p>当<code>patternUnits</code>属性设置为<code> objectBoundingBox</code>，<code>patternContentUnits</code>属性设置为<code> objectBoundingBox</code>，<code>width</code>为<code>0.2</code>，<code>height</code>为<code>0.2</code>时，如果还是使用上面<code>20x20</code>的填充图形；那么对元素进行填充的效果就会变成：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/E6lGhLCG62.png?imageslim" alt="mark" /></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pattern</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">height</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">patternUnits</span>=<span class="string">&quot;objectBoundingBox&quot;</span> <span class="attr">patternContentUnits</span>=<span class="string">&quot;objectBoundingBox&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M 0 0 Q 5 20 10 10 T 20 20&quot;</span> <span class="attr">style</span>=<span class="string">&quot;stroke: black; fill: none;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M 0 0 h 20 v 20 h -20 z&quot;</span> <span class="attr">style</span>=<span class="string">&quot;stroke: gray; fill: none;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span>  <span class="attr">x</span>=<span class="string">&quot;50&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#t1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><font color=#36f><strong>分析</strong></font>：<code>patternUnits</code>为<code> objectBoundingBox</code>，且<code>width</code>和<code>height</code>都为<code>0.2</code>，元素本身大小为<code>100x100</code>，因此单元格大小为<code>20x20</code>；但是问题是<code>patternContentUnits</code>为<code> objectBoundingBox</code>，因此图案内部绘制时的单位为比例，而填充图形内<code>stroke-width</code>为<code>1</code>，也就是说<code>stroke-width</code>的大小<font color=red><strong>实际上为整个元素的大小</strong></font>，因此也就超出了整个单元格！所以需要对填充图形内的<code>path</code>中的单位进行修正，<strong>全部转化为比例</strong>：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pattern</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">height</span>=<span class="string">&quot;0.2&quot;</span> <span class="attr">patternUnits</span>=<span class="string">&quot;objectBoundingBox&quot;</span> <span class="attr">patternContentUnits</span>=<span class="string">&quot;objectBoundingBox&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M 0 0 Q 0.05 0.20 0.1 0.1 T 0.20 0.20&quot;</span> <span class="attr">style</span>=<span class="string">&quot;stroke: black; fill: none;stroke-width: 0.01;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M 0 0 h 0.20 v 0.20 h -0.20 z&quot;</span> <span class="attr">style</span>=<span class="string">&quot;stroke: gray; fill: none;stroke-width: 0.01;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>修正填充图形后的效果为：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/2JEl3k27c0.png?imageslim" alt="mark" /></p>
<p>如果将元素大小改为<code>130x120</code>后，效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/DCdIDidlmF.png?imageslim" alt="mark" /></p>
<p><font color=#36f><strong>分析</strong></font>：同理，单元格大小为<code>27.5x24</code>，但是由于图案内部的填充图形只有<code>0.2</code>的比例大小，而正好与单元格的大小比例一致，因此填充之间没有出现间隙；可以把<code>width</code>和<code>height</code>的大小设置为<code>0.25</code>，此时单元格比例和图案内部的图形的比例不一致，可以看看此时的效果：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/17A8Cg6684.png?imageslim" alt="mark" /></p>
<p>可以看到填充的图案并没有按比例进行，因为图案内部的填充图形本身只用了<code>0.2</code>的比例大小，而<font color=red><strong>这个比例是对于被填充元素的本身大小而言</strong></font>，所以此时填充图形并没有单元格大小那么大！所以就相当于单元格内看起来有空余部分。（P.S：<strong>这里真的很有疑问，为啥不把比例相对于单元格进行设计，而是非得相对于被填充元素本身？难道不是对于单元格进行比例设计会更方便一些吗？！！</strong>）</p>
<h4 id="例4"><a class="markdownIt-Anchor" href="#例4"></a> 例4</h4>
<p>当<code>patternUnits</code>属性设置为<code> userSpaceOnUse</code>，<code>patternContentUnits</code>属性设置为<code> objectBoundingBox</code>，<code>width</code>为<code>20</code>，<code>height</code>为<code>20</code>时，<code>x</code>和<code>y</code>都为0，使用按比例进行修正的填充图形，效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/b1Bbcj6jBE.png?imageslim" alt="mark" /></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">defs</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pattern</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span> <span class="attr">x</span>=<span class="string">&quot;0&quot;</span> <span class="attr">y</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">height</span>=<span class="string">&quot;20&quot;</span> <span class="attr">patternUnits</span>=<span class="string">&quot;userSpaceOnUse&quot;</span> <span class="attr">patternContentUnits</span>=<span class="string">&quot;objectBoundingBox&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M 0 0 Q 0.05 0.20 0.1 0.1 T 0.20 0.20&quot;</span> <span class="attr">style</span>=<span class="string">&quot;stroke: black; fill: none;stroke-width: 0.01;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M 0 0 h 0.20 v 0.20 h -0.20 z&quot;</span> <span class="attr">style</span>=<span class="string">&quot;stroke: gray; fill: none;stroke-width: 0.01;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">defs</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rect</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span>  <span class="attr">x</span>=<span class="string">&quot;50&quot;</span> <span class="attr">y</span>=<span class="string">&quot;50&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;url(#t1)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><font color=#36f><strong>分析</strong></font>：需要注意的是，这里的单元格仍然是在画布上进行排列，但是对于填充图形的绘制则是相当于被填充元素本身的大小按照比例进行的，而图案内部的填充图形比例为<code>0.2</code>，所以只是刚好与单元格的大小相匹配而已！如果把单元格大小设置为<code>25x25</code>，效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/emDdlK2KGG.png?imageslim" alt="mark" /></p>
<p><strong>可以看到单元格分布确实是截取画布上进行排列过的，但是单元格内的填充元素确实是按照被填充元素大小进行比例绘制的</strong>，可以通过两个完全不同大小的元素填充上述的图案进行对比：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180517/6kDDD0k4Bf.png?imageslim" alt="mark" /></p>
<p>如图，填充元素大小为<code>200x200</code>和<code>100x100</code>的单元格分布时是一致的，但是可以明显看到填充的图案不同；填充元素大小为<code>200x200</code>时，由于图案内部的填充图形只占了<code>0.2</code>的比例，所以此时绘制出来后大小则为<code>40x40</code>；同理当填充元素大小为<code>100x100</code>时，绘制出来后的大小为<code>20x20</code>，因此图案完全不同！</p>
<h3 id="例子总结"><a class="markdownIt-Anchor" href="#例子总结"></a> 例子总结</h3>
<ul>
<li>当使用<code>patternContentUnits</code>属性的<code>objectBoundingBox</code>时，尤其<font color=red><strong>需要注意图案绘制时的比例大小是相对于被填充元素本身</strong></font>的！</li>
</ul>
<h2 id="图案的嵌套"><a class="markdownIt-Anchor" href="#图案的嵌套"></a> 图案的嵌套</h2>
<p>一个被定义的图案，可以在其他图案的填充图形中被使用（即在内部的元素中使用<code>fill</code>属性即可），这就是图案的嵌套。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="http://www.ituring.com.cn/book/1542">《SVG精髓（第2版）》</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>svg</tag>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>svg之文本</title>
    <url>/post/svg-text/</url>
    <content><![CDATA[<h2 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h2>
<ul>
<li><strong>字符</strong>：在<code>XML</code>文档中，字符是指带有一个数字值的一个或多个字节，数字值与<code>Unicode</code>标准对应。例如，字母<code>g</code>是<code>Unicode</code>值为<code>103</code>的字符。</li>
<li><strong>符号</strong>：符号（<code>glyph</code>）是指字符的<font color=#39f><strong>视觉呈现</strong></font>。每个字符都可以用很多不同的符号来呈现。</li>
</ul>
<blockquote>
<p>一个符号可能由多个字符构成。一些字体为特定的字母组合（如fl和ff）准备了单独的符号，以使它们更好看，这种特性叫作“连字”（ligature）。有时候，一个字符也可能由几个符号组合而成，比如打印程序可能会组合符号e和重音符号（ˊ）来打印字符é（Unicode 值为 233）。</p>
</blockquote>
<span id="more"></span>
<ul>
<li><strong>字体</strong>：字体是指代表某个<strong>字符集合</strong>的一组符号。</li>
<li><strong>基线</strong>：字体中的所有符号以基线对齐。需要注意的是，<font color=red><strong>中文字体中的基线概念并没有西文字体那么明确</strong></font>。</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/180531/2JgFLIFaJI.png?imageslim" alt="mark" /></p>
<ul>
<li><strong>上坡度</strong>：基线到字体中最高字符顶部的距离称为上坡度（<code>ascent</code>）。</li>
<li><strong>下坡度</strong>：基线到最深字符底部的距离称为下坡度（<code>descent</code>）。</li>
<li><strong>em高度</strong>：字符的总高度为上坡度和下坡度之和，也称为em高度。</li>
<li><strong>em box</strong>：指宽度为em高度的方块。</li>
<li><strong>大写字母高度</strong>：大写字母高度（<code>cap-height</code>）是指基线上的大写字母的高度。</li>
<li><strong>x高度</strong>：指基线到小写字母<code>x</code>顶部的高度。<strong>x 高度通常能比em高度更好地衡量一个字体的尺寸和可读性</strong>。</li>
</ul>
<h2 id="属性设置"><a class="markdownIt-Anchor" href="#属性设置"></a> 属性设置</h2>
<h3 id="基本属性"><a class="markdownIt-Anchor" href="#基本属性"></a> 基本属性</h3>
<p><code>svg</code>字体的基本属性与<code>css</code>的属性基本一致：</p>
<ul>
<li>font-family：</li>
<li>font-size：</li>
<li>font-weight：</li>
<li>font-style：</li>
<li>text-decoration：</li>
<li>word-spacing：</li>
<li>letter-spacing：</li>
</ul>
<h3 id="文本方向"><a class="markdownIt-Anchor" href="#文本方向"></a> 文本方向</h3>
<p>可以通过<code>writing-mode</code>属性（<code>css3</code>中也有这个属性）来设置文本排列的方向，如从右往左，从上往下等等；不过在svg中<code>writing-mode</code>属性使用的选项值是按照<code>IE</code>的规则：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">-ms-<span class="attribute">writing-mode</span>: lr-tb | rl-tb | tb-rl | bt-rl | tb-lr | bt-lr | lr-bt | rl-bt | lr | rl | tb</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/180531/k7DKGDJdd5.png?imageslim" alt="mark" /></p>
<p>不过在实际使用中这些属性值貌似不是每一个都被支持，只有<code>tb</code>（<code>top to bottom</code>，纵向排列）是被支持的：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180531/AmmD7e2JGA.png?imageslim" alt="mark" /></p>
<h3 id="文本对齐"><a class="markdownIt-Anchor" href="#文本对齐"></a> 文本对齐</h3>
<p>可以通过设置<code>&lt;text&gt;</code>元素的<code>x</code>，<code>y</code>属性来确定文本的起点位置，而根据不同的对齐方式，字体符号所呈现的方式有所不同；可以通过<code>text-anchor</code>属性来设置文本与起点坐标的关系，<code>text-anchor</code>属性有以下几个选项：</p>
<ul>
<li><strong>start（默认值）</strong>：以文本从左往右排列为例，<code>x</code>表示该文本第一个符号的<code>em box</code>的左侧位置，而<code>y</code>表示基线位置；</li>
<li><strong>middle</strong>：同理，<code>x</code>表示该文本的水平中点位置，而<code>y</code>表示基线位置；</li>
<li><strong>end</strong>：<code>x</code>表示该文本最后一个符号的<code>em box</code>的右侧位置，而<code>y</code>表示基线位置；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/180531/ALmfED4kAH.png?imageslim" alt="mark" /></p>
<h3 id="文本路径"><a class="markdownIt-Anchor" href="#文本路径"></a> 文本路径</h3>
<p>通过在<code>&lt;text&gt;</code>元素内使用<code>&lt;textPath&gt;</code>元素可以为文字指定一条<code>path</code>，并按照<code>path</code>的形状进行文字排列；使用方法如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M100 200h150 v100&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pathID&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span><span class="tag">&lt;<span class="name">textPath</span> <span class="attr">xlink:href</span>=<span class="string">&quot;#pathID&quot;</span>&gt;</span>一段文字<span class="tag">&lt;/<span class="name">textPath</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这样<code>textPath</code>内包含的文字就会按照所指定的<code>#pathID</code>路径进行排列，这里既可以指定定义在<code>&lt;defs&gt;</code>内的路径，也可以是实际出现过的路径；<font color=red><strong>需要注意的是只能是<code>&lt;path&gt;</code>元素所定义的路径，像诸如<code>&lt;rect&gt;</code>这样的基本形状是不能被指定为路径的</strong></font>！</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180531/5DaGeeH1dh.png?imageslim" alt="mark" /></p>
<h3 id="文本长度"><a class="markdownIt-Anchor" href="#文本长度"></a> 文本长度</h3>
<p>在<code>&lt;text&gt;</code>元素内文本并不会由于超过某一长度就会自动换行，也无法事先知道文本的终点在哪，但是可以通过<code>textLength</code>来控制文字的总长度（若文字原长度超过总长度也会被『压缩』在总长度内），并通过<code>lengthAdjust</code>属性来设置文本符号之间的间距和符号自身的大小；<code>lengthAdjust</code>属性有以下选项：</p>
<ul>
<li>
<p><strong>spacing（默认值）</strong>：只调整符号之间的间距，而不会改变符号本身的尺寸大小；因此当设置的<code>textLength</code>小于文本原有长度时，字符的间距为『负』，也就是会被挤压重叠到一块：</p>
</li>
<li>
<p><strong>spacingAndGlyphs</strong>：间距和符号本身的大小一起调整，按比例缩放。</p>
</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/180531/B3i6GH6D48.png?imageslim" alt="mark" /></p>
<h3 id="tspan元素"><a class="markdownIt-Anchor" href="#tspan元素"></a> tspan元素</h3>
<p><code>&lt;tspan&gt;</code>元素有点类似<code>html</code>中的行内元素<code>&lt;span&gt;</code>，可以用来对<code>&lt;text&gt;</code>内的一段文本进行单独调整；除了基本的文字样式之外，<code>&lt;tspan&gt;</code>元素还可以调整文本的位置和变形。</p>
<h4 id="位置调整"><a class="markdownIt-Anchor" href="#位置调整"></a> 位置调整</h4>
<ul>
<li><strong>x，y</strong>：指定绝对位置坐标；</li>
<li><strong>dx，dy</strong>：指定相对位置坐标；</li>
</ul>
<p>需要注意的是，<font color=red><strong>设置以上属性会影响该<code>&lt;tspan&gt;</code>后面的文本</strong></font>！</p>
<ul>
<li><strong>baseline-shift</strong>：调整文本符号的<font color=#36f><strong>基线位置</strong></font>，可以是一个长度值，也可以是<code>super</code>（上标）和<code>sub</code>（下标）；该属性只会对<code>&lt;tspan&gt;</code>内产生作用！</li>
</ul>
<h4 id="变形"><a class="markdownIt-Anchor" href="#变形"></a> 变形</h4>
<ul>
<li><strong>rotate</strong>：对<code>&lt;tspan&gt;</code>内的每个文本符号进行旋转（单独地？），单位为<strong>度数</strong>。</li>
</ul>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="http://www.zhangxinxu.com/wordpress/2016/04/css-writing-mode/">改变CSS世界纵横规则的writing-mode属性 « 张鑫旭-鑫空间-鑫生活</a></li>
<li><a href="http://www.ituring.com.cn/book/1542">《SVG精髓（第2版）》</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>svg</tag>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>将swagger文档模型转换为相应的TS声明</title>
    <url>/post/swagger-to-ts/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>每次看到后端发布的<code>swagger</code>文档，然后根据相关接口的响应体模型去编写对应的<code>TS</code>类型时，我就不禁在想，为何不能自动根据<code>swagger</code>文档模型来生成相应的<code>TS</code>声明呢？这不，网上一查资料果然已经有人造起了轮子，直接开干。</p>
<span id="more"></span>
<h2 id="方法一swagger-to-ts"><a class="markdownIt-Anchor" href="#方法一swagger-to-ts"></a> 方法一：swagger-to-ts</h2>
<p>可以使用插件<a href="https://github.com/manifoldco/swagger-to-ts">swagger-to-ts</a>直接利用命令转换；该插件支持从<code>swagger</code>生成的<code>yaml</code>或<code>json</code>配置进行转换，而且支持直接拉取网络地址的配置；</p>
<p>安装完<code>npm</code>包后可以直接运行命令进行转换：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npx @manifoldco/swagger-to-ts swagger-url -o ts-file-path.ts</span><br></pre></td></tr></table></figure>
<ul>
<li><code>swagger-url</code>：<code>swagger</code>文档配置网络地址或本地配置路径</li>
<li><code>ts-file-path.ts</code>：转换后的<code>TS</code>文件路径；</li>
</ul>
<p>而且该插件还会直接使用<code>prettier</code>对生成的<code>TS</code>文件进行美化，且支持指定<code>prettier</code>配置文件；听起来很棒，但实际上有坑，因为利用<code>prettier</code>转换的过程中可能会报错，且貌似无法控制<code>prettier</code>转换的开关……因此如果不符合<code>prettier</code>格式要求，那就生成不了<code>TS</code>文件了；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607171501.png?imageslim" alt="img" /></p>
<h2 id="方法二swagger官方转换器"><a class="markdownIt-Anchor" href="#方法二swagger官方转换器"></a> 方法二：swagger官方转换器</h2>
<p><code>swagger</code>官方有个<a href="http://editor.swagger.io/#/">在线编辑器</a>，这个在线编辑器功能十分强大，不仅能够在线编辑配置并实时预览<code>swagger</code>文档，还支持直接导入已有的配置（支持从网络地址导入）：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607171515.png?imageslim" alt="img" /></p>
<p>导入后就可以进行<code>swagger</code>模型的转换操作，其中就有一种转换方式为<code>typescript-node</code>，导出后是比较通用的<code>TS</code>结构；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607171527.png?imageslim" alt="img" /></p>
<p>导出的<code>TS</code>效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607171538.png?imageslim" alt="img" /></p>
<p>效果还是不错的，复制粘贴改造一下就很完美了，省下很多时间逐一敲代码了。</p>
<h2 id="如何找到swagger配置地址"><a class="markdownIt-Anchor" href="#如何找到swagger配置地址"></a> 如何找到swagger配置地址？</h2>
<p>一般而言，后端通过<code>swagger</code>自动生成文档网站然后部署，直接<strong>打开该网站</strong>，然后查看请求：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607171550.png?imageslim" alt="img" /></p>
<p>一般会有一个请求地址为<code>xxx/swagger-doc</code>的请求，该地址就是获取<code>swagger</code>配置<code>json</code>文件的<code>API</code>地址；根据这个地址就可以直接去官方编辑器进行导入操作了；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200607171600.png?imageslim" alt="img" /></p>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>使用转换工具得到的<code>TS</code>声明跟实际项目中实践的方式可能会有出入，不可避免地需要进行手动调整；如果需要做到一次转换无需修改即可使用，那估计得和后端制定双方遵循的模型规范，还有高度规范化的<code>TS</code>实践方式；</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://stackoverflow.com/questions/48693335/how-to-generate-basic-typescript-interfaces-from-swagger-schema">How to generate basic TypeScript interfaces from Swagger schema? - Stack Overflow</a></li>
<li><a href="https://github.com/manifoldco/swagger-to-ts">GitHub - manifoldco/swagger-to-ts: Generate TypeScript types from Swagger OpenAPI specs</a>：<code>npm</code>包，支持命令行转换</li>
<li><a href="http://editor.swagger.io/#/">Swagger Editor</a>：官方插件，支持转换为各种格式</li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>TS</tag>
      </tags>
  </entry>
  <entry>
    <title>如何实现歌词同步显示</title>
    <url>/post/sync-lyric/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>最近在做一个仿网易云音乐的<code>web app</code>，其中需要全屏显示同步歌词，然后查了些资料；歌词同步显示最主要的部分就是歌词文件的解析以及随时间轴同步滚动显示。</p>
<span id="more"></span>
<h2 id="解析歌词文件"><a class="markdownIt-Anchor" href="#解析歌词文件"></a> 解析歌词文件</h2>
<h3 id="歌词文件"><a class="markdownIt-Anchor" href="#歌词文件"></a> 歌词文件</h3>
<p>目前最流行的歌词文件就是<code>.lrc</code>形式的，每一行对应一句歌词信息，文本格式有两种：</p>
<p>①</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mm:ss.ms] lyric content</span><br></pre></td></tr></table></figure>
<p>②</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mm:ss.ms][mm:ss.ms] lyric content</span><br></pre></td></tr></table></figure>
<p>其中第一种格式代表该句歌词以及其对应的时间轴起点，而第二种格式则是该句歌词对应多个时间轴的起点；</p>
<h3 id="解析方法"><a class="markdownIt-Anchor" href="#解析方法"></a> 解析方法</h3>
<p>根据<code>.lrc</code>文件格式的特性，可以按照如下步骤进行解析：</p>
<ol>
<li>按行拆分文本，逐行解析；</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = lyric.<span class="title function_">split</span>(<span class="string">&#x27;\n&#x27;</span>) <span class="comment">// lyric为.lrc歌词文本</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>使用正则表达式对每行歌词进行分析匹配；若只有一个时间轴起点则添加一个歌词信息，有多个时间轴起点则添加相应数量的歌词信息；</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">/\]\[<span class="regexp">/.test(line) /</span>/ 判断某行歌词是否有多个时间轴起点</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>歌词信息结构如下：</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">lyricInfo = &#123;</span><br><span class="line">    <span class="attr">time</span>: xx.<span class="property">yy</span>, <span class="comment">// （某行）歌词的时间轴起点，单位为秒</span></span><br><span class="line">    <span class="attr">content</span>: <span class="string">&#x27;str&#x27;</span> <span class="comment">// （某行）歌词内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="歌词同步显示"><a class="markdownIt-Anchor" href="#歌词同步显示"></a> 歌词同步显示</h2>
<p>要想使歌词随当前播放的进度同步显示，首先要知道当前歌曲播放的进度，以及在播放进度更新时找到对应时间段的歌词。</p>
<h3 id="timeupdate事件"><a class="markdownIt-Anchor" href="#timeupdate事件"></a> timeupdate事件</h3>
<p>可以利用<code>WebAudio API</code>中的<code>timeupdate</code>事件来监听<code>audio</code>元素，该事件在<code>audio</code>元素的<code>currentTime</code>属性改变时触发，而<code>currentTime</code>属性即当前播放的进度，单位为秒；因此可以在<code>timeupdate</code>事件中查找当前进度对应的歌词信息进行同步显示。</p>
<h3 id="查找对应歌词"><a class="markdownIt-Anchor" href="#查找对应歌词"></a> 查找对应歌词</h3>
<ol>
<li>将歌词信息数组按照时间顺序（升序）进行排列；</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">lyricArr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.<span class="property">time</span> - b.<span class="property">time</span>)</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>根据当前播放时间（<code>currentTime</code>属性值），利用<font color=red><strong>二分法</strong></font>（有序查找）在歌词信息数组查找<font color=red><strong>不大于当前播放时间且差值最小</strong></font>的时间轴起点，该时间轴对应的歌词即当前播放的歌词。</li>
</ol>
<h3 id="垂直居中显示"><a class="markdownIt-Anchor" href="#垂直居中显示"></a> 垂直居中显示</h3>
<p>一般音乐<code>app</code>的全屏歌词都是可以上下滚动，且当前播放歌词<strong>高亮垂直居中显示</strong>，歌词切换时有滚动过渡效果（也许是跳到了下一句，也许是歌曲进度人为改变时）；</p>
<p>高亮只需要给当前播放歌词那一行加个类就可以了，主要是高亮的歌词需要垂直居中（在上下可以滚动的状态下）显示；我的做法是将每行歌词放入一个滚动容器中，然后在<code>timeupdate</code>事件中获取高亮歌词那一行元素在容器中的<code>offsetTop</code>设置容器的<code>scrollTop</code>，使得当前行正好滚到垂直中间的位置。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20190103114814.png?imageslim" alt="mark" /></p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/Events/Media_events">媒体相关事件 | MDN</a></li>
<li><a href="https://www.cnblogs.com/Wayou/p/sync_lyric_with_html5_audio.html">论HTML5 Audio 标签歌词同步的实现</a></li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>H5</tag>
        <tag>WebAudio</tag>
      </tags>
  </entry>
  <entry>
    <title>探索CSS的本质</title>
    <url>/post/the-nature-of-css/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>CSS</code>，全称为<code>Cascading Style Sheets</code>，用于定制文档样式；<code>CSS</code>使得网页的呈现更加丰富，这也是初学前端的人最感到新奇的地方；</p>
<p>但是随着对<code>CSS</code>的深入使用才会发现：那些被我们津津乐道的“<code>xx</code>属性的奇淫技巧”这类东西都只不过是浮在<code>CSS</code>最表层的现象而已；这种对于<code>CSS</code>的使用方式在我看来无异于“<strong>盲人摸象</strong>”，即<font color=#f00>只能通过观察表面现象来总结使用方法，而不是从本质出发寻找解决方案</font>，因此就可能会陷入永远只能借助表面现象来解决问题的困境。</p>
<span id="more"></span>
<h2 id="关于css的定位"><a class="markdownIt-Anchor" href="#关于css的定位"></a> 关于CSS的定位</h2>
<p>在<a href="https://note.xiexuefeng.cc/post/the-web-browser/">初步了解过浏览器关于网页渲染的机制和原理</a>后，心里有个疑问变得更加突出了，那就是——“<code>CSS</code>在网页渲染中的定位是什么”；我结合了<code>webGL</code>这种单纯的图形渲染<code>API</code>中的图形渲染流程和<code>CSS</code>代码在浏览器中解析后在网页渲染中的作用，得出了一个自己的结论：</p>
<blockquote>
<p>CSS是一个用于结构化描述渲染信息的辅助性DSL。</p>
</blockquote>
<p>得出这么一个结论主要是基于以下理由：</p>
<ul>
<li><strong>结构化描述</strong>：<code>CSS</code>代码可以解析成<code>CSSOM</code>，然后依附于<code>DOM</code>上，这个得益于<code>CSS</code>语法本身就是<font color=#39f>键值对式的对象描述</font>这一特性；</li>
<li><strong>辅助性</strong>：单独的<code>CSS</code>代码并不能绘制出任何有效的图形，它必须结合<code>HTML</code>解析得到的布局、位置等结点信息才能进行绘制；即<code>CSS</code>代码在渲染过程中<font color=#f00>并不充当着骨架的作用</font>，更多地是<font color=#39f>基于骨架赋予更多样的绘制</font>；</li>
<li><strong>DSL</strong>：这个就无需多说了，<code>CSS</code>语言本身就不是一门通用性编程语言，它仅仅是针对网页文档的渲染而已，其作用范围与<code>GLSL/HLSL</code>这类着色器编程语言相比简直就是专一得不能再专一了。</li>
</ul>
<h2 id="css与绘制"><a class="markdownIt-Anchor" href="#css与绘制"></a> CSS与绘制</h2>
<p>既然<code>CSS</code>只是辅助渲染的，那么<code>CSS</code>所携带的样式信息又是如何转化成底层的绘制语句呢？</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001120840.png?imageslim" alt="img" /></p>
<p>这里就需要涉及到更详细的浏览器渲染管线流程了，因为光从上图<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>这种大概的<code>pipeline</code>，我们根本无法理解<code>CSS</code>这种<strong>字符串信息</strong>是<font color=#f00>如何在浏览器内部进行解析然后转换成具体的底层绘制命令</font>的。不过好在<code>Google</code>内部发表了一个<font color=#39f><strong>极为详细的演讲稿</strong></font>来阐述网页中的像素是在经历了一个怎样的<code>pipeline</code>之后才显示的：<a href="https://docs.google.com/presentation/d/1boPxbgNrTU0ddsc144rcXayGA_WF53k96imRH8Mp34Y/edit#slide=id.p">Life of a Pixel</a>（这篇演讲稿当然是极力推荐阅读的）；多亏了这个演讲稿，我终于不用去从<a href="https://github.com/chromium/chromium"><code>Chromium</code>项目源码</a>中去一点点查找<code>CSS</code>渲染的蛛丝马迹了……</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001120942.png?imageslim" alt="img" /></p>
<p>上图是我根据上述演讲<code>PPT</code>和自己的理解所总结的一个渲染<code>pipeline</code>，看似很完整，但是实际上并不是浏览器所有的渲染<code>pipeline</code>，这仅仅是一个初步的流程，后续的优化渲染流程还没涉及；由于后面的优化渲染<code>pipeline</code>和更新渲染<code>pipeline</code>比较复杂，以后再单独研究，<font color=#39f>这里总结的流程权当是一个简单的全量渲染<code>pipeline</code></font>；</p>
<h2 id="模拟css渲染"><a class="markdownIt-Anchor" href="#模拟css渲染"></a> 模拟CSS渲染</h2>
<p>如果真要模拟上述流程图中所有<code>pipeline</code>，即<code>HTMl + CSS → 像素</code>，那真是一个巨大的工程，实在是有心无力；我最感兴趣的部分实际上是光栅化的部分，即<code>Paint Operator → 像素</code>，因此基于<code>webGL</code>对这个光栅化做了一个<strong>最简化模型</strong>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001121004.png?imageslim" alt="img" /></p>
<p>可以看到这个渲染<code>pipeline</code>是十足的简单，<code>IMGUI</code> + 全量式绘制；因为我只想验证所谓的<code>Paint Operator</code>携带的绘制信息到底是如何传入到真正的底层——即着色器内的，我想知道着色器内部是如何消化和理解<code>Paint Operator</code>的；所以上面这个模型只是我个人根据<code>Life of a Pixel</code>一文所想到的一种底层交互模型；</p>
<h3 id="模拟代码"><a class="markdownIt-Anchor" href="#模拟代码"></a> 模拟代码</h3>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">PaintOperator</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/types/css-gl&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; vec2, vec4 &#125; <span class="keyword">from</span> <span class="string">&#x27;gl-matrix&#x27;</span></span><br><span class="line"></span><br><span class="line">(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="variable constant_">CSSGL</span> &#125; = <span class="title class_">WebGLEngine</span> <span class="comment">// WebGLEngine是自己手写的一个webGL渲染库</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">ops</span>: <span class="title class_">PaintOperator</span>[] = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">50</span>).<span class="title function_">fill</span>(<span class="number">0</span>).<span class="title function_">map</span>(<span class="function">(<span class="params">val, idx</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">randomPos</span>: vec2 = [</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable language_">window</span>.<span class="property">innerWidth</span>,</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">const</span> randomSize = vec2.<span class="title function_">create</span>()</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">randomBg</span>: vec4 = [</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">random</span>(),</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">random</span>(),</span><br><span class="line">      <span class="title class_">Math</span>.<span class="title function_">random</span>(),</span><br><span class="line">      <span class="number">1.0</span></span><br><span class="line">    ]</span><br><span class="line">    vec2.<span class="title function_">random</span>(randomSize, <span class="number">200</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">id</span>: idx,</span><br><span class="line">      <span class="attr">shape</span>: &#123;</span><br><span class="line">        <span class="attr">pos</span>: randomPos,</span><br><span class="line">        <span class="attr">size</span>: randomSize</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">flags</span>: &#123;</span><br><span class="line">        <span class="attr">background</span>: randomBg</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;) <span class="comment">// 随机构建50个PaintOperator对象</span></span><br><span class="line">  <span class="keyword">const</span> gl = <span class="keyword">new</span> <span class="title function_">CSSGL</span>(<span class="string">&#x27;test&#x27;</span>, ops) <span class="comment">// 解析PaintOperator数据</span></span><br><span class="line">  gl.<span class="title function_">paint</span>() <span class="comment">// 执行绘制</span></span><br><span class="line">&#125;)()</span><br></pre></td></tr></table></figure>
<p>解析代码就是上面这些，由于底层代码做了抽象，所以大部分代码都是生成<code>PaintOperator</code>对象的；可以看下预设的着色器代码：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">precision</span> <span class="keyword">highp</span> <span class="type">float</span>; <span class="comment">// 高精度</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec2</span> u_Screen; <span class="comment">// 屏幕尺寸</span></span><br><span class="line"><span class="keyword">attribute</span> <span class="type">vec2</span> a_Pos; <span class="comment">// 顶点坐标</span></span><br><span class="line"></span><br><span class="line"><span class="type">vec2</span> widthRange = <span class="type">vec2</span>(<span class="number">0.0</span>, u_Screen.x);</span><br><span class="line"><span class="type">vec2</span> heightRange = <span class="type">vec2</span>(<span class="number">0.0</span>, u_Screen.y);</span><br><span class="line"><span class="type">vec2</span> outputRange = <span class="type">vec2</span>(<span class="number">-1.0</span>, <span class="number">1.0</span>); <span class="comment">// NDC坐标范围为[-1, 1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将一个值从原来的范围等比映射到另一个范围</span></span><br><span class="line"><span class="type">float</span> rangeMap (<span class="type">float</span> source, <span class="type">vec2</span> sourceRange, <span class="type">vec2</span> targetRange) &#123;</span><br><span class="line">  <span class="type">float</span> bais = source / (sourceRange.y - sourceRange.x); <span class="comment">// 在范围长度中的占比</span></span><br><span class="line">  <span class="type">float</span> target = bais * (targetRange.y - targetRange.x) + targetRange.x;</span><br><span class="line">  <span class="keyword">return</span> target;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main() &#123;</span><br><span class="line">  <span class="built_in">gl_Position</span> = <span class="type">vec4</span>(</span><br><span class="line">    rangeMap(a_Pos.x, widthRange, outputRange),</span><br><span class="line">    rangeMap(a_Pos.y, heightRange, outputRange) * <span class="number">-1.0</span>, <span class="comment">// 转换成NDC时y轴需要翻转</span></span><br><span class="line">    <span class="number">0.0</span>,</span><br><span class="line">    <span class="number">1.0</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">precision</span> <span class="keyword">highp</span> <span class="type">float</span>; <span class="comment">// 高精度</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec2</span> u_Screen; <span class="comment">// 屏幕尺寸</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec4</span> u_Background; <span class="comment">// 背景色</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main() &#123;</span><br><span class="line">  <span class="built_in">gl_FragColor</span> = u_Background;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>由于模型本身很简单，因此对应的着色器也很简单；通过着色器代码不难看出，我所理解的底层着色器接收<code>Paint Operator</code>信息就是通过内置的属性来一一对应，是最原始的方式；</p>
<h3 id="关于skia"><a class="markdownIt-Anchor" href="#关于skia"></a> 关于Skia</h3>
<p>上面这个模拟思路其实很简单，所以我也很想去验证这种思路跟具体的<code>Chrome/Chromium</code>底层绘制有啥不同（单纯的感兴趣）；由于<code>Chromium</code>内部几乎所有的图形绘制都交给了<code>Skia</code>图形库，所以只能去<code>Skia</code>源码去查找蛛丝马迹了；</p>
<p>不过看了一圈<a href="https://github.com/google/skia">Skia项目源码</a>之后，我发现<code>Skia</code>项目实在是太高度抽象了，层层嵌套，从着色器代码里面压根找不出蛛丝马迹，因为着色器代码里面的信息看起来都是很抽象/通用的数据，无法直接联系到图元绘制；看来需要较长的时间才能找出我想要的答案，虽然有点遗憾，但是也从<code>Skia</code>本身发现了一些不错的地方：</p>
<ul>
<li>
<p><code>Skia</code>内部设计了一个着色器语言，名为<code>SkSL (Skia Shading Language)</code>；<code>SkSL</code>实际上就是基于某一固定版本的<code>GLSL</code>语法进行设计的，其作用应该是抹去不同<code>GPU</code>驱动<code>API</code>着色器语法的差异，以便对于不同的<code>GPU</code>驱动可以进一步输出为目标着色器语言，因此<code>SkSL</code>可以看做是着色器预编译语言<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001121017.png?imageslim" alt="img" /></p>
</li>
<li>
<p><code>Skia</code>的<code>API</code>风格也很有意思，与<code>Canvas API</code>很相似，看一下<a href="https://fiddle.skia.org/c/@shapes">官网的<code>Demo</code></a>就知道了：</p>
  <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">draw</span><span class="params">(SkCanvas* canvas)</span> </span>&#123;</span><br><span class="line">    canvas-&gt;<span class="built_in">drawColor</span>(SK_ColorWHITE);</span><br><span class="line"></span><br><span class="line">    SkPaint paint;</span><br><span class="line">    paint.<span class="built_in">setStyle</span>(SkPaint::kFill_Style);</span><br><span class="line">    paint.<span class="built_in">setAntiAlias</span>(<span class="literal">true</span>);</span><br><span class="line">    paint.<span class="built_in">setStrokeWidth</span>(<span class="number">4</span>);</span><br><span class="line">    paint.<span class="built_in">setColor</span>(<span class="number">0xff4285F4</span>);</span><br><span class="line"></span><br><span class="line">    SkRect rect = SkRect::<span class="built_in">MakeXYWH</span>(<span class="number">10</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">160</span>);</span><br><span class="line">    canvas-&gt;<span class="built_in">drawRect</span>(rect, paint);</span><br><span class="line"></span><br><span class="line">    SkRRect oval;</span><br><span class="line">    oval.<span class="built_in">setOval</span>(rect);</span><br><span class="line">    oval.<span class="built_in">offset</span>(<span class="number">40</span>, <span class="number">80</span>);</span><br><span class="line">    paint.<span class="built_in">setColor</span>(<span class="number">0xffDB4437</span>);</span><br><span class="line">    canvas-&gt;<span class="built_in">drawRRect</span>(oval, paint);</span><br><span class="line"></span><br><span class="line">    paint.<span class="built_in">setColor</span>(<span class="number">0xff0F9D58</span>);</span><br><span class="line">    canvas-&gt;<span class="built_in">drawCircle</span>(<span class="number">180</span>, <span class="number">50</span>, <span class="number">25</span>, paint);</span><br><span class="line"></span><br><span class="line">    rect.<span class="built_in">offset</span>(<span class="number">80</span>, <span class="number">50</span>);</span><br><span class="line">    paint.<span class="built_in">setColor</span>(<span class="number">0xffF4B400</span>);</span><br><span class="line">    paint.<span class="built_in">setStyle</span>(SkPaint::kStroke_Style);</span><br><span class="line">    canvas-&gt;<span class="built_in">drawRoundRect</span>(rect, <span class="number">10</span>, <span class="number">10</span>, paint);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>熟悉的命令式以及图元绘制命名；</p>
</li>
<li>
<p><code>Skia</code>中有三大基类：<code>SkCanvas</code>、<code>SkBitmap</code>和<code>SkPaint</code><sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>；</p>
<ul>
<li><code>SkCanvas</code>：管理绘制相关的API；</li>
<li><code>SkBitmap</code>：管理bit数据；</li>
<li><code>SkPaint</code>：管理图元绘制风格相关的状态；</li>
</ul>
</li>
</ul>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>事实上，还有很多感兴趣和有疑问的地方没有来得及探究，每一个点都需要时间来找资料和验证；比如一个<code>DOM</code>结点最终到底<font color=#39f>可以分为多少层矩形</font>来进行绘制？<font color=#39f>圆角矩形及渐变色</font>如何在着色器中进行高效的绘制等等，这些都是很有意思的，以后也得找时间研究一下。</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://docs.google.com/document/d/1aitSOucL0VHZa9Z2vbRJSyAIsAz24kX8LFByQ5xQnUg/edit">How Blink works - Google 文档</a>：一个关于<code>Blink</code>渲染引擎的超强概述</li>
<li><a href="https://blog.ihomura.cn/2019/07/29/Web-IDL-%E7%AE%80%E4%BB%8B/">Web IDL 简介 | 澪同学的博客</a></li>
<li><a href="https://www.chromium.org/blink">https://www.chromium.org/blink</a></li>
<li><a href="https://blog.mottomo.moe/categories/Tech/zh/2015-09-17-Goodbye-CSS-Shaders/">再见，CSS Shader (CSS Custom Filter) | 花嫁達の部屋</a>：无意中发现的一个被废弃的规范</li>
<li><a href="https://www.w3.org/Style/CSS/">W3C CSS规范主页</a></li>
<li><a href="https://www.chromium.org/developers/design-documents/graphics-and-skia">https://www.chromium.org/developers/design-documents/graphics-and-skia</a> ：Chromium项目关于Skia使用的概述</li>
<li><a href="https://zhuanlan.zhihu.com/p/37640688">Skia Vulkan Performance - 知乎</a></li>
<li><a href="https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/05%20Shaders/">着色器 - LearnOpenGL-CN</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://docs.google.com/document/d/1aitSOucL0VHZa9Z2vbRJSyAIsAz24kX8LFByQ5xQnUg/edit#heading=h.5bi68m3d1uqo">https://docs.google.com/document/d/1aitSOucL0VHZa9Z2vbRJSyAIsAz24kX8LFByQ5xQnUg/edit#heading=h.5bi68m3d1uqo</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://github.com/google/skia/blob/master/src/sksl/README">https://github.com/google/skia/blob/master/src/sksl/README</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://www.chromium.org/developers/design-documents/graphics-and-skia">https://www.chromium.org/developers/design-documents/graphics-and-skia</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>计算机图形</tag>
        <tag>css</tag>
        <tag>webGL</tag>
      </tags>
  </entry>
  <entry>
    <title>了解浏览器的本质</title>
    <url>/post/the-web-browser/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>作为一个<code>FE</code>，每天都会和浏览器打交道，写的代码最终也会在各种各样的浏览器中进行呈现；那么浏览器到底是什么？它是如何理解我们的代码并渲染得到我们所看到的画面的？</p>
<blockquote>
<p>“私、気になります”</p>
</blockquote>
<p>浏览器，简单地来说就是一个应用程序，只不过这个应用程序比较特殊，是专门用于从万维网中获取资源的；而网页就是其中一种最常见的资源。</p>
<blockquote>
<p>A web browser is a software application for retrieving, presenting and traversing information resources on the World Wide Web. <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p><code>注</code>：以下探讨的是现代浏览器（<code>Modern Browser</code>），不包括<code>IE</code>这种；</p>
<span id="more"></span>
<h2 id="浏览器的运行原理"><a class="markdownIt-Anchor" href="#浏览器的运行原理"></a> 浏览器的运行原理</h2>
<p>既然浏览器就是一种应用程序，那么其势必运行在操作系统上（当然，也有人提出直接将浏览器作为一种操作系统，比如：<code>Chrome OS</code>）；因此浏览器中执行的任务最终都要依靠操作系统提供的<code>API</code>，从而与相应的硬件进行交互；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200912111636.png?imageslim" alt="img" /></p>
<h2 id="浏览器的架构"><a class="markdownIt-Anchor" href="#浏览器的架构"></a> 浏览器的架构</h2>
<h3 id="架构方式"><a class="markdownIt-Anchor" href="#架构方式"></a> 架构方式</h3>
<p>根据对进程的使用方式不同，浏览器的架构可以分为单进程和多进程，比如<code>Chrome</code>浏览器就是采用多进程架构；</p>
<h3 id="进程线程组成"><a class="markdownIt-Anchor" href="#进程线程组成"></a> 进程/线程组成</h3>
<p>浏览器算是一个比较庞大的应用程序，因此其内部实际上也会按功能拆分成很多个模块，每个模块专门负责一类特定的任务；在<code>Chrome</code>浏览器中，首先将主要的功能拆分成不同的进程，然后进程下面可能会有多个不同的线程来继续细分任务，主要的进程有：</p>
<ul>
<li>浏览器进程（<code>Browser Process</code>）：用于控制浏览器这个应用本身，包括浏览器的导航栏及书签等等；还用于<font color=#39f>承担调度各个其他进程之间的通信</font>；</li>
<li>渲染进程（<code>Render Process</code>）：用于渲染一个标签内的网页内容；</li>
<li><code>GPU</code>进程（<code>GPU Process</code>）：用于处理<code>GPU</code>相关任务；</li>
<li>插件进程（<code>Plugin Process</code>）：控制网页内的插件；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200912111700.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200912111723.png?imageslim" alt="img" /></p>
<p>上面的图<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>是<code>google</code>官方博客给出的<code>Chrome</code>浏览器架构设计以及各进程作用的说明图；可以看到其中渲染进程可以存在多个，这是由于<code>Chrome</code>给<font color=#f00>每个标签页都单独开设了一个渲染进程</font>，但是由于内存有上限，因此开启的渲染进程数量会存在一个上限，这个上限取决于运行系统的硬件条件；</p>
<p>使用多进程来进行渲染的好处就是当<font color=#39f>其中一个渲染进程崩溃后不会影响到其他进程</font>，但是相应的坏处就是很占内存……（这下终于明白<code>Chrome</code>占内存的原因了）</p>
<p>除此之外，<code>Chrome</code>用了一种技术来动态改变架构以适应不同的硬件情况；当硬件比较好的时候，<code>Chrome</code>会尽可能地将很多线程独立出来作为进程，那么硬件比较差的时候则相反，会将一些进程合并到其他进程之中：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200912111748.png?imageslim" alt="img" /></p>
<p>关于浏览器的架构大致就了解这么一些，关于更多的架构细节可以查看<code>Google</code>的系列博客文章：</p>
<ul>
<li><a href="https://developers.google.com/web/updates/2018/09/inside-browser-part1">https://developers.google.com/web/updates/2018/09/inside-browser-part1</a></li>
<li><a href="https://developers.google.com/web/updates/2018/09/inside-browser-part2">https://developers.google.com/web/updates/2018/09/inside-browser-part2</a></li>
<li><a href="https://developers.google.com/web/updates/2018/09/inside-browser-part3">https://developers.google.com/web/updates/2018/09/inside-browser-part3</a></li>
<li><a href="https://developers.google.com/web/updates/2018/09/inside-browser-part4">https://developers.google.com/web/updates/2018/09/inside-browser-part4</a></li>
</ul>
<h2 id="浏览器是如何理解前端代码的"><a class="markdownIt-Anchor" href="#浏览器是如何理解前端代码的"></a> 浏览器是如何理解前端代码的？</h2>
<p>众所周知，运行在浏览器中的前端代码只有三类：<code>html</code>，<code>css</code>和<code>js</code>；<code>html</code>用于定义网页结构，<code>css</code>用于设置样式和布局，而<code>js</code>则作为脚本用来动态改变<code>html</code>和<code>css</code>以及交互行为；虽然这三者分工不同，但最终输入浏览器后得到的输出大多是网页画面（还有可能是<code>I/O</code>，多媒体，网络等底层交互），即<font color=#f00>渲染</font>，因此理解这三种代码是如何影响浏览器渲染结果是十分必要的。</p>
<h3 id="浏览器网页渲染机制"><a class="markdownIt-Anchor" href="#浏览器网页渲染机制"></a> 浏览器网页渲染机制</h3>
<p>关于经典的<strong>从输入网址到网页渲染</strong>这一流程就不再赘述（上面提到的系列博客文章有比各网站流行的更详细的讲解，详细到线程级交互……），这里着重关注<font color=#39f>浏览器如何解析前端代码并输出像素到显存中</font>的；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200912111803.png?imageslim" alt="img" /></p>
<p>上面就是<code>html + css</code>代码输出像素到屏幕的一个大致流程，可以看到代码在浏览器中从文本变成屏幕中的像素是一个十分复杂的流程，里面每个流程单独拿出来讲估计都是充满了很多复杂的处理细节；从这个层面上来讲基于<code>HTML</code>和<code>CSS</code>的渲染是一套高度抽象但又很成熟的流程。</p>
<h4 id="dom-tree"><a class="markdownIt-Anchor" href="#dom-tree"></a> DOM Tree</h4>
<p>这个术语大概都不会陌生，或多或少都有听说过；<code>DOM</code>是一个对<code>HTML/XML</code>文档的结构化描述及交互规范，因此它<font color=#f00>本身并不是与特定化编程语言强绑定</font>的，但是现实中很多人都将<code>DOM</code>视为<code>JS</code>中的一部分，这是一个<font color=#f00>很大的认知误区</font>；不过这也是无法避免的，因为目前浏览器使用的脚本语言就是<code>JS</code>，因此浏览器内置的<code>DOM</code>也就是基于<code>JS</code>的实现；</p>
<p>理论上一个编程语言只要可以实现<code>OOP</code>，其也就具备实现<code>DOM</code>的能力，因此<code>DOM</code><font color=#39f>可以在多种编程语言中进行实现</font>，比如<code>MDN</code>上就举了<code>python</code>实现<code>DOM</code>的例子<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Python DOM example</span></span><br><span class="line"><span class="keyword">import</span> xml.dom.minidom <span class="keyword">as</span> m</span><br><span class="line">doc = m.parse(<span class="string">&quot;C:\\Projects\\Py\\chap1.xml&quot;</span>);</span><br><span class="line">doc.nodeName <span class="comment"># DOM property of document object;</span></span><br><span class="line">p_list = doc.getElementsByTagName(<span class="string">&quot;para&quot;</span>);</span><br></pre></td></tr></table></figure>
<p><code>DOM</code>用于描述<code>HTML</code>中的结点，因此整个<code>HTML</code>解析得到的结构化描述就是一个<code>DOM</code>树；但是<code>DOM</code>树中会<font color=#f00>过滤</font>掉<strong>伪元素</strong>结点；</p>
<h4 id="computed-style"><a class="markdownIt-Anchor" href="#computed-style"></a> computed style</h4>
<p><code>computed style</code>即计算样式，所谓计算样式就是根据<code>DOM</code>结点本身以及<code>CSS</code>样式选择器匹配到的样式所得到的关于当前结点所有的<code>CSS</code>样式信息，即涵盖所有CSS样式属性，当前结点没有赋予相应的样式信息就会从浏览器中内置的默认样式进行获取；尽管<code>DOM</code>中不会包含伪元素的结点信息，但是<font color=#f00>伪元素仍然会有相应的计算样式</font>！</p>
<p>通过<code>window.getComputedStyle</code>方法即可获取某一结点的计算样式：</p>
<blockquote>
<p>window.getComputedStyle(element, [pseudoElt])<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
</blockquote>
<ul>
<li><code>element</code>：<code>DOM</code>结点；</li>
<li><code>pseudoElt</code>：伪元素匹配字符串，如：<code>&quot;::before&quot;</code>；</li>
</ul>
<h4 id="layout-tree"><a class="markdownIt-Anchor" href="#layout-tree"></a> Layout Tree</h4>
<p><code>Layout tree</code>，顾名思义就是生成<code>DOM tree</code>对应的布局信息，因此绘制图形时需要知道图形的形状和位置信息才行；根据DOM tree和相应的计算样式就可以计算出相应结点的布局信息，布局信息主要包括：当前结点的<strong>盒模型尺寸</strong>，以及<strong>坐标位置</strong>；需要注意的是<code>display: none</code>的结点不会纳入到布局树当中，因为此时<font color=#39f>该结点并不会被渲染</font>，而<font color=#39f>伪元素结点则会被纳入到布局树</font>中，因此伪元素本质上还是一个渲染结点，只是<code>DOM</code>不包含而已；</p>
<p>计算布局树是一个<font color=#f00>十分复杂</font>的过程，因为有太多因素可以影响到布局了，比如定位，尺寸，文字排版，浮动等等；因此要得到一个结点最终的布局信息要经过一系列的判断和计算。</p>
<h4 id="paint-records"><a class="markdownIt-Anchor" href="#paint-records"></a> Paint Records</h4>
<p>即便有了布局树和样式信息，仍然不足以绘制出最终的画面；熟悉图形渲染的人都应该知道，绘制的顺序很重要，如果绘制的顺序不对得到的结果可能就完全不同，因为<font color=#f00>不同的图形之间可能存在重叠的区域</font>；所以<code>Paint Records</code>就是用于存储各个图形之间的绘制顺序，保证绘制重叠不会阴差阳错。</p>
<p>根据<code>Layout tree</code>的信息就可以自然的计算出相应的<code>Paint Records</code>，因为<code>Layout tree</code>的树状结构包含了相应的层级关系；</p>
<h4 id="layer-tree"><a class="markdownIt-Anchor" href="#layer-tree"></a> Layer Tree</h4>
<p>由于全量式刷新渲染很耗费时间，因此浏览器采用了对元素进行分层，这个就像是<code>PS</code>中分图层处理；然后单独对每个图层进行光栅化处理，然后拼接处于视口<code>（viewport</code>）内的图层光栅化数据，合成为当前的渲染帧，这个过程称之为：<strong><code>composition</code></strong>；</p>
<p>而<code>Layer tree</code>则是根据<code>Layout tree</code>进行图层划分后得到图层层级信息，即哪些元素结点处于同一图层，图层间的关系如何；这样做的好处就是，在布局树没有发生改变时，滚动页面可以<font color=#39f>直接利用部分之前已经光栅化的图层</font>，然后继续合成新的渲染帧即可，加快了渲染效率；</p>
<p>目前浏览器内部是按照什么规则进行图层的划分还不是很清楚，但是可以确定的是当一个属性设置了<code>will-change</code>属性后，<font color=#f00>该属性会被视为单独的一层</font>，以便更加高效地应对此元素结点的变化；但是过多地设置<code>will-change</code>属性会导致图层过多，<code>composition</code>的耗时就会更多，反而效率降低；</p>
<p>此外，<code>Chrome</code>浏览器的开发者工具还提供了查看图层的功能：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200912111826.png?imageslim" alt="img" /></p>
<p>点开这个面板我才发现这个面板的功能实在是太强大了，除了列出当前页面的所有图层，还可以查看图层的信息：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200912111851.png?imageslim" alt="img" /></p>
<p>图层信息有：<font color=#39f>图层大小，位置，分层原因，占用内存</font>等等；从上图我们可以得知，该图层大小为<code>1425x152</code>，坐标位置是<code>（0，0）</code>，分层的原因是由于该元素是<code>fixed</code>或者<code>sticky</code>定位或者可能会覆盖其他的图层；不仅如此，还可以直接查看<font color=#f00>各个图层的位置和层叠关系</font>，而且还支持结合绘制结果一起，还能<code>3D</code>查看！</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200912112127.gif?imageslim" alt="img" /></p>
<p>上图中黑色边框标注的就是一个图层，图层之间有叠层顺序，图层关系和渲染结果简直一目了然；这个工具大大加深了对<code>composition</code>的认识，果然浏览器内部实际上就是按照<code>3d</code>进行渲染的？</p>
<h4 id="tile"><a class="markdownIt-Anchor" href="#tile"></a> Tile</h4>
<p><code>Tile</code>，中文译为“<strong>瓷砖</strong>”；不过在光栅化过程中可以把它理解为一个<code>layer</code>（图层）的矩形小块，当一个图层尺寸过大时，可能会被切分成多个<code>tile</code>，然后光栅化的最小单位就是<code>tile</code><sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200912112430.png?imageslim" alt="img" /></p>
<h4 id="draw-quads"><a class="markdownIt-Anchor" href="#draw-quads"></a> Draw quads</h4>
<p><code>Draw quads</code>是<code>tile</code>光栅化后得到的结果，意为“<strong>绘制四边形</strong>”；它包含了该<code>tile</code>像素信息位于<font color=#f00>内存中的地址</font>已经对应在当前渲染帧（即当前页面）中的<font color=#39f>坐标位置</font>；这个有点类似于着色器中常见的片元，只不过这个绘制四边形对于片元来说还是太大了。</p>
<h4 id="compositor-frame"><a class="markdownIt-Anchor" href="#compositor-frame"></a> Compositor frame</h4>
<p>将当前视口内所有的图层光栅化后得到的所有<code>Draw quads</code>进行拼接，得到的帧信息就是<code>Compositor frame</code>，这个帧信息就是用于传送到<code>GPU</code>中，然后显示当前绘制画面，有点类似于帧缓冲；</p>
<h3 id="浏览器网页事件触发机制"><a class="markdownIt-Anchor" href="#浏览器网页事件触发机制"></a> 浏览器网页事件触发机制</h3>
<p>除了渲染，前端代码还可以用来处理各种各样的交互事件，以及修改<code>DOM/CSSOM</code>等操作，这些事情是<code>JS</code>来负责的；修改DOM这种操作无非就是借助浏览器暴露的接口进行底层控制而已，更重要的是理解浏览器中事件触发机制以及<code>JS</code>在其中的作用；</p>
<blockquote>
<p>严格意义上来说，事件注册机制不也是DOM的一部分吗？</p>
</blockquote>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200912112444.png?imageslim" alt="img" /></p>
<p>上图就是浏览器内部触发一个事件到执行的大致流程，其中确实有很多步骤和判断，有不少值得注意的细节；</p>
<h4 id="非快速滚动区域"><a class="markdownIt-Anchor" href="#非快速滚动区域"></a> 非快速滚动区域</h4>
<p>非快速滚动区域，即<code>non-fast scrollable region</code>；当<font color=#39f>一个元素被注册了事件</font>，其对应的渲染区域就会被识别成非快速滚动区域，然后只有非快速滚动区域才会去进一步识别事件处理，也就是说没有注册事件的区域即便发生了事件也会被<code>compositor</code>线程忽略，继续它的帧渲染工作；</p>
<p>因此非快速滚动区域也是名副其实，因为这个区域在发生交互行为时<code>Compositor</code>线程<font color=#f00>需要等待渲染主线程的回应</font>才能进行下一步的渲染，所以中间会有一定耗时，导致诸如滚动页面的操作相应的渲染结果有所延后；不过这个也是有解决方法的。</p>
<h4 id="passive事件的本质"><a class="markdownIt-Anchor" href="#passive事件的本质"></a> passive事件的本质</h4>
<p><code>addEventListener</code>方法第三个参数原本是用于标识事件是否发生在捕获阶段的，但是后面又新增了一种用法<sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup>：</p>
<blockquote>
<p>target.addEventListener(type, listener, options);</p>
</blockquote>
<p>即第三个参数可以是一个配置对象（目前属性值都是布尔值）：</p>
<ul>
<li><code>capture</code>：表示是否在捕获阶段触发事件；</li>
<li><code>once</code>：表示事件是否只触发一次；</li>
<li><code>passive</code>：表示事件是否不会使用<code>preventDefault</code>方法，当为<code>true</code>时<font color=#f00>即便事件回调函数调用了<code>preventDefault</code>方法也会被忽略</font>；</li>
</ul>
<p>这里将选项设置为<code>passive:true</code>的事件称之为“<code>passive</code>事件”；显然，看了流程图就会知道，<code>passive</code>事件本质上是给<code>compositor</code>线程一个信号：即<font color=#39f>当前事件不会阻塞渲染</font>；也就是说注册了<code>passive</code>事件的元素区域即便被标识成了非快速滚动区域，但是仍然不会阻塞<code>compositor</code>线程的绘制工作，这样就既能触发事件又不会阻塞渲染工作；</p>
<h4 id="事件委托的一个缺点"><a class="markdownIt-Anchor" href="#事件委托的一个缺点"></a> 事件委托的一个缺点</h4>
<p>由于非快速滚动区域阻塞渲染的特点，当事件注册的区域过大时则会影响渲染效率；那么实践中被经常使用的事件委托技巧这个时候就会中枪了，因此事件委托正是将事件委托到触发元素的父级及以上层级的元素结点上，所以此时的<font color=#f00>非快速滚动区域不可避免的会变大</font>，而且事件触发的精准度明显降低，因此被委托的结点明显要接收更多不相关的事件（因为其内部往往需要进行一个判断才会执行真正的事件，这样导致阻塞渲染的情况变多，且不相关事件也变多）；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="params">event</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (event.<span class="property">target</span> === a) &#123;</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>解决办法也是有的，那就是把事件变成<code>passive</code>事件，这样做就不能阻止事件默认行为了；</p>
<h4 id="命中测试"><a class="markdownIt-Anchor" href="#命中测试"></a> 命中测试</h4>
<p>当<code>compositor</code>线程接收到主线程传来的事件触发坐标时，往往并不能直接确定这个事件具体触发的结点（即<code>event target</code>），因为<font color=#f00>这个坐标点可能存在多个元素结点</font>，因此存在层叠关系，所以此时需要结束<code>Paint Records</code>来确认最终触发事件的结点；</p>
<h4 id="合并事件"><a class="markdownIt-Anchor" href="#合并事件"></a> 合并事件</h4>
<p>当一个事件在一帧内连续触发多次，那么该事件则会被合并成一次事件交给下一帧；这个可能会出现在手势操作相关的连续事件中，比如<code>touchmove</code>；对于一些高精度要求的交互中，比如说手势绘制轨迹等，如果合并事件则会丢失一定的数据，因此后续规范中增加了对这类事件的完整事件的获取方法，如：<code>PointerEvent.getCoalescedEvents()</code>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200912112510.png?imageslim" alt="img" /></p>
<p>上面这个方法就是可以获取指针事件中当前帧内所有的连续触发事件，因此可以提高交互的精度；</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/47407398">图解浏览器的基本工作原理 - 知乎</a></li>
<li><a href="https://web.archive.org/web/20140509053414/http://www.adminspoint.com/technology/3476-google-chromebooks-understanding-chrome-os.html">https://web.archive.org/web/20140509053414/http://www.adminspoint.com/technology/3476-google-chromebooks-understanding-chrome-os.html</a></li>
<li><a href="https://css-tricks.com/an-introduction-and-guide-to-the-css-object-model-cssom/">An Introduction and Guide to the CSS Object Model (CSSOM) | CSS-Tricks  Flywheel logo</a></li>
<li><a href="https://developers.google.com/web/updates/2018/07/page-lifecycle-api">https://developers.google.com/web/updates/2018/07/page-lifecycle-api</a> ：关于网页生命周期的讲解</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://en.wikipedia.org/wiki/History_of_the_web_browser">https://en.wikipedia.org/wiki/History_of_the_web_browser</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://developers.google.com/web/updates/2018/09/inside-browser-part1">https://developers.google.com/web/updates/2018/09/inside-browser-part1</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model/Introduction">DOM概述 - Web API 接口参考 | MDN</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/getComputedStyle">Window.getComputedStyle() - Web API 接口参考 | MDN</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://developers.google.com/web/updates/2018/09/inside-browser-part3#raster_and_composite_off_of_the_main_thread">https://developers.google.com/web/updates/2018/09/inside-browser-part3#raster_and_composite_off_of_the_main_thread</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener">EventTarget.addEventListener() - Web API 接口参考 | MDN</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>DOM</tag>
        <tag>浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title>Trae实战分析</title>
    <url>/post/trae-practical-analysis/</url>
    <content><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<h2 id="关于-ai-ide"><a class="markdownIt-Anchor" href="#关于-ai-ide"></a> 关于 AI IDE</h2>
<p>最近（2025-02）看到消息说字节推出了一个免费版的 AI IDE——<a href="https://www.trae.ai/">Trae</a>，于是就去试了一下，毕竟之前用 AI IDE 的还是 Cursor 刚推出的那会（应该是 2023 年初），那时候的 AI IDE 可以说就是个玩具，所以后面有很长一段时间都没咋用过 AI IDE 了，日常也就是在 VSCode 里用一些免费的 LLM 代码补全插件（如 Codeium）。但 2024 年随着 LLM 大爆发，生产力早就不可同日而语了，因此顺带着 Cursor 和 windsurf 这类 AI IDE 也开始声名大噪。</p>
<p>由于 Trae 不像其它 AI IDE 那样是需要收费的（估计后面会收费），而且免费提供的模型没有次数限制，因此就可以用它在项目中放心进行各种尝试了，所以是目前用于入门 AI IDE 的最佳选择了。</p>
<span id="more"></span>
<h2 id="关于-trae"><a class="markdownIt-Anchor" href="#关于-trae"></a> 关于 Trae</h2>
<p>由于这篇文章的目的并不是介绍 Trae 怎么操作的，因此我不想在这方面赘述，可以看看阮一峰老师最近给 Trae 写的推广文——<a href="https://mp.weixin.qq.com/s/x54VUa-7OdqgjSWrnz1g3w">Trae 国内版出来了，真的好用吗？</a>，或者去看官方文档。顺便说一下，国内版提供的大模型不咋地（可以看上面那篇文章的评论区），<strong>推荐用国际版</strong>。只能说还好我一开始用的是国际版，不然我又会对 AI IDE 失望一阵子才会去使用😅；国际版目前提供的模型如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503061756093.png?imageView2/2/w/200" alt="image.png" /></p>
<p>有时候列表里还会出现 GPT-4o，估计 token 用完了模型就会移出列表吧……然而这些模型中可以稳定使用的就 Claude3.5，像 R1 和 Claude3.7 这类热门且又是新进推出的模型很多时候都会出现排队的情况：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503061801719.png?imageView2/2/w/300" alt="image.png" /></p>
<p>因此我在日常使用直接就锁死用 Claude3.5 了，毕竟长期使用的话稳定性很重要，而且 Claude3.5 在日常使用中感觉也挺不错的。只是听说 3.7 相比 3.5 又提升了不小，估计需要花点钞能力去 Cursor 里稳定体验一下才能知道了。</p>
<h1 id="实战"><a class="markdownIt-Anchor" href="#实战"></a> 实战</h1>
<h2 id="静态网站开发"><a class="markdownIt-Anchor" href="#静态网站开发"></a> 静态网站开发</h2>
<h3 id="21stdev-的用法"><a class="markdownIt-Anchor" href="#21stdev-的用法"></a> 21st.dev 的用法</h3>
<p>由于不久前在油管上看到一个 <a href="https://www.youtube.com/watch?v=8MPElOdNjtk">视频</a>，讲了一个基于 AI IDE 快速开发网站的思路——即利用 shadcn 组件，直接找到心仪的 UI 组件，然后让 AI 使用这些 UI 组件完成页面功能。</p>
<p>当然这里具体涉及的组件实际上是 <a href="https://21st.dev/?tab=components&amp;sort=recommended">21st.dev </a> 提供的，只不过它可以基于 shadcn 进行安装，且支持直接生成使用对应组件的<strong>提示词</strong>，粘贴使用即可让 AI 使用对应的组件，而不需要自己手动安装：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503061849618.png?imageView2/2/w/500" alt="image.png" /></p>
<p>然而实际上查看生成的提示词你会发现，提示词完全就是把组件的完整源码写进去让 AI 复制然后进行组件的创建，并完成一些 npm 依赖的安装，因此生成的提示词长度完全跟源码有关：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503061853736.png?imageslim" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503061854581.png?imageslim" alt="image.png" /></p>
<p>然而大多数组件的源码都挺长的，但 Trae 目前支持的最大输入 Token 数为 6000，因此无法使用这种方式：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503061855120.png?imageView2/2/w/400" alt="image.png" /></p>
<p>不过有一说一，这种方式完全就是土豪作风（所以油管视频里博主用的是 Cursor），随随便便就是上万的输入 Token，其实基于命令行手动安装挺方便的，只有一行命令：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503061858129.png?imageView2/2/w/500" alt="image.png" /></p>
<h3 id="使用组件开发"><a class="markdownIt-Anchor" href="#使用组件开发"></a> 使用组件开发</h3>
<p>当通过 shadcn 把组件下载到项目后，就可以使用 Trae 的 Builder 让 AI 使用指定的组件完成某些功能的开发，如：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503061905364.png?imageView2/2/w/400" alt="image.png" /></p>
<p>上面示例中并没有直接在上下文中指定组件，而是写了要使用的组件的名字，因为 Trae 在新增文件后会自动更新文件的索引，只要组件文件名字不是普通重复的，AI 一般是不会理解错的；但是通过 Trae 的<strong>上下文</strong>功能指定则可以更直接的使用目标组件，如：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503061910031.png?imageslim" alt="image.png" /></p>
<h3 id="组件的微调"><a class="markdownIt-Anchor" href="#组件的微调"></a> 组件的微调</h3>
<p>由于 shadcn 导入的组件实际上就是本地文件，因此直接在上下文中指定组件文件，并提出修改的需求即可：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503061916458.png?imageView2/2/w/400" alt="image.png" /></p>
<h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3>
<p>由于该项目是一个很小的静态网站项目，且对 UI 没有细致的要求，套模板即可，因此一个熟练的前端开发起来最多也就一两天，而使用 Trae 开发也要几个小时，所以单从花费的时间上来看并没比传统开发快多少。</p>
<p>但实际上这个项目使用了 Nextjs + shadcn 的技术栈，而我之前压根就没用过这个技术栈，甚至连 React 都不怎么用，但基于 Trae 进行开发我基本上无视了技术栈的入门，因为它给出的代码很少有致命的 bug，运行比较顺利，因此我只需要把注意力花在页面呈现的校验上。</p>
<p>此外，这确实是一个简单的项目，熟练的前端工程师确实不需要费太多功夫就能完成相关需求。然而，这个过程其实是挺<strong>枯燥</strong>的，因为<strong>脑子</strong>里早就想好了大多数的细节，但<strong>手上</strong>不得不去写那些<strong>早就熟的不行</strong>的步骤——新建项目、新建页面、选择组件和插件，然后写胶水代码搭积木……而用 Trae 写这个项目大多数时候就是<strong>输入想法</strong>，然后等它输出完后进行 <strong>Code Review</strong> 和页面功能检查即可，有 bug 则告诉它报错信息和 bug 表现即可，如此反复，除非碰到它<strong>幻觉严重</strong>无法解决的时候才需介入，这种模式极大了减轻了写这种简单业务时脑中的无聊感，甚至在它输出 Code 的途中你还能去干干其它事情😁，这下真可以“一心二用”了。</p>
<h2 id="测试用例编写"><a class="markdownIt-Anchor" href="#测试用例编写"></a> 测试用例编写</h2>
<p>由于这两年写了一些个人项目，但精力有限，测试可以说都是随缘进行，因此我很担心过一段时间就写出各种自相矛盾的功能（毕竟过一段时间哪怕是自己写的代码都未必都能全了解😅），所以最好把各种测试用例给覆盖上，不过实在挤不出时间来写，所以这次就想试试让 AI 帮我试试各种各样的测试用例编写了，涵盖了前后端开发中常见的测试用例类型：</p>
<ul>
<li>单元测试</li>
<li>e2e 测试</li>
<li>组件测试</li>
</ul>
<h3 id="nestjs-jest-单元测试"><a class="markdownIt-Anchor" href="#nestjs-jest-单元测试"></a> NestJS + Jest 单元测试</h3>
<p>NestJS 项目自带的测试框架就是 Jest，而且测试配置默认都开箱即用了，因此让 AI 直接开始写单测用例即可：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503071217134.png?imageView2/2/w/400" alt="image.png" /></p>
<p>由于 NestJS 是一个参考了 Angular 架构模式的依赖注入式后端框架，再加上之前也较少写过单测，所以一开始看到 AI 给我生成的单测文件我充满了疑惑，这单测用例咋全是 mock 数据，全是 mock 这还测啥呢，因此我就以为 AI 写的单测不对，然后就问起了 AI 为啥要这么写，问了几个问题后我才恍然大悟，🤡竟是我自己：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503071227994.png?imageView2/2/w/400" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503071228425.png?imageView2/2/w/400" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503071229604.png?imageView2/2/w/400" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503071232041.png?imageView2/2/w/400" alt="image.png" /></p>
<p>通过 AI 给出的单测用例代码以及 AI 的回答，我才知道 AI 一开始给出的单测用例就是规范的，只是我脑里设想的那种按照真实运行情况去测试的方式实际上是 e2e 测试，单测的侧重点应该是：</p>
<ul>
<li>隔离外部依赖模块的影响：所以依赖模块应该都进行 mock 处理（当一个模块的副作用特别多时，mock 起来岂不是特别费劲了😂）</li>
<li>只关注当前测试模块<strong>本身代码</strong>的运行逻辑</li>
</ul>
<p>而数据库的操作想要一一 mock 就很费劲了，好在现在的 ORM 都支持内存数据库，所以每次测试时创建一个内存数据库，直接使用内存数据库进行操作，既避免了对真实数据库的影响又是一种对数据库操作的完美 mock。</p>
<p>只能说 AI 不仅帮我把单测用例写好了，还顺便教会了我如何写规范的单测用例🙈，这简直就是老师的行为。不过 AI 输出的测试用例还需要认真检查，除了查看用例本身执行是否正确以外，还需要看看最表面的测试覆盖率：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503071459645.png?imageslim" alt="image.png" /></p>
<p>当然，也不能盲目相信测试覆盖率，因为覆盖率这个指标仅仅只是体现了测试用例覆盖代码的整体情况，并不能判断具体的测试用例是否有效。因此 AI 输出的测试用例可以很好地用来快速初始化用例，而具体的用例是否有效还得结合实际测试的代码进行一一判断（这种细致的 Review 工作量也不小的😅）。当发现测试用例覆盖不够时，也能指出让 AI 进行补充用例：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503071512464.png?imageView2/2/w/400" alt="image.png" /></p>
<h3 id="nextjs-playwright-e2e-测试"><a class="markdownIt-Anchor" href="#nextjs-playwright-e2e-测试"></a> NextJS + Playwright e2e 测试</h3>
<p>对于前端项目来说，页面中的业务逻辑用 e2e 测试是比较有效的，因为这样的测试模式更贴近用户实际操作，这里选择了目前比较流行的 Playwright 作为 e2e 的测试框架。跟编写单元测试用例，让 AI 写 e2e 测试用例也是一样的简单：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503072212270.png?imageView2/2/w/400" alt="image.png" /></p>
<p>跟写单测用例类似，这里的 Code Review 需要比较细致去判断是否真的有效，很依赖开发者自身的经验；值得一提的是，playwright 本身并不提供测试覆盖率的功能，而 AI 却认为 playwright 也跟其他单元测试框架类似，提供了 <code>--coverage</code> 参数，实际上并没有提供：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503072218713.png?imageView2/2/w/400" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503072220710.png?imageView2/2/w/400" alt="image.png" /></p>
<p>所以不难看出，这里 AI 出现了比较严重的<strong>幻觉</strong>现象，如果没有开发背景估计很可能就被坑到了😅。而关于 e2e 测试的测试覆盖率，我在 <a href="https://www.reddit.com/r/QualityAssurance/comments/1c2jeb9/code_coverage_for_e2e_tests_what_do_you_use/">reddit</a> 上看到一个有意思的讨论，实际上也有人为 playwright 写了统计测试覆盖率的插件——<a href="https://github.com/mxschmitt/playwright-test-coverage">playwright-test-coverage</a>，不过测试覆盖率这个指标对于 e2e 测试来说有多大的作用，我心里打个问号。</p>
<h3 id="vue3-vitest-组件测试"><a class="markdownIt-Anchor" href="#vue3-vitest-组件测试"></a> Vue3 + Vitest 组件测试</h3>
<p>组件测试实际上就是针对 UI 组件的单元测试，只不过单个 Vue 组件的源码并不是最终在运行时执行的完整代码（因为框架层面需要把组件转换成 JS 函数），因此在进行组件测试的时候需要使用 Vue 提供的官方测试套件——<code>@vue/test-utils</code>，把测试的组件进行一层转换然后再进行单元测试。既然本质上就是单测，所以在配置好测试框架后就跟前面写单测一样：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503072242863.png?imageView2/2/w/400" alt="image.png" /></p>
<p>不过在这里我发现有时候 AI 并不一定完全根据你指定的组件源码内容进行用例的编写，而会出现一些幻觉，开始<strong>意淫</strong>你这个组件应该包含了哪些功能然后擅自给你加到用例里去测试，而实际上组件里压根没有提供对应的功能和 Props😅，因此需要好好进行甄别。</p>
<p>此外在用 Vitest 进行组件测试时，有一些小问题值得注意一下，一个是 vitest 配置文件中的配置应该跟 vite 的配置保持一致（主要就是 plugins 和 resolve），不然运行测试用例的时候会出现一堆报错（因为配置不一致会导致运行环境和开发环境不同）；另一个就是 Vitest 的运行时环境方面，happy-dom 的兼容性比不上 jsdom。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503072253663.png?imageView2/2/w/400" alt="image.png" /></p>
<h3 id="总结-2"><a class="markdownIt-Anchor" href="#总结-2"></a> 总结</h3>
<p>经过让 AI 编写各种类型的测试用例之后，我发现这类场景下最大的瓶颈反而是我的 Code Review 速度赶不上 AI 生成用例的速度，毕竟平时真的挺少写这些测试用例的😅，而对国内的很多开发团队来说写测试用例是一件比较<strong>奢侈</strong>的事情，现在借助 AI 来辅助用例的编写是个很好的尝试，毕竟搞不好以后写代码真的以 review 为主了；不过好在 AI 给出的测试用例在<strong>规范性</strong>方面简直无话可说，我们可以跟 AI 进行学习，然后加强这方面的实操，等积累了更多的经验后 review 的速度应该会大大提高。</p>
<h2 id="生成艺术作品开发"><a class="markdownIt-Anchor" href="#生成艺术作品开发"></a> 生成艺术作品开发</h2>
<p>在用了一会 Trae 后，我萌生了一个想法——让 AI 进行生成艺术作品的开发，毕竟这类作品通常充满了细节，跟普通的业务逻辑相比没有那么规律，因此难度应该大一点；如果 AI 真能大大加快这类作品的开发效率，那我可太高兴了🤓，毕竟这方面积累的想法太多了，实现不过来。</p>
<p>这次我就试试让 AI 完成“随机生成一棵水彩风格的 3D 树，并提供 GUI 进行粗细，层级，树叶数量等参数控制”的需求。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081050397.png?imageView2/2/w/400" alt="image.png" /></p>
<p>甚至可以上传参考图让 AI 实现图中的风格：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081055449.png?imageView2/2/w/400" alt="image.png" /></p>
<p>然而让 AI 直接临摹参考图的尝试最后效果并不太行，甚至连颜色提取都不是很精准，可能跟具体模型的识图能力有关？虽然 AI 按它自己的理解绘制出了一点类似水彩的效果，但跟真实的水彩相比还是差了一些：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081059966.png?imageView2/2/w/400" alt="image.png" /></p>
<p>AI 通过添加很多噪点来简单粗暴的模拟“水彩”效果，实际上并没有水彩的那种晕染涂抹的效果。而在某些细节问题上，我让 AI 去实现它，但似乎 AI 压根不能理解我说的需求也没法从我反馈的实际渲染图中察觉到问题的所在，甚至越反馈越改越离谱的情况（我甚至后面用 Cursor 试了一下解决同样的也是如此……）：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081111153.png?imageView2/2/w/400" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081112908.png?imageView2/2/w/400" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081113203.png?imageView2/2/w/400" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081114360.png?imageView2/2/w/400" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081130782.png?imageView2/2/w/400" alt="image.png" /></p>
<p>这个问题我跟 AI 沟通了<strong>几十轮</strong>，到最后得到的效果越来越离谱，以至于我后面索性回退成了之前的版本😅。实际上这个问题在算法层面上的实现并没有那么难，可能是给的提示词和上下文让 AI 产生误解和偏差？也可能是使用的模型对于这个专业问题并没有太多相关的训练数据？</p>
<p>至于水彩风格的渲染，后面我特地从 Shadertoy 上找了一些比较接近水彩渲染效果的 <a href="https://www.shadertoy.com/view/4tdyRj">着色器源码</a>，让 AI 模仿出类似的渲染效果，结果也不尽人意，跟提供参考的着色器相比可以说是完全不得精髓：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081117363.png?imageView2/2/w/400" alt="image.png" /></p>
<h3 id="总结-3"><a class="markdownIt-Anchor" href="#总结-3"></a> 总结</h3>
<p>通过跟 AI 的各种沟通，我发现让 AI 开发这类艺术作品它确实能够很快的理解你的大致意图，并迅速地把大致框架和算法给你实现出来。然而这类艺术作品最需要实现的细节部分，AI 好像理解起来有点费劲，每次只能实现细节中的很少一部分，甚至跟它反馈完又给你改偏题，所以在<strong>准确地</strong>实现作品细节方面目前还得是靠自己，一个是参数的微调，一个是算法的适配问题。</p>
<p>目前该作品实现的效果如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081154607.png?imageslim" alt="image.png" /></p>
<p>只能说，“<strong>距离产生美</strong>”。作品地址：<a href="https://dao.xiexuefeng.cc/ai-random-tree">https://dao.xiexuefeng.cc/ai-random-tree</a></p>
<h1 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h1>
<p>感觉整篇文章写下来就是展示和 AI 的聊天记录😂，事实上目前基于 AI IDE 的开发模式就是如此——聊天 + Code Review。</p>
<h2 id="code-review"><a class="markdownIt-Anchor" href="#code-review"></a> Code Review</h2>
<p>尽管目前的 AI IDE 还不能完全接管程序员的所有开发流程，也就是说我们仍然要自己写一点“<strong>传统代码</strong>”（最近正好看到 Antfu 大佬在 B 站直播给自己起的标题就是写传统代码，底下就有人调侃到以后写代码也要变成非遗了😁）；记得在阮一峰大佬某篇文章下有人针对这一点提出了抱怨，大意是“目前的 AI IDE 最多也就<strong>只能</strong>完成 80% 的工作，剩下的 20% 的还是需要人来完成”，好一个“只能”😅，能达到这种效果就足以颠覆现有的开发模式了。</p>
<p>肉眼的可见的未来（我觉得当下就已经开始了）代码开发的模式肯定变成了以 Code Review 为主，剩下的 AI 目前无法解决的那部分才需要人去手动介入接管；而我相信随着 LLM 和 Agent 的快速发展，以后程序员真的就是全职去做 Code Review 了，所以我个人认为如何<strong>高效地</strong>进行 Code Review 是接下来需要重点突破的方向之一（仅凭人肉去做 Code Review 是有很明显的上限的）。不过哪怕最终甚至设计出一个 Agent 接管了全部的 Code Review，还是需要人来做<strong>决策</strong>的，只不过这时候 AI 输出的代码就彻底变成了黑箱了……</p>
<h2 id="警惕幻觉"><a class="markdownIt-Anchor" href="#警惕幻觉"></a> 警惕幻觉</h2>
<p>由于 LLM 的原理，所以这类模型都或多或少的存在幻觉现象——即乱编一通，因为它的输出本质上是计算概率得到的，而非<strong>真正的智能</strong>。具体到输出代码，就会存在乱编 API，乱编参数，使用的 API 版本错乱等等。</p>
<p>所以目前来说，不要盲目相信 AI 输出的代码就一定是对的，当开发者缺乏相关背景知识时很有可能就被坑了，<strong>打铁还需自身硬</strong>。</p>
<h2 id="trae-相比-cursor-的不足"><a class="markdownIt-Anchor" href="#trae-相比-cursor-的不足"></a> Trae 相比 Cursor 的不足</h2>
<p>在用 Trae 的免费模型进行了一系列尝试后，我又试着重回 Cursor 看了看，结果发现 Cursor 在 AI IDE 这块的功能上强太多了，Agent 的流程明显智能多了，仅从单次回答过程中会自动修复文件的 Lint 错误和语法错误这一点来说，Cursor 的收费就值得：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081521833.png?imageView2/2/w/400" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/202503081522440.png?imageView2/2/w/400" alt="image.png" /></p>
<p>这种做法可以显著地提高 AI 输出的代码质量，因为 Trae 没有这个自动检查流程就会频繁出现一些变量定义错误和 Lint 错误。更不用提 Cursor 提供了更丰富的上下文类型、模型和自定义规则等扩展玩法，所以等适应了 AI IDE 的用法后，Cursor 真的是性价比很高，每个月 20$ 真的一点不贵。</p>
<h2 id="如何接入-ui-稿"><a class="markdownIt-Anchor" href="#如何接入-ui-稿"></a> 如何接入 UI 稿？</h2>
<p>在实际的前端项目开发中，对接细致的 UI 稿这块需求还是特别显著的，毕竟不是所有的业务都可以靠套模板完成。虽说现在很多模型都是多模态的，即可以识别并理解图片的内容，如果把 UI 稿转成静态图片，AI 能够还原多少？如果涉及到已有项目，AI 是否能从图片中找到已经封装过的业务组件吗？这一点我还没有怎么实践过，我相信难度不小。</p>
<p>不过前不久看到过一种新的对接 UI 的思路，那就是直接让 AI 生成 <a href="https://mp.weixin.qq.com/s/xbFqY9DwTwwZskgBmeqAxA">网页版的UI稿</a> 和原型图，然后再让 AI 基于网页版的 UI 稿进行对接？</p>
<h2 id="新的开发模式已经到来"><a class="markdownIt-Anchor" href="#新的开发模式已经到来"></a> 新的开发模式已经到来</h2>
<p>这两年关于 AI 尤其是 LLM 及对应的 Agent 相关的消息简直是层出不穷，好像每天都要出一个<strong>爆炸性</strong>的模型和产品似的，所以贩卖焦虑的确实很多（卖课的也很多😅）。</p>
<p>我对 AI 现在的进展既感到高兴也感到了焦虑，高兴是因为以前在上班写代码的时候总觉得写代码好枯燥啊，能不能给我自动化完成这些枯燥的业务逻辑（尽管那个时候已经有了半自动化的低代码开发模式，在研究了一阵之后我甚至觉得半自动化都不够，疑似有点太激进了🙈），毕竟这些业务逻辑不夸张的说基本上大部分的细节在脑海里<strong>一瞬</strong>就想好了，而剩下的时间只是看着自己把代码写出来而已，也就是说在工作里写代码大部分时间都是<strong>体力活</strong>罢了，而现在 AI IDE 的出现可以把我<strong>一定程度</strong>的从这种体力活中解放出来，所以我很高兴没过几年这种美梦就实现了；</p>
<p>焦虑的是现实里工作本来就很卷了，这种级别的生产力解放势必会造成工作岗位的需求减少。现在程序员的处境就好比以前的纺织工碰到了工业革命带来的纺织机器，作为一名传统的手工从业者该如何面对机器带来的挑战？历史的答案告诉我们，我们应该成为掌握机器的那部分人（或者成为造机器的人？），这样才不至于被时代淘汰。</p>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>IDE</tag>
        <tag>LLM</tag>
      </tags>
  </entry>
  <entry>
    <title>数组层级到对象层级的TS类型推导</title>
    <url>/post/ts-array-to-object/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>这是一个我在基于<code>TS</code>编写一种配置型组件模型时所想到的一种类型推导，个人觉得还是挺有意思的，在推导过程中对<code>TS</code>类型编程的理解又加深了不少；</p>
<span id="more"></span>
<h2 id="一个思考题"><a class="markdownIt-Anchor" href="#一个思考题"></a> 一个思考题</h2>
<p>已知有一个递归数据结构如下：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">Item</span> &#123;</span><br><span class="line">  <span class="attr">key</span>: &#123;</span><br><span class="line">    [<span class="attr">name</span>: <span class="built_in">string</span>]: <span class="built_in">string</span> | <span class="built_in">number</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">Item</span>[];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后最外层的结构也是一个数组，即：<code>Item[]</code>；</p>
<p>希望通过一个<code>TS</code>泛型（即类型函数）将该递归数组结构转换为递归的对象结构，即树状结构；有以下满足上述数组结构的数据：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> demo = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">key</span>: &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">key</span>: &#123;</span><br><span class="line">          <span class="attr">other</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">key</span>: &#123;</span><br><span class="line">              <span class="attr">age</span>: <span class="number">1</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">children</span>: []</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">key</span>: &#123;</span><br><span class="line">              <span class="attr">sex</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">children</span>: []</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">key</span>: &#123;</span><br><span class="line">      <span class="attr">size</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">key</span>: &#123;</span><br><span class="line">          <span class="attr">width</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">children</span>: []</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">key</span>: &#123;</span><br><span class="line">          <span class="attr">height</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">children</span>: []</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">key</span>: &#123;</span><br><span class="line">      <span class="attr">sss</span>: <span class="number">12</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">children</span>: []</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>然后有一个函数形状为：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> transfer&lt;T <span class="keyword">extends</span> <span class="built_in">any</span>[]&gt; (<span class="attr">arr</span>: T): <span class="title class_">Transfer</span>&lt;T&gt;</span><br></pre></td></tr></table></figure>
<p>通过该函数能够将变量<code>demo</code>转为树状层级结构的数据：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> target = <span class="title function_">transfer</span>(demo)</span><br></pre></td></tr></table></figure>
<p>因此期望得到的target TS推导结构如下：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">target</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: &#123;</span><br><span class="line">        <span class="attr">other</span>: &#123;</span><br><span class="line">            <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">            <span class="attr">sex</span>: <span class="built_in">string</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="attr">size</span>: &#123;</span><br><span class="line">        <span class="attr">width</span>: <span class="built_in">number</span>;</span><br><span class="line">        <span class="attr">height</span>: <span class="built_in">number</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="attr">sss</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>请思考如何实现<code>Transfer</code>泛型，使得推导结果满足上述要求。</p>
<p><strong>注</strong>：这个类型推导很有挑战性，不久前我还一度认为<code>TS</code>不可能推导出来，事实上是<code>TS</code>确实有这个能力；如果能够写出<code>Transfer</code>泛型，基本上对于<code>TS</code>类型编程也就不会太吃力了；</p>
<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2>
<p>因为在尝试一个配置式复杂组件的数据层抽象，这个配置文件的结构是一个带层级信息的递归数组结构，跟上面的描述差不多，只是还多了一些很多其他的属性；期望从这个配置数据能够得到一个树状的对象结构，该对象就是组件具体承载的数据，以便输出调用，甚至响应化；</p>
<p>所以希望<code>TS</code>能够从数组结构自动推导出该对象的数据结构，以更加方便地调用该数据，即数据结构透明化；由于输入的数组配置实际上是动态的，因此用<code>TS</code>推导起来还是颇具难度的。</p>
<h2 id="推导过程"><a class="markdownIt-Anchor" href="#推导过程"></a> 推导过程</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001123012.png?imageslim" alt="img" /></p>
<p>由于<code>TS</code>本身语法的限制，最后得到的推导路线确实是比较曲折的，其中有不少的细节还是值得注意的；</p>
<h3 id="为何不能用带类型标注的类型结构"><a class="markdownIt-Anchor" href="#为何不能用带类型标注的类型结构"></a> 为何不能用带类型标注的类型结构</h3>
<p>假如我们得到的层级数组结构一开始就被标记成自定义的类型，或者在参数传递过程中被推导成了自定义类型，那么<font color=#f00>后续的推导就变得不再具体起来</font>，因为赋予了类型的结构在推导过程中会被<code>TS</code>默认识别成自定义类型，而非根据实际值来推导得到的具体键值对结构；</p>
<h3 id="如何处理推导中出现的never和unknown"><a class="markdownIt-Anchor" href="#如何处理推导中出现的never和unknown"></a> 如何处理推导中出现的never和unknown</h3>
<p>由于推导数组元素的联合类型时，空数组会被自动推导成<code>never[]</code>，而<code>never</code>类型在跟其它类型进行组合时会得到意外不到的类型，因此需要特别处理<code>never</code>类型的出现；</p>
<p><code>unknown</code>则会在使用一些自定义泛型时，<code>TS</code>得不到一个<font color=#39f>透明的推导结构</font>，因此会用<code>unknown</code>来代替；其危害性在于<font color=#f00>会阻碍后续结构的推导</font>，因此也需要特殊处理；</p>
<p>所以问题来了，那么怎样判断一个类型是<code>never</code>或<code>unknown</code>类型呢？当然本能地会想到使用<code>extends</code>语法来判断，用这个来判断<code>never</code>好像没啥问题，但是用这个来判断<code>unknown</code>类型就有点问题了；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001123033.png?imageslim" alt="img" /></p>
<p>这样使用<code>extends</code>来判断<code>unknown</code>类型就会永远只得到<code>unknown</code>；不过后面仔细想了想，这是由于<code>unknown</code>是<code>TS</code>中的<font color=#39f>顶级类型</font>，因此非<code>any</code>类型自然都会满足条件判断，因此换个位置就好了；不过，为了安全起见，想了一个泛型函数来进行同类型的判断：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">IsSame</span>&lt;A, B&gt; = (A | B) <span class="title function_">extends</span> (A &amp; B) ? <span class="literal">true</span> : <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>这里为啥要把<code>A &amp; B</code>放在后面也是有点原因的，因为当两个原始类型不同时，进行交叉操作就会得到<code>never</code>类型，而<code>never</code>是一个<font color=#39f>底层类型</font>，即<code>never</code>是所有类型的子类型，因此放在<code>extends</code>前面就会造成误判；</p>
<h3 id="联合类型转交叉类型"><a class="markdownIt-Anchor" href="#联合类型转交叉类型"></a> 联合类型转交叉类型</h3>
<p>联合类型转成相应的交叉类型，这也是一个技巧，这主要是利用了<font color=#f00><code>TS</code>目前唯一可用的逆变</font>：即函数参数的类型兼容性（实际上是双向协变）；</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 联合类型转交叉类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UnionToIntersection</span>&lt;U&gt; = </span><br><span class="line">  (U <span class="keyword">extends</span> <span class="built_in">any</span> ? <span class="function">(<span class="params"><span class="attr">k</span>: U</span>) =&gt;</span> <span class="built_in">void</span> : <span class="built_in">never</span>) <span class="title function_">extends</span> (<span class="function">(<span class="params"><span class="attr">k</span>: infer I</span>) =&gt;</span> <span class="built_in">void</span>) ? I : <span class="built_in">never</span></span><br></pre></td></tr></table></figure>
<p>至于为啥要把联合类型转成交叉类型，是因为数组推导的是元素联合类型，一个成员类型只是对应目前对象中的一个属性，因此需要进一步合并每个属性得到对象；</p>
<h3 id="infer和extends的注意点"><a class="markdownIt-Anchor" href="#infer和extends的注意点"></a> infer和extends的注意点</h3>
<ul>
<li><code>infer</code>只能用在<code>extends</code>语句的后面；</li>
<li><code>extends</code>本质上是<font color=#39f>判断继承关系</font>，和常用的相等判断是有区别的；</li>
</ul>
<h3 id="为何会有过滤可选属性这一步骤"><a class="markdownIt-Anchor" href="#为何会有过滤可选属性这一步骤"></a> 为何会有过滤可选属性这一步骤</h3>
<p>因为TS在对数组结构进行推导时，会自动合并同层级元素对象的属性，将某个元素不存在的属性，但是其他元素中存在的属性，变成其可选属性：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> demo = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">key</span>: &#123;</span><br><span class="line">      <span class="attr">a</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">key</span>: &#123;</span><br><span class="line">      <span class="attr">b</span>: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>上述数组结构的自动推导结构为：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001123048.png?imageslim" alt="img" /></p>
<p>可以看到，原本在元素对象中不存在的属性自动就合并成可选属性了，这样的推导结果并不太准确，因为最好把其中的可选属性过滤掉；那么问题来了，怎么过滤掉对象类型中的可选属性？</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">Demo</span> &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">b</span>?: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001123104.png?imageslim" alt="img" /></p>
<p>由于一旦给属性加上了可选标识，其类型值会自动被加上<code>undefined</code>类型，因此可以利用这个特点来简单地判断一个可选属性:</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取对象类型中非可选的key</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">KeepRequiredKey</span>&lt;T&gt; = &#123;</span><br><span class="line">  [K <span class="keyword">in</span> keyof T]: <span class="literal">undefined</span> <span class="keyword">extends</span> T[K] ? <span class="built_in">never</span> : K;</span><br><span class="line">&#125;[keyof T]</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 过滤对象中可选的属性，如果对象类型为unknown，返回原值（降级处理）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">KeepRequired</span>&lt;T&gt; = <span class="title class_">IsSame</span>&lt;<span class="title class_">KeepRequiredKey</span>&lt;T&gt;, <span class="built_in">unknown</span>&gt; <span class="keyword">extends</span> <span class="literal">true</span> ? T : <span class="title class_">Pick</span>&lt;T, <span class="title class_">KeepRequiredKey</span>&lt;T&gt;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="推导代码"><a class="markdownIt-Anchor" href="#推导代码"></a> 推导代码</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** 一个具有递归特性的数组层级结构 */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> ABC &#123;</span><br><span class="line">  <span class="attr">key</span>: &#123;</span><br><span class="line">    [<span class="attr">name</span>: <span class="built_in">string</span>]: <span class="built_in">string</span> | <span class="built_in">number</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="attr">children</span>: <span class="variable constant_">ABC</span>[];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 联合类型转交叉类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UnionToIntersection</span>&lt;U&gt; = </span><br><span class="line">  (U <span class="keyword">extends</span> <span class="built_in">any</span> ? <span class="function">(<span class="params"><span class="attr">k</span>: U</span>) =&gt;</span> <span class="built_in">void</span> : <span class="built_in">never</span>) <span class="title function_">extends</span> (<span class="function">(<span class="params"><span class="attr">k</span>: infer I</span>) =&gt;</span> <span class="built_in">void</span>) ? I : <span class="built_in">never</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取对象类型中非可选的key</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">KeepRequiredKey</span>&lt;T&gt; = &#123;</span><br><span class="line">  [K <span class="keyword">in</span> keyof T]: <span class="literal">undefined</span> <span class="keyword">extends</span> T[K] ? <span class="built_in">never</span> : K;</span><br><span class="line">&#125;[keyof T]</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 过滤对象中可选的属性，如果对象类型为unknown，返回原值（降级处理）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">KeepRequired</span>&lt;T&gt; = <span class="title class_">IsSame</span>&lt;<span class="title class_">KeepRequiredKey</span>&lt;T&gt;, <span class="built_in">unknown</span>&gt; <span class="keyword">extends</span> <span class="literal">true</span> ? T : <span class="title class_">Pick</span>&lt;T, <span class="title class_">KeepRequiredKey</span>&lt;T&gt;&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 交叉类型合并成对象类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Compute</span>&lt;T&gt; =</span><br><span class="line">  T <span class="keyword">extends</span> <span class="title class_">Function</span></span><br><span class="line">  ? T</span><br><span class="line">  : &#123; [K <span class="keyword">in</span> keyof T]: T[K] &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断两个类型是否为同一类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">IsSame</span>&lt;A, B&gt; = (A | B) <span class="title function_">extends</span> (A &amp; B) ? <span class="literal">true</span> : <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取第一层以下所有层级的属性结构</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">ABCObjectUnion</span>&lt;T <span class="keyword">extends</span> <span class="built_in">any</span>[]&gt; = </span><br><span class="line">  T <span class="keyword">extends</span> <span class="title class_">Array</span>&lt;infer P&gt; ? </span><br><span class="line">  (P <span class="keyword">extends</span> &#123;</span><br><span class="line">    <span class="attr">key</span>: infer K, <span class="comment">// 推断得到当前元素的key</span></span><br><span class="line">    <span class="attr">children</span>: infer C <span class="comment">// 推断得到当前元素的子元素数组</span></span><br><span class="line">  &#125; ? (<span class="title class_">IsSame</span>&lt;C, <span class="built_in">never</span>[]&gt; <span class="keyword">extends</span> <span class="literal">true</span> ? <span class="title class_">KeepRequired</span>&lt;K&gt; : <span class="title class_">KeepRequired</span>&lt;&#123; <span class="comment">// 包装成key:type对象，递归处理下一层级</span></span><br><span class="line">    [<span class="variable constant_">CK</span> <span class="keyword">in</span> keyof K]: C <span class="keyword">extends</span> <span class="built_in">any</span>[] ? <span class="title class_">KeepRequired</span>&lt;<span class="title class_">ABCObject</span>&lt;C&gt;&gt; : <span class="built_in">never</span></span><br><span class="line">  &#125;&gt;) : <span class="built_in">never</span>) :</span><br><span class="line">  <span class="built_in">never</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * 合并 key:type 联合类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">ABCObject</span> &lt;T <span class="keyword">extends</span> <span class="built_in">any</span>[]&gt; = <span class="title class_">Compute</span>&lt;<span class="title class_">UnionToIntersection</span>&lt;<span class="title class_">ABCObjectUnion</span>&lt;T&gt;&gt;&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 模拟输出对象结构的函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> a 数组配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> test2&lt;T <span class="keyword">extends</span> <span class="built_in">any</span>[]&gt; (<span class="attr">a</span>: T): <span class="title class_">ABCObject</span>&lt;T&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> a <span class="keyword">as</span> <span class="built_in">any</span> <span class="keyword">as</span> <span class="title class_">ABCObject</span>&lt;T&gt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 一个满足指定类型的数组配置 */</span></span><br><span class="line"><span class="keyword">const</span> t1 = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">key</span>: &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">key</span>: &#123;</span><br><span class="line">          <span class="attr">other</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">key</span>: &#123;</span><br><span class="line">              <span class="attr">age</span>: <span class="number">1</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">children</span>: []</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">key</span>: &#123;</span><br><span class="line">              <span class="attr">sex</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">children</span>: []</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">key</span>: &#123;</span><br><span class="line">      <span class="attr">size</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">key</span>: &#123;</span><br><span class="line">          <span class="attr">width</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">children</span>: []</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">key</span>: &#123;</span><br><span class="line">          <span class="attr">height</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">children</span>: []</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">key</span>: &#123;</span><br><span class="line">      <span class="attr">sss</span>: <span class="number">12</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">children</span>: []</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> c = <span class="title function_">test2</span>(t1)</span><br><span class="line"></span><br><span class="line">c.<span class="property">name</span>.<span class="property">other</span>.<span class="property">age</span></span><br><span class="line">c.<span class="property">size</span>.<span class="property">width</span></span><br></pre></td></tr></table></figure>
<p><code>TS</code>推导后的结构为：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001123126.png?imageslim" alt="img" /></p>
<p>显然是想要的目标对象结构，说明这种推导时可行的；因此在使用该推导结构时<code>vscode</code>都会有相应的提示，十分便利；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201001123151.png?imageslim" alt="img" /></p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://stackoverflow.com/questions/36966444/how-to-create-a-circularly-referenced-type-in-typescript?noredirect=1&amp;lq=1">How to create a circularly referenced type in TypeScript? - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/50374908/transform-union-type-to-intersection-type">typescript - Transform union type to intersection type - Stack Overflow</a></li>
<li><a href="https://github.com/microsoft/TypeScript/issues/27995">Mapped tuples types iterates over all properties · Issue #27995 · microsoft/TypeScript · GitHub</a>：关于遍历<code>TS</code>元组类型的讨论，比较精彩</li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>TS</tag>
      </tags>
  </entry>
  <entry>
    <title>TS AST转换实例：从类型声明生成初始化数据</title>
    <url>/post/ts-ast-transform-from-interface-to-data/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>如果在<code>TS</code>中声明了一些对象类型，使用这些对象类型来注解变量时，这些变量值的初始化往往需要自己手动按对象结构填写一遍，尽管有了<code>TS</code>类型声明和<code>IDE</code>的智能提示的加持下，这个填写过程还是很透明快速的；但是仔细一想，明明在声明这些对象类型的时候已经填过一层结构，为啥在数据初始化的时候<strong>又不得不去再填一遍</strong>，难道就不能自动根据声明的结构和一些简单的规则直接生成我们想要的初始化数据吗？</p>
<p>这是可以做到的；答案就来自于<code>TS</code>本身提供的编译器相关的<code>API</code>，只要从编译的角度去看待上面的问题，那么解决方案还是“比较轻松”的；</p>
<span id="more"></span>
<h2 id="实现流程"><a class="markdownIt-Anchor" href="#实现流程"></a> 实现流程</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210221225126.png?imageslim" alt="img" /></p>
<h2 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h2>
<p>从原理上来说，就是借助<code>JSDoc</code>语法，根据<code>AST</code>结构找到特定用于生成初始数据的注释，返回一份新的<code>AST</code>结构，最后根据新的<code>AST</code>生成输出的代码；</p>
<h3 id="ts编译流程"><a class="markdownIt-Anchor" href="#ts编译流程"></a> TS编译流程</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210221225148.png?imageslim" alt="img" /></p>
<p><code>TS</code>编译器核心相关的功能大致上有这么几个：</p>
<ul>
<li><strong>预处理器</strong>：加载源码文件及其依赖文件（通过<code>import</code>语句导入或者<code>&lt;refrence path=xxx /&gt;</code>标签语法导入的声明文件）和<code>tsconfig.json</code>配置文件中额外加载的声明文件，并将这些文件加入到编译上下文中；</li>
<li><strong>解析器</strong>：对源码文件做出词法分析，并得到相应的<code>AST</code>（抽象语法树）结构；</li>
<li><strong>结合器</strong>：遍历<code>AST</code>，找到其中的具名声明结点，并将同一实体的不同声明进行归纳（这个实体通常是<code>Identifier</code>，即标识符，也就是具名的）形成这个实体的<code>Symbol</code>，同时<code>Symbol</code>内也会记录对应声明的<strong>有效作用域</strong>；</li>
<li><strong>类型检查器</strong>：根据得到<code>Symbol</code>信息得出相应的<code>Type</code>信息，以节点的<code>Type</code>信息作为预期语义，以节点的<code>AST</code>信息作为实际语义，对节点做出语义诊断，然后得出相应的诊断信息（如<code>error</code>/<code>warning</code>等）；</li>
<li><strong>发射器</strong>：发射器根据编译选项以及<code>AST</code>信息（<code>SourceFile</code>结点）输出相应的目标代码（包含<code>js(x)/js.map/d.ts</code>）；</li>
</ul>
<h4 id="相关概念"><a class="markdownIt-Anchor" href="#相关概念"></a> 相关概念</h4>
<ul>
<li>
<p><code>Symbol</code>：<code>Symbol</code>是专门用于连接<strong>同一实体</strong>在<code>AST</code>中所有的<font color=#f00>具名声明结点</font>（相应地自然就有匿名声明结点，<strong>声明既包括一般语法的声明，也包括类型系统中的类型声明</strong>），因此是语义系统中的基本结构<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>；</p>
</li>
<li>
<p><code>Type</code>：<code>Type</code>则是语义系统中另一种基本结构，包括具名和匿名的类型；<code>Type</code>是从<code>Symbol</code>推断得到的<strong>最佳公共类型</strong>（<a href="https://www.typescriptlang.org/docs/handbook/type-inference.html#best-common-type"><code>best-common-type</code></a>），这里的类型可以是<font color=#39f>手动注解</font>的，当没有手动注解时就会从值的内容进行推导；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210221225214.png?imageslim" alt="img" /></p>
</li>
<li>
<p><strong>诊断信息</strong>（<code>semantic diagnostic</code>）：即语义诊断信息，语义和语法是两种不同的系统，<strong>语义存在于类型系统中</strong>，是专门用于描述类型关系的，而诊断信息就是类型检查的产物；</p>
</li>
</ul>
<h3 id="ts-ast数据结构"><a class="markdownIt-Anchor" href="#ts-ast数据结构"></a> TS AST数据结构</h3>
<p>每一个待编译源码文件经过解析器的词法分析后，都会得到一个<code>AST</code>，该树的<strong>顶点结点</strong>为<code>SourceFile</code>，<strong>一般结点</strong>为<code>Node</code>，而<strong>叶结点</strong>则是一些特殊的<code>Node</code>结点，如下图所示：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210221225232.png?imageslim" alt="img" /></p>
<ul>
<li><code>Node</code>：<code>AST</code>中最基本的结点，通常不是叶结点；一般包含<code>pos</code>（在源码文件中的起始位置）、<code>end</code>（在源码文件中的结束位置）和<code>parent</code>（父结点）等属性，具体结构可以查看<code>TS</code>源码中的<code>Node interface</code>定义；</li>
<li><code>SourceFile</code>：<code>AST</code>中的顶点，本身也是一种<code>Node</code>，还包含了一些源码文件相关的信息以及获取源码的方法；</li>
</ul>
<h3 id="ts编译常用api"><a class="markdownIt-Anchor" href="#ts编译常用api"></a> TS编译常用API</h3>
<blockquote>
<p>注：以下均为ts namespace下的API；XXX意为某个Node interface的名称；</p>
</blockquote>
<ul>
<li><code>createSourceFile</code>：根据源码文本生成一个相应的<code>AST</code>（即<code>SourceFile</code>）；</li>
<li><code>createPrinter</code>：生成<code>TS</code>代码打印器实例，可以根据<code>AST</code>结点（包括<code>SourceFile</code>）信息生成相应的<code>TS</code>代码；</li>
<li><code>transform</code>：根据提供的<code>AST transformer</code>工厂函数，对<code>AST</code>结点进行转换；</li>
<li><code>isXXX</code>：快速判断某个<code>AST</code>结点是否为某种特定的结点；</li>
<li><code>factory.createXXX</code>：创建一个新的<code>AST</code>结点；</li>
<li><code>factory.updateXXX</code>：修改一个存在的<code>AST</code>结点；之前可以通过直接修改结点属性来修改结点信息，现在已经不推荐这么做了（新版<code>API</code>会逐渐把结点属性全部设置为只读）；</li>
<li><code>visitNode</code>：访问<code>AST</code>结点，可以通过<font color=#f00>访问器函数返回值</font>来替代或删除当前结点；</li>
<li><code>visitEachChild</code>：用法同<code>visitNode</code>类似，不过会<strong>向下遍历树的子节点</strong>；</li>
<li><code>forEachChild</code>：用于遍历<code>AST</code>结点的所有子结点，跟访问器不同，这里的返回值并不会影响遍历的结点；</li>
</ul>
<p>上述所有的<code>API</code>详情建议查看源码，或者直接在<code>IDE</code>中查看代码提示（很详细，有的甚至给出了代码示例）；<code>factory</code>是<code>TS4.0</code>新推出的工厂函数<code>API</code>，用于替代之前散乱的结点修改<code>API</code>，具体理由可以查看这个<a href="https://github.com/microsoft/TypeScript/pull/35282">pull</a>，从实践上来看新版的工厂函数<code>API</code>用起来确实更加统一了，使用成本就低了，毕竟和结点的<code>interface</code>一一对应了，老版<code>API</code>还会存在工厂函数名称与<code>interface</code>名称不一致的情况，写起来就有点坑；</p>
<h2 id="实现细节仅供参考"><a class="markdownIt-Anchor" href="#实现细节仅供参考"></a> 实现细节（仅供参考）</h2>
<p>本文中提到的需求并不需要通过创造新语法来实现，只是通过修改<code>AST</code>结构即可实现，因此还算是“比较轻松”；</p>
<h3 id="jsdoc基本语法"><a class="markdownIt-Anchor" href="#jsdoc基本语法"></a> JSDoc基本语法</h3>
<p><code>JSDoc</code>是一种扩展<code>js</code>注释用法的插件（主要是生成文档和提示），不过现在在各种<code>IDE</code>的广泛支持下，<code>JSDoc</code>算是一种事实上的注释标准了，且可以承担一部分同<code>TS</code>类似的类型注解功能；<code>JSDoc</code>可以被编译器识别成正确语法，且<code>TS</code>编译器解析时也会对<code>JSDoc</code>语法解析并生成<code>AST</code>结点；因此<code>JSDoc</code>语法可以作为语法扩展的一个突破点，其大致语法如下：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* comment</span></span><br><span class="line"><span class="comment">* <span class="doctag">@tagName</span> <span class="variable">tag</span>-comment</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">interface</span> XXX &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其本质上是利用了多行注释的部分，然后基于文本解析进行具体的细分：</p>
<ul>
<li><code>comment</code>：注释文本部分；</li>
<li><code>tagName</code>：注释标签；</li>
<li><code>tag-comment</code>：注释标签说明文本；</li>
</ul>
<p>事实上，<code>JSDoc</code>根据功能特性已经内置了一些标签，且标签后面的文本部分也做了更具体的语法切分；不过作为基于<code>JSDoc</code>语法的扩展，一般都是使用自定义的标签名称；</p>
<h3 id="jsdoc结点"><a class="markdownIt-Anchor" href="#jsdoc结点"></a> JSDoc结点</h3>
<p><code>TS</code>中的<code>JSDoc</code>结点并非是单独存在的，而是依附在<code>JSDoc</code>注释后面的语法结点，可以通过该结点的<code>jsDoc</code>属性来访问，不过需要注意的是目前<code>jsDoc</code>属性属于<code>API</code>的内部属性，因此结点接口声明文件上并未暴露；如：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * xxx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> a 参数1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">t1</span> (<span class="params"><span class="attr">a</span>: <span class="title class_">Test</span></span>): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> b = <span class="string">&#x27;xx&#x27;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line">    <span class="keyword">if</span> (a.<span class="property">name</span>) &#123;</span><br><span class="line">        <span class="comment">// 123</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210221225252.png?imageslim" alt="img" /></p>
<p>因此通过这些特性就可以定制一些自定义的<code>JSDoc</code>标签和语法格式，然后通过<code>AST</code>结点进行匹配，进而定制相应的<code>AST</code>结点；</p>
<h3 id="dsl设计"><a class="markdownIt-Anchor" href="#dsl设计"></a> DSL设计</h3>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@model</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">interface</span> XXX &#123;</span><br><span class="line">  <span class="comment">/** <span class="doctag">@default</span> value */</span></span><br><span class="line">  <span class="attr">prop1</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">prop2</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>@model</code>：<code>model</code>标签用于标记该声明类型需要进行初始化，使用特定标记可以加快遍历速度；</li>
<li><code>@default</code>：<code>default</code>标签用于显式标记属性的默认值，没有指定的则使用默认规则；</li>
<li><code>value</code>：用于指定默认值，可以是字面量，也可以是匿名函数，事实上其本质也可以是一段代码，取决于具体需求，可以解析成一个值就行ir；</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 输出的目标初始化函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">initXXX</span> (<span class="params"></span>): <span class="variable constant_">XXX</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">prop1</span>: xxx,</span><br><span class="line">    <span class="attr">prop2</span>: xxx</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="ast修改流程"><a class="markdownIt-Anchor" href="#ast修改流程"></a> AST修改流程</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210221225319.png?imageslim" alt="img" /></p>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>修改语言特性一直都让人望而却步，好像编译器和<code>AST</code>是有点遥不可及的东西；不过事实上接触了<code>TS</code>的编译器<code>API</code>后，发现其AST结构相当的透明，<code>API</code>自由度也是很大的，且相当的规范统一；再加上各种用于辅助查看<code>AST</code>结构的网站，其实修改<code>AST</code>也不是那么的遥远和困难；所以，如果不满足语言特性的功能，可以大胆地尝试自己去扩展或者修改。</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://stackoverflow.com/questions/44665650/generate-object-from-typescript-interface">javascript - Generate object from Typescript interface - Stack Overflow</a>：一种可能性</li>
<li><a href="https://github.com/google/intermock">google/intermock: Mocking library to create mock objects with fake data for TypeScript interfaces</a>：利用ts类型生成mock数据的插件</li>
<li><a href="https://stackoverflow.com/questions/37027776/how-to-stub-a-typescript-interface-type-definition">javascript - How to stub a Typescript-Interface / Type-definition? - Stack Overflow</a></li>
<li><a href="https://github.com/TypeStrong/ts-loader#getcustomtransformers">TypeStrong/ts-loader: TypeScript loader for webpack</a>：<code>ts-loader</code>开放了transformer的相关配置</li>
<li><a href="https://github.com/Igorbek/typescript-plugin-styled-components">Igorbek/typescript-plugin-styled-components: TypeScript transformer for improving the debugging experience of styled-components</a>：一个使用了TS transformer API的插件</li>
<li><a href="https://github.com/microsoft/TypeScript/wiki/Architectural-Overview">Architectural Overview · microsoft/TypeScript Wiki</a>：<code>TS</code>架构说明，主要是编译相关的架构</li>
<li><a href="https://www.jameslmilner.com/post/ts-ast-and-ts-morph-intro/">Getting Started With Handling TypeScript ASTs</a>：<code>AST</code>修改入门案例</li>
<li><a href="https://github.com/microsoft/TypeScript/pull/35282">Refactor node factory API, use node factory in parser by rbuckton · Pull Request #35282 · microsoft/TypeScript</a>：重构<code>TS AST</code>结点工厂函数的理由</li>
<li><a href="https://ts-ast-viewer.com/">ts-ast-viewer</a>：强大的<code>TS AST</code>结构查看工具，甚至给出了结点的工厂函数以及构造参数，有了它写<code>AST</code>结构就方便多了</li>
<li><a href="https://jsdoc.app/">Use JSDoc: Index</a></li>
<li><a href="https://javascript.xgqfrms.xyz/pdfs/TypeScript%20Language%20Specification.pdf">TypeScript Language Specification</a></li>
<li><a href="https://segmentfault.com/a/1190000023392288">探索类型系统的底层 - 自己实现一个 TypeScript - SegmentFault 思否</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/45898674">Typescript 编译过程 - 知乎</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://github.com/microsoft/TypeScript/wiki/Architectural-Overview#data-structures">https://github.com/microsoft/TypeScript/wiki/Architectural-Overview#data-structures</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>TS</tag>
        <tag>AST</tag>
      </tags>
  </entry>
  <entry>
    <title>基于ts-morph构建统一编译上下文</title>
    <url>/post/ts-morph-and-complier-context/</url>
    <content><![CDATA[<h2 id="关于-ts-morph"><a class="markdownIt-Anchor" href="#关于-ts-morph"></a> 关于 ts-morph</h2>
<p><code>ts-morph</code>是一层对<code>TS</code>编译<code>API</code>的封装<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，使得操作<code>AST</code>变得简单高效起来，且提供了开箱即用的<strong>项目级</strong>编译支持，因而可以很快的构建自己的<code>TS</code>项目编译上下文；除此以外，<code>ts-morph</code>基本上保留了所有原始<code>TS AST</code>节点类型的访问，因此如果有啥<code>TS</code>编译<code>API</code>目前还没封装暴露，可以完全退回到原始<code>API</code>进行相应的使用<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>，所以不必担心<code>ts-morph</code>会有过度封装而导致无法使用一些底层<code>API</code>。</p>
<h3 id="关于-ts-编译-api"><a class="markdownIt-Anchor" href="#关于-ts-编译-api"></a> 关于 TS 编译 API</h3>
<p>顾名思义，就是用于<code>TS</code>编译的，通常用于获取和编辑<code>TS AST</code>（抽象语法树）信息，直接通过<code>typescript</code>这个包提供；关于<code>TS</code>编译流程、<code>AST</code>数据结构以及常用的编译<code>API</code>就不再赘述，更多可以参考——<a href="https://note.xiexuefeng.cc/post/ts-ast-transform-from-interface-to-data/">TS AST转换实例：从类型声明生成初始化数据 | snowdream</a>；</p>
<h3 id="关于-ast"><a class="markdownIt-Anchor" href="#关于-ast"></a> 关于 AST</h3>
<p>简言之，<code>AST</code>可以获取到源码的所有（合法）语法信息，同时构造（或修改）<code>AST</code>也能得到对应的代码，可以理解为<code>AST</code>结构与代码之间是一种<strong>双射</strong>关系。</p>
<p><code>AST</code>的用处很多，常见的<code>language server</code>都会借助<code>AST</code>信息来进行各种语言<code>DX</code>功能开发（如：自动补全、类型显示、语法诊断、代码格式化等等）；同时，由于<code>AST</code>结构可以转换为代码，所以修改<code>AST</code>结构可以从语法层面进行代码的修改（这比直接从文本替换来说效率高多了），因此<code>AST</code>也被来扩展语法的使用（前提是合法的语法，即<strong>从一种合法的语法转为另一种合法的语法</strong>，以便提高开发效率）；</p>
<p><code>P.s</code>：如果修改<code>AST</code>已经不能满足你的语法需求了，那么是时候考虑进入诸如<code>TC39</code>这种语言标准化组织或者开辟自己的语言了😁。</p>
<span id="more"></span>
<h2 id="构建-vue-ts-统一编译上下文"><a class="markdownIt-Anchor" href="#构建-vue-ts-统一编译上下文"></a> 构建 Vue + TS 统一编译上下文</h2>
<p>众所周知，<code>Vue</code>单文件本质上就是一个<code>js</code>文件，那么在<code>Vue + TS</code>（即<code>Vue</code>使用脚本语言也是<code>TS</code>）的项目中把<code>Vue</code>文件中也视为<code>TS</code>文件是一种很自然的事情，这样的话就可以把<code>Vue</code>文件加入到<code>TS</code>编译上下文中，那么项目中<code>Vue</code>文件和<code>TS</code>文件可以<strong>共享同一套语法信息</strong>。</p>
<p>这么做的好处可以看看<code>Volar/Vetur</code>这种<code>Vue Language Server</code>插件就知道了，因为这样就可以把<code>Vue</code>和<code>TS</code>的类型信息一起使用了，如果体验过早期<code>Vue + TS</code>开发的人就会清楚<code>Vue</code>和<code>TS</code>分属不同的编译上下文是多么的痛苦了（具体表现就是<code>Vue template</code>和<code>script</code>不能互用类型信息，<code>Vue</code>和<code>TS</code>不能共享类型信息等）。</p>
<h3 id="自定义文件系统服务器"><a class="markdownIt-Anchor" href="#自定义文件系统服务器"></a> 自定义文件系统服务器</h3>
<p>由于<code>TS</code>编译器并不能直接解析<code>Vue</code>文件，因此需要先将<code>Vue</code>文件识别并转为对应的<code>TS</code>文件，然后手动挂载到项目源码文件中去即可；但是，如果每次都要对<code>Vue</code>文件进行物理的转换实在是不够优雅，这时候就可以用到<code>ts-morph</code>的自定义文件系统了，通过自定义文件系统可以<strong>劫持</strong>编译上下文获取源码文件的操作，因而可以在内存层面直接返回<code>Vue</code>文件对应编译后的<code>TS</code>源码，而不需要生成一个具体的文件。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220913184645464.png?imageslim" alt="image-20220913184645464" /></p>
<p>需要注意的是，如果直接按照<code>ts-morph</code>文档上<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>那样实现一个自定义文件系统服务器类还是相当繁琐的，因为需要一口气实现多达十几个实例方法，哪怕是一些你不需要自定义的文件操作；不过阅读其源码后发现，其实<code>ts-morph</code>对于其核心功能采用了<strong>分包</strong>的架构，其中在<code>@ts-morph/common</code>包中可以发现一个名为<code>RealFileSystemHost</code>的文件系统服务器类（可以理解为内置的一个默认的自定义文件系统服务器类），因此可以在此类的基础上<strong>继承</strong>实现真正的自定义类，从而只需要实现想要自定义的文件操作即可：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">RealFileSystemHost</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@ts-morph/common&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomFS</span> <span class="keyword">extends</span> <span class="title class_ inherited__">RealFileSystemHost</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"><span class="keyword">private</span> <span class="attr">projectRoot</span>: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="variable language_">super</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  </span><br><span class="line">  <span class="title function_">readFileSync</span>(<span class="attr">filePath</span>: <span class="built_in">string</span>, <span class="attr">encoding</span>?: <span class="built_in">string</span>): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="vue-文件编译为-ts-源码"><a class="markdownIt-Anchor" href="#vue-文件编译为-ts-源码"></a> Vue 文件编译为 TS 源码</h3>
<p>如果仅需要提取<code>Vue</code>文件中的<code>TS</code>部分，只需要提取其<code>script</code>部分即可（毕竟<code>template</code>和<code>style</code>部分也不能提供有效的<code>TS</code>信息）；而对于<code>Vue</code>的编译，最适合的工具自然是官方的<code>@vue/compiler-sfc</code>包了：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; compileScript, parse &#125; <span class="keyword">from</span> <span class="string">&#x27;@vue/compiler-sfc&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> vueAST = <span class="title function_">parse</span>(vueSourceCode, &#123;</span><br><span class="line">  <span class="attr">sourceRoot</span>: <span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line">  <span class="attr">filename</span>: <span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line">&#125;) <span class="comment">// 先提取vue整体AST</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> script = <span class="title function_">compileScript</span>(vueAST.<span class="property">descriptor</span>, &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line">&#125;); <span class="comment">// 然后再单独将script AST转为TS源码</span></span><br></pre></td></tr></table></figure>
<h2 id="统一编译上下文的应用language-server"><a class="markdownIt-Anchor" href="#统一编译上下文的应用language-server"></a> 统一编译上下文的应用：Language Server</h2>
<p>构建<code>Vue + TS</code>的统一编译上下文自然不是闲着无聊，这里我个人的目的就是为了实现<code>Language Server</code>的子集功能，用于支撑<code>DX</code>；</p>
<blockquote>
<p>注：既然现在已经存在这么多<code>Language Server</code>插件，为啥还要自己造轮子？那是由于如今的<code>Language Server</code>大多是基于<code>LSP</code><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>构建的<code>CS</code>架构，其客户端面向的是<code>IDE</code>，因此功能太重且耦合；而此处我需要的语言服务并不需要那么多，且客户端也不是<code>IDE</code>那种庞然大物。</p>
</blockquote>
<h3 id="获取-vue-props-类型"><a class="markdownIt-Anchor" href="#获取-vue-props-类型"></a> 获取 Vue props 类型</h3>
<p>要从<code>Vue</code>的<code>TS</code>源码中获取<code>props</code>的类型，首先要知道<code>Vue</code>编译成<code>TS</code>的内容为啥，总的来说<code>Vue3</code>编译成<code>TS</code>时本质上全变成了<code>options</code>声明形式（大概是为了兼容，其实<code>options</code>声明形式就是最本质的用法，<code>Vue3</code>加了<code>setup</code>也只是语法糖）：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">__defineComponent</span>(&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">props</span>: <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">setup</span>: <span class="comment">// ...</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>不过从结果来看，基于<code>Vue setup</code>模式 + <code>defineProps&lt;Type&gt;</code>（即通过字面量类型来声明<code>props</code>）的时候会与其它声明方式编译的结果有些许不同，这时在<code>setup</code>方法中会直接手动标注<code>props</code>的类型：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">__defineComponent</span>(&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">props</span>: <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">setup</span>: (<span class="attr">props</span>: __props) &#123;</span><br><span class="line">  	<span class="keyword">const</span> props = __props <span class="keyword">as</span> <span class="title class_">SomeType</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>因此根据这个区别可以采取不同的策略来获取<code>props</code>类型：</p>
<ul>
<li><code>Vue setup</code>模式 + <code>defineProps&lt;Type&gt;</code>：直接获取编译后的<strong>类型别名</strong>；</li>
<li>其他：从<code>props</code><strong>对象字面量</strong>来推断类型；</li>
</ul>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过事先对vue组件的ts编译，直接从其ts文件的SourceFile获取props type</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 适用于除defineProps&lt;Type&gt;()以外的vue3编译</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPropsTypeFromAST</span>(<span class="params"><span class="attr">ast</span>: <span class="title class_">SourceFile</span></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> props = ast.<span class="title function_">forEachChild</span>(<span class="function">(<span class="params">node</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 通过事先编译好的CarverryComponentProps类型直接获取</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Node</span>.<span class="title function_">isTypeAliasDeclaration</span>(node) &amp;&amp; node.<span class="title function_">getName</span>() === <span class="string">&#x27;CarverryComponentProps&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!props) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> props;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据vue编译生成的ts代码结构特点，从对应的default export节点截取出该组件的props类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> assignment default export声明节点</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPropsType</span>(<span class="params"><span class="attr">assignment</span>: <span class="title class_">ExportAssignment</span>, <span class="attr">ast</span>: <span class="title class_">SourceFile</span></span>) &#123;</span><br><span class="line">  <span class="comment">// 获取到defineComponent参数节点（对象）</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getObj</span> = (<span class="params"><span class="attr">node</span>: <span class="title class_">Node</span>&lt;ts.<span class="title class_">Node</span>&gt;</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Node</span>.<span class="title function_">isObjectLiteralExpression</span>(node)) &#123;</span><br><span class="line">      <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> node.<span class="property">forEachChild</span>&lt;<span class="title class_">Node</span>&lt;ts.<span class="property">Node</span>&gt;&gt;(getObj) <span class="keyword">as</span> <span class="title class_">Node</span>&lt;ts.<span class="property">ObjectLiteralExpression</span>&gt;;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">const</span> obj = assignment.<span class="title function_">forEachChild</span>(getObj);</span><br><span class="line">  <span class="keyword">if</span> (!obj) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 获取到setup方法声明节点</span></span><br><span class="line">  <span class="keyword">const</span> setup = obj.<span class="title function_">forEachChild</span>(<span class="function">(<span class="params">node</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Node</span>.<span class="title function_">isMethodDeclaration</span>(node) &amp;&amp; node.<span class="title function_">getName</span>() === <span class="string">&#x27;setup&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span> (!setup) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 获取到props声明节点</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getProps</span> = (<span class="params"><span class="attr">node</span>: <span class="title class_">Node</span>&lt;ts.<span class="title class_">Node</span>&gt;</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 貌似props的编译根据声明方式有所不同（目前只有setup模式，且通过defineProps&lt;Type&gt;的方式才会编译成props = __props as xxx）的形式</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Node</span>.<span class="title function_">isVariableDeclaration</span>(node) &amp;&amp; node.<span class="title function_">getName</span>() === <span class="string">&#x27;props&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> node.<span class="property">forEachChild</span>&lt;<span class="title class_">Node</span>&lt;ts.<span class="property">Node</span>&gt;&gt;(getProps) <span class="keyword">as</span> <span class="title class_">VariableDeclaration</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">const</span> props = setup.<span class="title function_">forEachChild</span>(getProps);</span><br><span class="line">  <span class="keyword">if</span> (!props) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">getPropsTypeFromAST</span>(ast);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> t = props.<span class="title function_">getType</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (t.<span class="title function_">getFlags</span>() === ts.<span class="property">TypeFlags</span>.<span class="property">Any</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">getPropsTypeFromAST</span>(ast);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> props;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="获取单个-prop-类型"><a class="markdownIt-Anchor" href="#获取单个-prop-类型"></a> 获取单个 prop 类型</h3>
<p>由于<code>props</code>本质上是个对象类型，而在<code>TS</code>运行时中获取某个对象类型的属性类型其实很简单：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">PropType</span> = <span class="title class_">ObjectType</span>[<span class="string">&#x27;propKey&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>不过在编译上下文中直接通过<code>AST</code>节点来获取某个对象类型中某个属性的类型就没那么直接了，好在如果这个对象类型是一个<strong>具名类型</strong>时，<code>ts-morph</code>有一个<strong>近乎作弊</strong>的方式可以跟在<code>TS</code>运行时一样获取某个属性的类型节点：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注：objectType指的就是具名类型节点</span></span><br><span class="line"><span class="keyword">const</span> propType = objectType.<span class="title function_">getSourceFile</span>().<span class="title function_">addTypeAlias</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;SomeAliasTypeName&#x27;</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="string">`ObjectTypeName[&#x27;propKey&#x27;]`</span>,</span><br><span class="line">&#125;); <span class="comment">// 直接返回属性的类型节点</span></span><br><span class="line"><span class="comment">// 这里本质上相当于在源码构造了一段代码：type SomeAliasTypeName = ObjectTypeName[&#x27;propKey&#x27;]</span></span><br></pre></td></tr></table></figure>
<h3 id="基于-vue-prop-类型过滤相同类型的变量"><a class="markdownIt-Anchor" href="#基于-vue-prop-类型过滤相同类型的变量"></a> 基于 Vue prop 类型过滤相同类型的变量</h3>
<p>假设这里有一堆潜在的可以被用于赋值给具体<code>prop</code>的变量，如何严格的从这些变量中过滤出兼容该<code>prop</code>类型的变量？其实简单的来说，这就是<strong>判断两个类型之间的兼容关系</strong>。幸运的是，<code>TS</code>官方暴露了一些类型关系判断相关的内部<code>API</code><sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup><sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup>，只不过并不是显式的暴露（即在<code>API</code>类型声明中是没有的），其中<code>TypeChecker</code>的<code>isTypeAssignableTo()</code>方法正是用了判断两个类型之间的兼容关系的：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">typeChecker.<span class="title function_">isTypeAssignableTo</span>(typeA, typeB) <span class="comment">// 判断typeB是否兼容与typeA；需要注意类型之间的顺序</span></span><br></pre></td></tr></table></figure>
<p>然后这个内部方法<code>ts-morph</code>并没有封装，因为实际使用时需要<strong>多一层路径</strong>：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">typeChecker.<span class="property">compilerObject</span>.<span class="title function_">isTypeAssignableTo</span>(typeA.<span class="property">compilerType</span>, typeB.<span class="property">compilerType</span>)</span><br></pre></td></tr></table></figure>
<p>不过由于<code>Vue3</code>的很多数据类型实际都套上了<code>Ref</code>泛型，而获取到的<code>prop</code>类型是不包含<code>Ref</code>泛型的，因此在判断类型兼容性时需要对具体变量进行<code>Ref</code>泛型的解套，不过好在<code>Vue3</code>本身提供了一个<code>UnwrapRef</code>泛型工具，专门用于提取<code>Ref</code>类型包裹的数据类型：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用vue自带的UnwrapRef泛型可以直接解套ref/computedRef类型，获取里面的数据类型</span></span><br><span class="line"><span class="comment">// import(&#x27;vue&#x27;)可直接在type alias声明中导入模块，避免需要对AST节点或源码直接插入import节点</span></span><br><span class="line"><span class="comment">// sourceFile就是变量所在源码文件的AST根节点</span></span><br><span class="line"><span class="keyword">const</span> aliasType = sourceFile.<span class="title function_">addTypeAlias</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;AliasTypeName&#x27;</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="string">`import(&#x27;vue&#x27;).UnwrapRef&lt;typeof 变量标识符名称&gt;`</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 这里就获取到了具体变量解套Ref后的类型</span></span><br></pre></td></tr></table></figure>
<h2 id="一些技巧"><a class="markdownIt-Anchor" href="#一些技巧"></a> 一些技巧</h2>
<h3 id="类型信息的输出"><a class="markdownIt-Anchor" href="#类型信息的输出"></a> 类型信息的输出</h3>
<p>在使用<code>IDE</code>写<code>TS</code>代码的时候，当<code>hover</code>到某个标识符上时，<code>IDE</code>会自动显示该标识符的类型信息，其实这里的类型信息就是通过编译<code>API</code>内部的格式化<code>API</code>进行输出的，其中格式化的选项（<code>flags</code>）很多，那么如何美观的输出一个类型节点的信息？基本上使用<code>ts.TypeFormatFlags.InTypeAlias</code>进行输出即可：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">typeChecker.<span class="title function_">getTypeText</span>(<span class="keyword">type</span>, <span class="literal">undefined</span>, ts.<span class="property">TypeFormatFlags</span>.<span class="property">InTypeAlias</span>) <span class="comment">// 这里就得到了比较美观的类型格式化信息</span></span><br></pre></td></tr></table></figure>
<p>不过默认输出时会自动对过多的信息采取用<code>...</code>来替代（即省略），如果不想省略任何信息，则可以加上<code>ts.TypeFormatFlags.NoTruncation</code>这个<code>flag</code>：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">typeChecker.<span class="title function_">getTypeText</span>(<span class="keyword">type</span>, <span class="literal">undefined</span>, ts.<span class="property">TypeFormatFlags</span>.<span class="property">InTypeAlias</span> | ts.<span class="property">TypeFormatFlags</span>.<span class="property">NoTruncation</span>) </span><br></pre></td></tr></table></figure>
<p>不过实践证明默认开启省略不是没有道理的，在<strong>复杂的嵌套类型</strong>中显示全部类型信息简直过于的冗长……</p>
<h3 id="多重泛型对象类型的解套"><a class="markdownIt-Anchor" href="#多重泛型对象类型的解套"></a> 多重泛型对象类型的解套</h3>
<p>在写<code>TS</code>的时候，经常看到一些类型显示为多重泛型的包裹，如：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> A = <span class="title class_">TypeA</span>&lt;<span class="title class_">TypeB</span>&lt;<span class="title class_">TypeC</span>&lt;D&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>如果此时对类型<code>A</code>的信息进行打印输出，实际上也就是多重泛型，<strong>很不直接</strong>，因此有没有办法直接看到最终的对象类型结构<sup class="footnote-ref"><a href="#fn7" id="fnref7">[7]</a></sup>？实际上通过一个泛型类型就可以对多重的泛型进行解套<sup class="footnote-ref"><a href="#fn8" id="fnref8">[8]</a></sup>：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Expand</span>&lt;T&gt; = T <span class="keyword">extends</span> infer O ? &#123; [K <span class="keyword">in</span> keyof O]: O[K] &#125; : <span class="built_in">never</span>;</span><br></pre></td></tr></table></figure>
<p>而在编译上下文中就可以直接在源码中注入这个工具泛型，然后使用<strong>类型别名</strong>的手段即可得到一个解套后的类型节点。</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://ts-morph.com/">https://ts-morph.com/</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://ts-morph.com/navigation/compiler-nodes">https://ts-morph.com/navigation/compiler-nodes</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://ts-morph.com/setup/file-system#custom-file-system">https://ts-morph.com/setup/file-system#custom-file-system</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://microsoft.github.io/language-server-protocol/">https://microsoft.github.io/language-server-protocol/</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://github.com/microsoft/TypeScript/issues/9879">https://github.com/microsoft/TypeScript/issues/9879</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn6" class="footnote-item"><p><a href="https://github.com/microsoft/TypeScript/issues/11728#issuecomment-257023378">https://github.com/microsoft/TypeScript/issues/11728#issuecomment-257023378</a> <a href="#fnref6" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn7" class="footnote-item"><p><a href="https://www.reddit.com/r/typescript/comments/qbbvah/compiler_api_how_to_print_out_fully_reduced/">https://www.reddit.com/r/typescript/comments/qbbvah/compiler_api_how_to_print_out_fully_reduced/</a> <a href="#fnref7" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn8" class="footnote-item"><p><a href="https://stackoverflow.com/questions/57683303/how-can-i-see-the-full-expanded-contract-of-a-typescript-type/57683652#57683652">https://stackoverflow.com/questions/57683303/how-can-i-see-the-full-expanded-contract-of-a-typescript-type/57683652#57683652</a> <a href="#fnref8" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>DX</category>
      </categories>
      <tags>
        <tag>TS</tag>
        <tag>Language Server</tag>
        <tag>编译</tag>
      </tags>
  </entry>
  <entry>
    <title>TS类型转换：union（联合）转tuple（元组）</title>
    <url>/post/ts-union-to-tuple/</url>
    <content><![CDATA[<h2 id="需求"><a class="markdownIt-Anchor" href="#需求"></a> 需求</h2>
<p>需求就是标题所示，需要有一个泛型类型能够把联合类型转化成一个<strong>相应顺序的元组类型</strong>：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">SourceUnion</span> = <span class="string">&#x27;key1&#x27;</span> | <span class="string">&#x27;key2&#x27;</span> | <span class="string">&#x27;key3&#x27;</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">TargetTuple</span> = <span class="title class_">UnionToTuple</span>&lt;<span class="title class_">SourceUnion</span>&gt; <span class="comment">// [&#x27;key1&#x27;, &#x27;key2&#x27;, &#x27;key3&#x27;]</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将联合类型转为对应的交叉函数类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> U 联合类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UnionToInterFunction</span>&lt;U&gt; =</span><br><span class="line">  (U <span class="keyword">extends</span> <span class="built_in">any</span> ? <span class="function">(<span class="params"><span class="attr">k</span>: () =&gt; U</span>) =&gt;</span> <span class="built_in">void</span> : <span class="built_in">never</span>) <span class="title function_">extends</span></span><br><span class="line">  (<span class="function">(<span class="params"><span class="attr">k</span>: infer I</span>) =&gt;</span> <span class="built_in">void</span>) ? I : <span class="built_in">never</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取联合类型中的最后一个类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> U 联合类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">GetUnionLast</span>&lt;U&gt; = <span class="title class_">UnionToInterFunction</span>&lt;U&gt; <span class="keyword">extends</span> &#123; (): infer A; &#125; ? A : <span class="built_in">never</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在元组类型中前置插入一个新的类型（元素）；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> Tuple 元组类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> E 新的类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Prepend</span>&lt;<span class="title class_">Tuple</span> <span class="keyword">extends</span> <span class="built_in">any</span>[], E&gt; = [E, ...<span class="title class_">Tuple</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 联合类型转元组类型；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> Union 联合类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> T 初始元组类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> Last 传入联合类型中的最后一个类型（元素），自动生成，内部使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UnionToTuple</span>&lt;<span class="title class_">Union</span>, T <span class="keyword">extends</span> <span class="built_in">any</span>[] = [], <span class="title class_">Last</span> = <span class="title class_">GetUnionLast</span>&lt;<span class="title class_">Union</span>&gt;&gt; = &#123;</span><br><span class="line">  <span class="number">0</span>: T;</span><br><span class="line">  <span class="number">1</span>: <span class="title class_">UnionToTuple</span>&lt;<span class="title class_">Exclude</span>&lt;<span class="title class_">Union</span>, <span class="title class_">Last</span>&gt;, <span class="title class_">Prepend</span>&lt;T, <span class="title class_">Last</span>&gt;&gt;</span><br><span class="line">&#125;[[<span class="title class_">Union</span>] <span class="keyword">extends</span> [<span class="built_in">never</span>] ? <span class="number">0</span> : <span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2>
<p>简单的来说就是使用递归算法，每次从联合类型（集合）中取出一个类型（元素），将该类型插入到已有的元组类型中，直至联合类型所有类型被取完；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226103221.png?imageslim" alt="img" /></p>
<h2 id="难点"><a class="markdownIt-Anchor" href="#难点"></a> 难点</h2>
<p>虽然思路说起来简单，但是由于<code>TS</code>类型系统目前很多语法没有被提供，因此无法像手写<code>JS</code>那样能够轻松遍历和递归之类的操作，因此会存在很多难点；</p>
<h3 id="如何取出联合类型中的一个元素"><a class="markdownIt-Anchor" href="#如何取出联合类型中的一个元素"></a> 如何取出联合类型中的一个元素？</h3>
<p>虽然联合类型从行为上来看可以视为集合，但是<code>TS</code>本身并没有给联合类型提供类似从集合中取值的操作；</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Union</span> = <span class="string">&#x27;a&#x27;</span> | <span class="string">&#x27;b&#x27;</span> | <span class="string">&#x27;c&#x27;</span></span><br><span class="line"><span class="keyword">type</span> E = <span class="title class_">Union</span>[<span class="number">1</span>] <span class="comment">// Property &#x27;1&#x27; does not exist on type &#x27;Union&#x27;</span></span><br></pre></td></tr></table></figure>
<p>所以要从联合类型中取出某个位置的元素，只能另辟蹊径；</p>
<ul>
<li>
<p><font color=#f00>重载的函数</font>在使用<code>infer</code>进行推断时，重载的部分会取最后一个声明：</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="variable constant_">FF</span> = &#123;</span><br><span class="line">  (): <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">  (): <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125; <span class="comment">// 一个重载的函数类型</span></span><br><span class="line"><span class="keyword">type</span> G = <span class="title class_">ReturnType</span>&lt;<span class="variable constant_">FF</span>&gt; <span class="comment">// &#x27;a&#x27;</span></span><br></pre></td></tr></table></figure>
<p><code>ReturnType</code>是内置的泛型类型，会返回<strong>函数的返回类型</strong>；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">ReturnType</span>&lt;T <span class="title function_">extends</span> (...<span class="attr">args</span>: <span class="built_in">any</span>) =&gt; <span class="built_in">any</span>&gt; = T <span class="title function_">extends</span> (...<span class="attr">args</span>: <span class="built_in">any</span>) =&gt; infer R ? R : <span class="built_in">any</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>将相同形状的函数类型进行交叉，<strong>等价于函数重载</strong>：</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="variable constant_">FF</span> = &#123;</span><br><span class="line">  (): <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">  (): <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> B = (<span class="function">() =&gt;</span> <span class="string">&#x27;b&#x27;</span>) &amp; (<span class="function">() =&gt;</span> <span class="string">&#x27;a&#x27;</span>) <span class="comment">// 函数的交叉</span></span><br><span class="line"><span class="keyword">type</span> G = <span class="variable constant_">FF</span> <span class="keyword">extends</span> B ? <span class="literal">true</span> : <span class="literal">false</span> <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>基于上述两个特性，就能够实现从联合类型中取出一个元素，只不过这个元素只能是最后一个：</p>
<ol>
<li>
<p>将联合类型转为交叉函数类型（利用<font color=#f00>函数参数类型可以逆变</font>的特性）</p>
 <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将联合类型转为对应的交叉函数类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> U 联合类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UnionToInterFunction</span>&lt;U&gt; =</span><br><span class="line">  (U <span class="keyword">extends</span> <span class="built_in">any</span> ? <span class="function">(<span class="params"><span class="attr">k</span>: () =&gt; U</span>) =&gt;</span> <span class="built_in">void</span> : <span class="built_in">never</span>) <span class="title function_">extends</span></span><br><span class="line">  (<span class="function">(<span class="params"><span class="attr">k</span>: infer I</span>) =&gt;</span> <span class="built_in">void</span>) ? I : <span class="built_in">never</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>获取交叉函数类型的返回类型</p>
 <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取联合类型中的最后一个类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> U 联合类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">GetUnionLast</span>&lt;U&gt; = <span class="title class_">UnionToInterFunction</span>&lt;U&gt; <span class="keyword">extends</span> &#123; (): infer A; &#125; ? A : <span class="built_in">never</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>这样就可以做到获取联合类型中的最后一个元素了：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> G = <span class="title class_">GetUnionLast</span>&lt;<span class="string">&#x27;a&#x27;</span> | <span class="string">&#x27;b&#x27;</span>&gt; <span class="comment">// &#x27;b&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="联合类型如何进行递归"><a class="markdownIt-Anchor" href="#联合类型如何进行递归"></a> 联合类型如何进行递归？</h3>
<p>在TS类型系统中如果对（嵌套）对象类型进行递归，是可以直接调用自身的，如：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">DeepReadonly</span>&lt;T&gt; = &#123; <span class="keyword">readonly</span> [P <span class="keyword">in</span> keyof T]: <span class="title class_">DeepReadonly</span>&lt;T[P]&gt; &#125;</span><br></pre></td></tr></table></figure>
<p>如果泛型本身是联合类型，想要通过直接在类型中调用自身就会报错：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Type alias &#x27;UnionToTuple&#x27; circularly references itself.</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UnionToTuple</span>&lt;<span class="title class_">Union</span>, T <span class="keyword">extends</span> <span class="built_in">any</span>[] = [], <span class="title class_">Last</span> = <span class="title class_">GetUnionLast</span>&lt;<span class="title class_">Union</span>&gt;&gt; = </span><br><span class="line">    [<span class="title class_">Union</span>] <span class="keyword">extends</span> [<span class="built_in">never</span>] ?</span><br><span class="line">    T :</span><br><span class="line">    <span class="title class_">UnionToTuple</span>&lt;<span class="title class_">Exclude</span>&lt;<span class="title class_">Union</span>, <span class="title class_">Last</span>&gt;, <span class="title class_">Prepend</span>&lt;T, <span class="title class_">Last</span>&gt;&gt;</span><br></pre></td></tr></table></figure>
<p>上述递归方式<code>TS</code>会报错，不过好在有一个迂回的解决办法：就是<font color=#f00>将三元运算结果包装成一个对象类型</font>，然后<strong>使用索引访问结果</strong>：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 联合类型转元组类型；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> Union 联合类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> T 初始元组类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> Last 传入联合类型中的最后一个类型（元素），自动生成，内部使用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UnionToTuple</span>&lt;<span class="title class_">Union</span>, T <span class="keyword">extends</span> <span class="built_in">any</span>[] = [], <span class="title class_">Last</span> = <span class="title class_">GetUnionLast</span>&lt;<span class="title class_">Union</span>&gt;&gt; = &#123;</span><br><span class="line">  <span class="number">0</span>: T; <span class="comment">// true分支</span></span><br><span class="line">  <span class="number">1</span>: <span class="title class_">UnionToTuple</span>&lt;<span class="title class_">Exclude</span>&lt;<span class="title class_">Union</span>, <span class="title class_">Last</span>&gt;, <span class="title class_">Prepend</span>&lt;T, <span class="title class_">Last</span>&gt;&gt; <span class="comment">// false分支</span></span><br><span class="line">&#125;[[<span class="title class_">Union</span>] <span class="keyword">extends</span> [<span class="built_in">never</span>] ? <span class="number">0</span> : <span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/58704376">[TypeScript奇技淫巧] union to tuple - 知乎</a></li>
<li><a href="https://stackoverflow.com/questions/55127004/how-to-transform-union-type-to-tuple-type">typescript - How to transform union type to tuple type - Stack Overflow</a></li>
</ul>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>TS</tag>
      </tags>
  </entry>
  <entry>
    <title>从类型系统的角度看TS</title>
    <url>/post/ts-in-type-system/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>很多时候<code>TS</code>这门语言只被人看作是<code>ES</code>的类型增强版，然而在我看来<code>TS</code>作为<code>ES</code>的超集，<code>ES</code>语法可以看作是一个维度，而多出的类型系统则可以看作是另一个维度；也就是说如果把<code>ES</code>看作是一个一维编程语言，那么<code>TS</code>就是一个二维编程语言；</p>
<p>这篇文章尝试从多出来的一个维度来描述<font color=#39f><code>TS</code>类型编程的独特性和一般性</font>；所以，涉及各种类型的定义和用法不再过多阐述。</p>
<p>跟大多数编程语言一样，<code>TS</code>类型编程也遵循程序语言设计的一些原则。</p>
<blockquote>
<p>程序设计语言的基本成分包括数据、运算、控制和传输等。</p>
</blockquote>
<span id="more"></span>
<h2 id="数据"><a class="markdownIt-Anchor" href="#数据"></a> 数据</h2>
<blockquote>
<p>数据是程序操作的对象，具有类型、名称、作用域、存储类别和生存期等属性，在程序运行过程中要为它分配内存空间。</p>
</blockquote>
<p>本来习惯性地想把<code>TS</code>中所有用来存储类型的数据称之为“变量”，但是变量在<font color=#39f><strong>严格意义上是可以在运行时改变值</strong></font>的，但是据观察，<code>TS</code>中的数据不允许多次赋值，所以也就不能称之为“变量”了，实际上所有的类型数据都是常量，不过声明合并那又是另一回事了；</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Test</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Test</span> = &#123;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125; <span class="comment">// 这样的重新赋值，TS是不允许的，因为此时该标识符被认为是ES中的变量了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Test</span> = &#123;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">string</span>; <span class="comment">// 事实上同类型的标识符也不能重复声明</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200614170456.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200614170522.png?imageslim" alt="img" /></p>
<h3 id="标识符"><a class="markdownIt-Anchor" href="#标识符"></a> 标识符</h3>
<p><code>TS</code>中的标识符就是用来命名<font color=#39f>类型，泛型，命名空间，模块</font>等事物的特定字符串；经实验，标识符的命名规则如下：</p>
<ul>
<li>
<p>不允许数字开头；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ❌</span></span><br><span class="line"><span class="keyword">type</span> 3d = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>不允许使用标点符号，下划线<code>_</code>和美元符号 $ 除外；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ❌</span></span><br><span class="line"><span class="keyword">type</span> d+ = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ✅</span></span><br><span class="line"><span class="keyword">type</span> d_ = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ✅</span></span><br><span class="line"><span class="keyword">type</span> $c$ = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>可以使用大小写英文字符，且<font color=red><strong>区分大小写</strong></font>；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ✅</span></span><br><span class="line"><span class="keyword">type</span> SOME_test = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 区分大小写</span></span><br><span class="line"><span class="keyword">type</span> some_test = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>中文字符也是可以的；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ✅</span></span><br><span class="line"><span class="keyword">type</span> 中文 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">a</span>: 中文 = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;ssss&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="值"><a class="markdownIt-Anchor" href="#值"></a> 值</h3>
<p><code>TS</code>类型系统的值有点特殊，因为其值对于<code>ES</code>而言是“类型”，也就是说<font color=#39f><strong>类型系统中的值就是类型</strong></font>；正是由于值的特殊性，容易让人忘记实际上用来约束<code>ES</code>代码的类型只不过是类型系统中普普通通的值；</p>
<h3 id="值类型"><a class="markdownIt-Anchor" href="#值类型"></a> 值类型</h3>
<blockquote>
<p>注：这里的值类型对于ES来说就是“类型的类型”了。</p>
</blockquote>
<ul>
<li><strong>原始类型</strong>：<code>string</code>，<code>number</code>，<code>boolean</code>，<code>null</code>，<code>undefined</code>，<code>symbol</code>，<code>bigint</code>，<code>void</code>；（本来理解原始类型应该类似于原子类型，应该是相互互斥的，但是<code>null</code>和<code>undefined</code>的存在打破了互斥关系……）</li>
<li><strong>顶部类型</strong>：类型系统中的根节点，即其他所有非顶部类型都是其子类型；如<code>any</code>  和<code>unknown</code>；</li>
<li><strong>底部类型</strong>：不存在对应值的一种类型，即不能兼容所有类型，包括自身；如<code>never</code>；</li>
<li><strong>复合类型</strong>：复合类型则是对原始类型，顶部类型和底部类型的一种组合；比如对象类型（<code>object</code>及由<code>interface</code>和<code>type</code>构建的对象类型），数组，元祖，枚举（<code>enum</code>关键字声明的类型），类（<code>class</code>关键字声明的类型）等；</li>
<li><strong>函数类型</strong>：<code>function</code>关键字声明的类型（<code>interface</code>也能声明出函数的结构）；</li>
<li><strong>字面量类型</strong>：这里的字面量就是指可以在<code>ES</code>中作为字面量使用的值；</li>
</ul>
<h3 id="数据结构类型"><a class="markdownIt-Anchor" href="#数据结构类型"></a> 数据结构类型</h3>
<p>根据<code>TS</code>类型声明关键字的不同，可以把存储的数据结构分为以下几种：</p>
<ul>
<li><code>interface</code></li>
<li><code>class</code></li>
<li><code>function</code></li>
<li><code>enum</code></li>
<li><code>type</code></li>
<li><code>namespace</code> / <code>moudle</code></li>
</ul>
<h2 id="运算"><a class="markdownIt-Anchor" href="#运算"></a> 运算</h2>
<p>类比于一般编程语言中的数据基本运算，实际上<code>TS</code>类型系统也是有值运算的，只不过运算比较特别；</p>
<h3 id="二元运算"><a class="markdownIt-Anchor" href="#二元运算"></a> 二元运算</h3>
<ul>
<li>联合类型：使用<code>|</code>符号对两个值进行联合，得到的效果跟数组相似；</li>
<li>交叉类型：使用<code>&amp;</code>符号对两个值进行交叉；</li>
</ul>
<h3 id="三元运算"><a class="markdownIt-Anchor" href="#三元运算"></a> 三元运算</h3>
<ul>
<li>条件运算：跟其他编程语言中一样，使用三元运算符<code>?:</code>来进行条件运算；</li>
</ul>
<h2 id="集合"><a class="markdownIt-Anchor" href="#集合"></a> 集合</h2>
<blockquote>
<p>注：本来是想把联合类型当作是类型系统中的数组结构的，但是仔细一想好像不严谨，因为联合类型自带去重，因此更像是集合结构；</p>
</blockquote>
<p>在类型系统中，并没有显式的集合数据结构，但是可以把联合类型当作是类型系统中的集合，因为很多时候联合类型的表现跟其他编程语言中的集合是相似的；比如：</p>
<ul>
<li>
<p>组成联合类型的其中每个值可以看作是一个元素；</p>
</li>
<li>
<p>可后续<font color=#39f><strong>添加新元素和移除</strong></font>（移除指定元素需要函数来支持）；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> A = <span class="built_in">number</span> | <span class="built_in">string</span></span><br><span class="line"><span class="keyword">type</span> B = A | <span class="built_in">boolean</span> <span class="comment">// 后续可以利用 | 符号继续添加</span></span><br><span class="line"><span class="keyword">type</span> C = <span class="title class_">Exclude</span>&lt;A, <span class="built_in">number</span>&gt; <span class="comment">// 可以利用Exclude函数进行去除指定元素</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200614170549.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200614170617.png?imageslim" alt="img" /></p>
</li>
<li>
<p>添加元素时会<font color=#39f><strong>自动去重</strong></font>；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> a = <span class="built_in">number</span> | <span class="built_in">string</span> | <span class="built_in">boolean</span></span><br><span class="line"><span class="keyword">type</span> b = a | <span class="built_in">number</span> <span class="comment">// 由于联合类型a已经包含number，所以再次添加时会去重</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200614170635.png?imageslim" alt="img" /></p>
</li>
<li>
<p>可进行<font color=#39f><strong>遍历</strong></font>，使用关键字<code>in</code>来对象类型中展开；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> keys = <span class="string">&#x27;name&#x27;</span> | <span class="string">&#x27;age&#x27;</span> | <span class="string">&#x27;other&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">ForStep</span>&lt;T <span class="keyword">extends</span> keyof <span class="built_in">any</span>&gt; = &#123;</span><br><span class="line">  [P <span class="keyword">in</span> T]: P | <span class="string">&#x27;value&#x27;</span>; <span class="comment">// 利用in对集合进行遍历，然后可以对元素进行一些操作</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> test = <span class="title class_">ForStep</span>&lt;keys&gt;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200614170656.png?imageslim" alt="img" /></p>
</li>
<li>
<p>可进行<font color=#39f>映射</font>，利用<font color=#39f><strong>分布式条件类型</strong></font>可对集合进行映射处理；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> a = <span class="built_in">number</span> | <span class="built_in">string</span> | <span class="built_in">boolean</span></span><br><span class="line"><span class="keyword">type</span> b&lt;T&gt; = T <span class="keyword">extends</span> <span class="built_in">string</span> ? <span class="string">&#x27;test&#x27;</span> : T <span class="comment">// 将元素string替换成字符串test</span></span><br><span class="line"><span class="keyword">type</span> c = b&lt;a&gt; <span class="comment">// 进行映射处理</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200614170722.png?imageslim" alt="img" /></p>
</li>
</ul>
<h2 id="元组"><a class="markdownIt-Anchor" href="#元组"></a> 元组</h2>
<p>元组实际上就是一组元素类型固定以及长度固定的数组类型，因此其很多操作都可以类比于<code>JS</code>中的数组来使用；</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="variable constant_">T1</span> = [<span class="built_in">number</span>, <span class="built_in">string</span>, <span class="built_in">boolean</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T5</span> = <span class="variable constant_">T1</span> <span class="keyword">extends</span> &#123;</span><br><span class="line">  <span class="number">0</span>: <span class="built_in">number</span>,</span><br><span class="line">  <span class="number">1</span>: <span class="built_in">string</span>,</span><br><span class="line">  <span class="number">2</span>: <span class="built_in">boolean</span>,</span><br><span class="line">  <span class="attr">length</span>: <span class="number">3</span></span><br><span class="line">&#125; ? <span class="literal">true</span> : <span class="literal">false</span> <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<p>如上所示，在<code>TS</code>内部，可以<strong>近似地</strong>把一个元组类型当做是一个拥有<code>length</code>属性的对象类型（这种处理很自然，因为在<code>JS</code>中数组无非就是一种特殊的对象，其键名为数字），之所以说是近似，是因为在获取元组类型的key时，可以看到除了索引和<code>length</code>属性，<font color=#f00>还多了<code>JS</code>数组原型上的属性</font>；</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="variable constant_">T1</span> = [<span class="built_in">number</span>, <span class="built_in">string</span>, <span class="built_in">boolean</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T6</span> = keyof <span class="variable constant_">T1</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210209233411.png?imageslim" alt="img" /></p>
<p>不过也有一些技巧可以<strong>只获取到元组类型的数字索引</strong>：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取元组类型的数字索引；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> Tuple 元组类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">GetTupleKeys</span>&lt;<span class="title class_">Tuple</span> <span class="keyword">extends</span> <span class="built_in">unknown</span>[]&gt; = <span class="title class_">Exclude</span>&lt;keyof <span class="title class_">Tuple</span>, keyof []&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="variable constant_">T1</span> = [<span class="built_in">number</span>, <span class="built_in">string</span>, <span class="built_in">boolean</span>]</span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T7</span> = <span class="title class_">GetTupleKeys</span>&lt;<span class="variable constant_">T1</span>&gt; <span class="comment">// &quot;0&quot; | &quot;1&quot; | &quot;2&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h3>
<ul>
<li>
<p><strong>索引访问</strong>：元组类型也能像一般对象那样的索引访问，当然也包含联合索引；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="variable constant_">T1</span> = [<span class="built_in">number</span>, <span class="built_in">string</span>, <span class="built_in">boolean</span>]</span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T2</span> = <span class="variable constant_">T1</span>[<span class="number">2</span>] <span class="comment">// boolean</span></span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T22</span> = <span class="variable constant_">T1</span>[<span class="number">2</span> | <span class="number">0</span>] <span class="comment">// number | boolean</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>后置插入元素</strong>：使用的是<code>TS</code>里面的扩展运算符特性；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Push</span>&lt;<span class="title class_">Tuple</span> <span class="keyword">extends</span> <span class="built_in">unknown</span>[], <span class="title class_">Element</span>&gt; = [...<span class="title class_">Tuple</span>, <span class="title class_">Element</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T1</span> = [<span class="built_in">number</span>, <span class="built_in">string</span>, <span class="built_in">boolean</span>]</span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T3</span> = <span class="title class_">Push</span>&lt;<span class="variable constant_">T1</span>, <span class="built_in">string</span>[]&gt; <span class="comment">// [number, string, boolean, string]</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>前置插入元素</strong>：原理跟后置插入同理；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Prepend</span>&lt;<span class="title class_">Tuple</span> <span class="keyword">extends</span> <span class="built_in">unknown</span>[], <span class="title class_">Element</span>&gt; = [<span class="title class_">Element</span>, ...<span class="title class_">Tuple</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T1</span> = [<span class="built_in">number</span>, <span class="built_in">string</span>, <span class="built_in">boolean</span>]</span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T4</span> = <span class="title class_">Prepend</span>&lt;<span class="variable constant_">T1</span>, <span class="built_in">number</span>[]&gt; <span class="comment">// [number[], number, string, boolean]</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>合并两个元组</strong>：</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Concat</span>&lt;<span class="variable constant_">T1</span> <span class="keyword">extends</span> <span class="built_in">unknown</span>[], <span class="variable constant_">T2</span> <span class="keyword">extends</span> <span class="built_in">unknown</span>[]&gt; = [...<span class="variable constant_">T1</span>, ...<span class="variable constant_">T2</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T1</span> = [<span class="built_in">number</span>, <span class="built_in">string</span>, <span class="built_in">boolean</span>]</span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T12</span> = <span class="title class_">Concat</span>&lt;<span class="variable constant_">T1</span>, [<span class="built_in">string</span>[], <span class="built_in">boolean</span>[]]&gt; <span class="comment">// [number, string, boolean, string[], boolean[]]</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>遍历操作</strong>：原理实际上跟遍历对象类型一样；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="variable constant_">T1</span> = [<span class="built_in">number</span>, <span class="built_in">string</span>, <span class="built_in">boolean</span>]</span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T13</span> = &#123;</span><br><span class="line">  [K <span class="keyword">in</span> <span class="title class_">GetTupleKeys</span>&lt;<span class="variable constant_">T1</span>&gt;]: <span class="function">(<span class="params"><span class="attr">params</span>: T1[K]</span>) =&gt;</span> <span class="built_in">void</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210209233426.png?imageslim" alt="img" /></p>
</li>
</ul>
<h3 id="扩展操作"><a class="markdownIt-Anchor" href="#扩展操作"></a> 扩展操作</h3>
<p>所谓的扩展操作就是指需要一些技巧来中转达到目的，而没有快捷的语法支持，且在类型系统中使用场景可能比较有限；</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将联合类型转为对应的交叉函数类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> U 联合类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">UnionToInterFunction</span>&lt;U&gt; =</span><br><span class="line">  (U <span class="keyword">extends</span> <span class="built_in">any</span> ? <span class="function">(<span class="params"><span class="attr">k</span>: () =&gt; U</span>) =&gt;</span> <span class="built_in">void</span> : <span class="built_in">never</span>) <span class="title function_">extends</span></span><br><span class="line">  (<span class="function">(<span class="params"><span class="attr">k</span>: infer I</span>) =&gt;</span> <span class="built_in">void</span>) ? I : <span class="built_in">never</span></span><br></pre></td></tr></table></figure>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取联合类型中的最后一个类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@template</span> U 联合类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">GetUnionLast</span>&lt;U&gt; = <span class="title class_">UnionToInterFunction</span>&lt;U&gt; <span class="keyword">extends</span> &#123; (): infer A; &#125; ? A : <span class="built_in">never</span></span><br></pre></td></tr></table></figure>
<ul>
<li>
<p><strong>删除最后一个元素</strong>：</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Pop</span>&lt;<span class="title class_">Tuple</span> <span class="keyword">extends</span> <span class="built_in">unknown</span>[], <span class="title class_">Index</span> = <span class="title class_">GetTupleKeys</span>&lt;<span class="title class_">Tuple</span>&gt;, <span class="title class_">RemoveKey</span> = <span class="title class_">GetUnionLast</span>&lt;<span class="title class_">Index</span>&gt;&gt; = &#123;</span><br><span class="line">  [I <span class="keyword">in</span> <span class="title class_">Exclude</span>&lt;<span class="title class_">Index</span>, <span class="title class_">RemoveKey</span>&gt;]: <span class="title class_">Tuple</span>[I];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="variable constant_">T1</span> = [<span class="built_in">number</span>, <span class="built_in">string</span>, <span class="built_in">boolean</span>]</span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T8</span> = <span class="title class_">Pop</span>&lt;<span class="variable constant_">T1</span>&gt;</span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T9</span> = <span class="variable constant_">T8</span>[<span class="number">2</span>] <span class="comment">// Property &#x27;2&#x27; does not exist on type &#x27;Pop&lt;T1, &quot;0&quot; | &quot;1&quot; | &quot;2&quot;, &quot;2&quot;&gt;&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210209233446.png?imageslim" alt="img" /></p>
</li>
<li>
<p><strong>删除指定位置元素</strong>：这种方式实际上仅仅是把指定索引位置的元素去除，而其他位置的元素依然保持在原索引位置，因此并非真正意义上像<code>JS</code>数组中的删除一样；</p>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">RemoveElementFromIndex</span>&lt;<span class="title class_">Tuple</span> <span class="keyword">extends</span> <span class="built_in">unknown</span>[], <span class="title class_">Pos</span> <span class="keyword">extends</span> <span class="built_in">string</span> = <span class="string">&#x27;0&#x27;</span>, <span class="title class_">Index</span> = <span class="title class_">GetTupleKeys</span>&lt;<span class="title class_">Tuple</span>&gt;&gt; = &#123;</span><br><span class="line">  [I <span class="keyword">in</span> <span class="title class_">Exclude</span>&lt;<span class="title class_">Index</span>, <span class="title class_">Pos</span>&gt;]: <span class="title class_">Tuple</span>[I];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
  <figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="variable constant_">T1</span> = [<span class="built_in">number</span>, <span class="built_in">string</span>, <span class="built_in">boolean</span>]</span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T10</span> = <span class="title class_">RemoveElementFromIndex</span>&lt;<span class="variable constant_">T1</span>, <span class="string">&#x27;1&#x27;</span>&gt;</span><br><span class="line"><span class="keyword">type</span> <span class="variable constant_">T11</span> = <span class="variable constant_">T10</span>[<span class="number">1</span>] <span class="comment">// Property &#x27;1&#x27; does not exist on type &#x27;RemoveElementFromIndex&lt;T1, &quot;1&quot;, &quot;0&quot; | &quot;1&quot; | &quot;2&quot;&gt;&#x27;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210209233501.png?imageslim" alt="img" /></p>
</li>
</ul>
<h2 id="对象"><a class="markdownIt-Anchor" href="#对象"></a> 对象</h2>
<p>类型系统中的对象就是对象类型（可以由<code>interface</code>，<code>type</code>甚至是<code>class</code>创建得到），对象类型具有跟<code>ES</code>中对象相似的结构，只不过键值是类型而已；</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">interface</span> A &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> B = &#123;</span><br><span class="line">  <span class="keyword">readonly</span> <span class="attr">ok</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">size</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">other</span>?: <span class="built_in">string</span>[];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> <span class="keyword">class</span> <span class="title class_">AAA</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="built_in">string</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="title function_">some</span> (<span class="attr">word</span>: <span class="built_in">string</span>): <span class="title class_">Promise</span>&lt;<span class="built_in">boolean</span>&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="索引访问"><a class="markdownIt-Anchor" href="#索引访问"></a> 索引访问</h3>
<p>类型系统中的对象也是支持通过索引来访问相应属性的值，只不过<font color=#f00>只能通过<code>[key]</code>（中括号）的方式</font>进行访问，不能像<code>ES</code>中那样通过<code>.</code>（点符号）来访问！</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> C = A[<span class="string">&#x27;age&#x27;</span>] | B[<span class="string">&#x27;ok&#x27;</span>] | <span class="variable constant_">AAA</span>[<span class="string">&#x27;some&#x27;</span>] <span class="comment">// 没错，class也能当做对象进行访问</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200624175618.png?imageslim" alt="img" /></p>
<p>对象中属性的修饰符（或者类成员的修饰符）则不会被带入到键值，也就是通过索引访问访问只能得到属性值；不过如果是可选属性，那么属性值默认会与<code>undefined</code>进行联合；</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> D = &#123;</span><br><span class="line">  <span class="attr">extra</span>: B[<span class="string">&#x27;other&#x27;</span>]; <span class="comment">// 访问可选属性</span></span><br><span class="line">  <span class="attr">some</span>: B[<span class="string">&#x27;ok&#x27;</span>]; <span class="comment">// 访问readonly属性</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200624175635.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200624175652.png?imageslim" alt="img" /></p>
<p>不仅如此，索引访问<font color=#39f>还支持使用集合（也就是联合类型）来进行一次访问多个属性值</font>，且将多个属性值进行联合，最后得到一个集合；</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> E = B[<span class="string">&#x27;ok&#x27;</span> | <span class="string">&#x27;other&#x27;</span>] <span class="comment">// 还可以用联合类型来访问多个属性值</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200624175708.png?imageslim" alt="img" /></p>
<h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h2>
<blockquote>
<p>注：泛型类型（<code>generic type</code>）指的就是<code>TS</code>中带泛型的类型。</p>
</blockquote>
<p>同样地，类型系统中并没有显式声明函数的语法；但是<font color=#39f>泛型类型</font>完全可以当作是类型系统中的函数，因为泛型类型可以接受参数并返回不同的值，也就是说泛型类型具备入参（输入）和出参（输出）的形式。如常用的官方内置泛型类型<code>Pick</code>：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">Pick</span>&lt;T, U <span class="keyword">extends</span> keyof T&gt; = &#123;</span><br><span class="line">  [K <span class="keyword">in</span> U]: T[K];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面这段代码就可以理解为一个定了两个参数的函数，这个函数会对第二个参数进行遍历，然后构成一个新的对象类型，并返回这个值；</p>
<h3 id="递归"><a class="markdownIt-Anchor" href="#递归"></a> 递归</h3>
<p>没错，类型系统中的“函数”也能够<font color=#39f>调用自身</font>，如：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">DeepReadonly</span>&lt;T&gt; = &#123; <span class="keyword">readonly</span> [P <span class="keyword">in</span> keyof T]: <span class="title class_">DeepReadonly</span>&lt;T[P]&gt; &#125;</span><br></pre></td></tr></table></figure>
<h2 id="控制语句"><a class="markdownIt-Anchor" href="#控制语句"></a> 控制语句</h2>
<p>类型系统中并没有其他编程语言那种使用独立的关键字和语法结构显式的控制语句，但是也有某些关键字能够起到类似的作用。这个局面个人猜测可能与<code>TS</code>本身就包含了<code>ES</code>的全部语法，导致使用独立关键字和语法结构来定义控制语句会出现冲突（除非定义一套互斥的语法）；</p>
<h3 id="条件语句"><a class="markdownIt-Anchor" href="#条件语句"></a> 条件语句</h3>
<blockquote>
<p>T extends U ? True分支 : False分支</p>
</blockquote>
<p>使用<code>extends</code>关键字来获取条件结果，三元运算符<code>?:</code>来控制条件分支，这就是类型系统中特有的条件语句，当然，条件语句也是可以嵌套的。</p>
<h3 id="循环语句"><a class="markdownIt-Anchor" href="#循环语句"></a> 循环语句</h3>
<blockquote>
<p>[K in Union Type]</p>
</blockquote>
<p>使用关键字<code>in</code>可以在对象类型索引签名中遍历集合（也就是联合类型），并<strong>能够得到集合中的每个元素</strong>，进行下一步控制；</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/136254808">【万字长文】深入理解 Typescript 高级用法 - 知乎</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E9%A1%9E%E5%9E%8B%E7%B3%BB%E7%B5%B1">类型系统 - 维基百科，自由的百科全书</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/64446259">浅谈 TypeScript 类型系统 - 知乎</a></li>
<li><a href="http://www.tup.com.cn/upload/books/yz/075519-01.pdf">附件：程序设计语言基础知识.pdf</a></li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>TS</tag>
      </tags>
  </entry>
  <entry>
    <title>Onedrive API的使用</title>
    <url>/post/using-onedrive-api/</url>
    <content><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<blockquote>
<p>OneDrive 是微软公司提供的一项云存储服务。用户可以通过 Microsoft 账户注册 OneDrive 后获得一定量的免费存储空间，例如起初通常有 5GB 的免费存储空间。OneDrive 支持多种操作系统，包括 Windows、macOS、iOS、Android 等。用户可以在不同设备上同步文件，并能够通过设置共享链接与他人共享文件。</p>
</blockquote>
<p>对我来说<code>Onedrive</code>是一个很不错的云同步工具，我日常用它来进行笔记数据的多端同步，然后搭配<code>Obsidian</code>这类<code>Local First</code>的笔记<code>APP</code>进行使用，就可以安心地在多端进行笔记同步（顺便完成数据的备份）。总得来说，5GB的免费空间对于笔记这类文档资源来说可以用好多年了，且<code>Onedrive</code>的文件同步真的很快速且安全，很少出现同步错误的情况。</p>
<p><code>Onedrive</code>同样提供了<code>API</code>的方式让开发者去访问授权用户的存储空间，进行存储空间内文件的增删改查相关操作，以便开发集成<code>Onedrive</code>的应用。不过我这里主要是利用<code>Onedrive</code>的<code>API</code>去接入自动化服务，以便可以让自动化服务能够修改特定文件达到<strong>个人信息流</strong>入口聚合的功能。</p>
<p>虽说这里我使用<code>Onedrive API</code>的目的只是为了访问自身的存储空间，但实际上访问其它授权用户的存储空间也是一样的流程，没有区别。</p>
<span id="more"></span>
<h1 id="前置准备"><a class="markdownIt-Anchor" href="#前置准备"></a> 前置准备</h1>
<p>目前使用<code>Onedrive</code>的<code>API</code>都需要先到<a href="https://aka.ms/AppRegistrations/?referrer=https%3A%2F%2Fdev.onedrive.com">Microsoft Azure</a>去注册一个应用<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240523153605.png?imageslim" alt="image.png" /></p>
<p>注册应用要填的内容很少，除了应用名称，就是选择应用面向的微软账户类型了（一般选个人账户就行）；还有一个重定向URI是可选的，这个就是用来返回用户授权码的回调地址，也就是当微软用户对当前应用完成授权后会返回的一个地址（其中授权码会以<code>code=xxx</code>的形式放在路径中）。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240523154248.png?imageslim" alt="image.png" /></p>
<p>如果是像我这样纯个人使用，重定向URI填个<code>localhost</code>的地址就行，也能拿到授权码。</p>
<h2 id="添加api权限"><a class="markdownIt-Anchor" href="#添加api权限"></a> 添加API权限</h2>
<p>注册完应用后，需要添加该应用的具体要使用权限点，以便向用户进行授权申请。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240523155020.png?imageslim" alt="image.png" /></p>
<p><code>Onedrive</code>相关的<code>API</code>权限都放在<code>Microsoft Graph</code>分组中，直接在该分组中进行搜索查找即可。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240523155451.png?imageslim" alt="image.png" /></p>
<p>对于<code>Onedrive</code>来说，常用的权限无非就是文件的读写了，因此找到<code>Files</code>一栏，根据需要自己找到合适范围的读写权限点即可：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240523155840.png?imageslim" alt="image.png" /></p>
<p>不过不难发现，这里的读写权限覆盖范围实际上是由小及大的，其中对于<code>Files.ReadWrite.AppFolder</code>这个权限点来说，它能对<code>Onedrive</code>的应用文件夹下拥有读写权限，这也是很多<code>Onedrive</code>第三方应用所选的权限点。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240523160223.png?imageslim" alt="image.png" /></p>
<p>除了读写权限，<code>Onedrive</code>应用还有一个权限也是经常要用到的，就是<code>offline_access</code>这个权限，该权限可以保证在授权完成后哪怕<strong>用户本身没有在线</strong>也可以使用进行授权的<code>API</code>对数据进行访问和操作。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240523160526.png?imageslim" alt="image.png" /></p>
<h2 id="创建客户端密码"><a class="markdownIt-Anchor" href="#创建客户端密码"></a> 创建客户端密码</h2>
<p>在基于请求获取<code>access token</code>（访问令牌）和<code>refresh token</code>（刷新令牌）时，除了<code>auth code/refresh token</code>，还要加上客户端密码才能得到想要的<code>token</code>信息。当然，除了客户端密码这种形式，还可以用证书（秘钥）的形式进行<code>token</code>的获取<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>，理论上使用证书这种形式应该会更安全一点。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240523161705.png?imageslim" alt="image.png" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240523161740.png?imageslim" alt="image.png" /></p>
<p>可以根据需要选择客户端密码的有效期，添加完后就会生成一个客户端密码，复制进行传参即可<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>。</p>
<h1 id="授权流程"><a class="markdownIt-Anchor" href="#授权流程"></a> 授权流程</h1>
<p>当应用注册以及相关的应用配置都完成了后，就可以开始基于<code>API</code>进行<code>Onedrive</code>的相关操作了。不过由于所有的<code>API</code>操作都需要用到<code>access token</code>，所以需要先完成授权，而授权流程如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240523164301.png?imageslim" alt="image.png" /></p>
<p>如图所示，先完成授权得到授权码，然后兑换授权码就可以得到最初的<code>access token</code>以及<code>refresh token</code>；由于<code>access token</code>只有一个小时的有效期，当<code>access token</code>失效后就可以兑换之前的<code>refresh token</code>得到新的<code>access token</code>和新的<code>refresh token</code>。因此完成授权后，理论上可以长期得到有效的<code>access token</code>，保证后续<code>API</code>的正常请求。</p>
<h3 id="关于-tenant"><a class="markdownIt-Anchor" href="#关于-tenant"></a> 关于 tenant</h3>
<p>上述获取授权码和令牌的接口中，有一个<code>tenant</code>的参数，实际上就跟应用申请的账户类型有关：</p>
<ul>
<li><code>common</code>：对应的账户类型为组织和个人账户</li>
<li><code>organizations</code>：对应的账户类型为组织账户</li>
<li><code>consumers</code>：对应的账户为个人账户</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240513172927.png?imageslim" alt="image.png" /></p>
<p>举个例子，如果应用选择的账户类型为<strong>个人账户</strong>时，对应的授权接口地址如下：</p>
<ul>
<li><a href="https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize">https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize</a></li>
</ul>
<p>如果传错了<code>tenant</code>（也就是用错了请求地址），则会得到如下的接口报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">The request is not valid for the application&#x27;s &#x27;userAudience&#x27; configuration. In order to use /common/ endpoint, the application must not be configured with &#x27;Consumer&#x27; as the user audience. The userAudience should be configured with &#x27;All&#x27; to use /common/ endpoint.</span><br></pre></td></tr></table></figure>
<h1 id="onedrive-api"><a class="markdownIt-Anchor" href="#onedrive-api"></a> Onedrive API</h1>
<p><code>Onedrive API</code>的本质就是对<code>DriveItems</code>进行操作，因此只需要查看<code>DriveItems</code>列出的<a href="https://learn.microsoft.com/zh-cn/onedrive/developer/rest-api/resources/driveitem?view=odsp-graph-online#methods">API列表</a>即可，根据需要自行索引。如果只是访问用户的存储空间，那么对应的接口<code>Base URL</code><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>如下：</p>
<ul>
<li><a href="https://graph.microsoft.com/v1.0/me">https://graph.microsoft.com/v1.0/me</a></li>
</ul>
<p>然后根据<code>API</code>列表给出的相对路径进行拼接即可得到完整的请求地址：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240523171031.png?imageslim" alt="image.png" /></p>
<h2 id="文件访问的方式"><a class="markdownIt-Anchor" href="#文件访问的方式"></a> 文件访问的方式</h2>
<p>如果要访问具体的文件或文件夹，有两种方式：</p>
<ul>
<li>一种是通过<code>item-id</code>进行访问，即<code>/drive/items/&#123;item-id&#125;</code></li>
<li>而另一种就很符合直觉，即通过文件的绝对路径进行访问，<code>/drive/root:/path/to/file</code></li>
</ul>
<p>虽然很多接口都只列出了<code>item-id</code>形式的<code>API</code>地址，不过实测使用文件的绝对路径方式也能正常请求，因此我个人采用的事基于文件路径的形式进行接口请求。举个例子，如果在<code>Onedrive</code>存储空间下有个<code>xxx</code>文件夹，<code>xxx</code>文件夹中有个<code>test.md</code>的文件，那么下载该文件的请求地址为：</p>
<ul>
<li><a href="https://graph.microsoft.com/v1.0/me/drive/root:/xxx/test.md:/content">https://graph.microsoft.com/v1.0/me/drive/root:/xxx/test.md:/content</a></li>
</ul>
<h3 id="access-token-的使用"><a class="markdownIt-Anchor" href="#access-token-的使用"></a> access token 的使用</h3>
<p>对接过使用<code>JWT</code>的接口的人对这套流程应该很熟悉了，就是在请求头里加上一个<code>Authorization</code>头：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Authorization</span>: <span class="string">`bearer <span class="subst">$&#123;accessToken&#125;</span>`</span></span><br></pre></td></tr></table></figure>
<h1 id="常见接口错误"><a class="markdownIt-Anchor" href="#常见接口错误"></a> 常见接口错误</h1>
<h2 id="idx14100-jwt-is-not-well-formed"><a class="markdownIt-Anchor" href="#idx14100-jwt-is-not-well-formed"></a> IDX14100: JWT is not well formed</h2>
<p>这个错误实际上是使用过期的<code>access token</code>进行接口请求时发出的错误信息<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup>，然而这个错误信息很不准确，乍一看还以为<code>JWT</code>的问题。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240513193658.png?imageslim" alt="image.png" /></p>
<p>为了避免使用到过期的<code>access token</code>，我的做法是每次进行<code>API</code>请求前都使用<code>refresh token</code>得到一个新的<code>access token</code>，当然实际应用不推荐这么做，毕竟我这调用<code>API</code>的频率比较低🙈。</p>
<h1 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h1>
<ul>
<li><a href="https://learn.microsoft.com/zh-cn/entra/identity-platform/v2-oauth2-auth-code-flow">微软身份平台和 OAuth 2.0 授权代码流 - Microsoft identity platform | Microsoft Learn</a> 使用授权码、<code>access token</code>以及<code>refresh token</code>的流程</li>
<li><a href="https://github.com/remotely-save/remotely-save/blob/master/src/fsOnedrive.ts#L56">remotely-save/src/fsOnedrive.ts at master · remotely-save/remotely-save</a> 需要的<code>onedrive</code>权限可以参考这里，但是这里使用了<code>App</code>文件夹下的读写权限</li>
<li><a href="https://github.com/dkatavic/onedrive-api?tab=readme-ov-file#itemsupdate">dkatavic/onedrive-api: OneDrive API module for Node.js</a></li>
<li><a href="https://learn.microsoft.com/zh-cn/onedrive/developer/rest-api/resources/driveitem?view=odsp-graph-online">DriveItem - OneDrive API - OneDrive dev center | Microsoft Learn</a> <code>DriveItem</code>是<code>onedrive</code>的操作对象，涉及到很多种动作</li>
<li><a href="https://learn.microsoft.com/zh-cn/onedrive/developer/rest-api/getting-started/app-registration?view=odsp-graph-online">使用 Microsoft Graph 创建应用 - OneDrive API - OneDrive dev center | Microsoft Learn</a> 使用<code>Onedrive API</code>前需要创建一个应用（以便进行授权）</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://learn.microsoft.com/zh-cn/onedrive/developer/rest-api/getting-started/app-registration?view=odsp-graph-online#register-your-app-with-microsoft">https://learn.microsoft.com/zh-cn/onedrive/developer/rest-api/getting-started/app-registration?view=odsp-graph-online#register-your-app-with-microsoft</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://learn.microsoft.com/zh-cn/entra/identity-platform/v2-oauth2-auth-code-flow#request-an-access-token-with-a-certificate-credential">https://learn.microsoft.com/zh-cn/entra/identity-platform/v2-oauth2-auth-code-flow#request-an-access-token-with-a-certificate-credential</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://learn.microsoft.com/zh-cn/entra/identity-platform/v2-oauth2-auth-code-flow#request-an-access-token-with-a-client_secret">https://learn.microsoft.com/zh-cn/entra/identity-platform/v2-oauth2-auth-code-flow#request-an-access-token-with-a-client_secret</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://learn.microsoft.com/zh-cn/onedrive/developer/rest-api/?view=odsp-graph-online#microsoft-graph-root-resources">https://learn.microsoft.com/zh-cn/onedrive/developer/rest-api/?view=odsp-graph-online#microsoft-graph-root-resources</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://learn.microsoft.com/en-us/answers/questions/1382499/invalidauthenticationtoken-with-https-graph-micros">InvalidAuthenticationToken with https://graph.microsoft.com/v1.0/me/calendar/events - Microsoft Q&amp;A</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>业务</category>
      </categories>
      <tags>
        <tag>Onedrive</tag>
      </tags>
  </entry>
  <entry>
    <title>关于valueOf、toString和[Symbol.toPrimitive]方法</title>
    <url>/post/valueof-tostring-toprimitive/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>在掘金上看到<a href="https://juejin.im/post/5e66dc416fb9a07cab3aaa0a">一篇文章</a>，大意是如何让<code>a === 1 &amp;&amp; a === 2 &amp;&amp; a === 3</code>等于<code>true</code>；一开始确实一脸懵逼，不过后来想到了<strong>访问修饰符</strong>能够解决这个问题，毕竟每访问一次值就加上<code>1</code>就好了；当然，我居然忘了<strong>全局变量</strong>本身就是<code>window</code>的一个属性这个点，有点疏忽大意。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> val = <span class="number">1</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="variable language_">window</span>, <span class="string">&#x27;a&#x27;</span>, &#123;</span><br><span class="line">  <span class="title function_">get</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">val</span>++ <span class="comment">// 这里的this就是全局对象window</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a === <span class="number">1</span> &amp;&amp; a === <span class="number">2</span> &amp;&amp; a === <span class="number">3</span>) <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<p>不过，我又想到貌似对象还有一些方法能够<strong>改变访问到的值</strong>；比如：</p>
<ul>
<li><code>Object.prototype.valueOf()</code></li>
<li><code>Object.prototype.toString()</code></li>
<li><code>[Symbol.toPrimitive](hint)</code></li>
</ul>
<p>然而，经过折腾发现这三种方法并不像访问修饰符那样的机制，在使用全等号<code>===</code>进行判断时并没有触发：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  <span class="title function_">valueOf</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">toString</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  [<span class="title class_">Symbol</span>.<span class="property">toPrimitive</span>] () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">3</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a === <span class="number">1</span>) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a === <span class="string">&#x27;2&#x27;</span>) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a === <span class="number">3</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure>
<p>所以，心里自然就有疑问，这几个方法到底在什么时候才会触发？</p>
<span id="more"></span>
<h2 id="objectprototypevalueof"><a class="markdownIt-Anchor" href="#objectprototypevalueof"></a> Object.prototype.valueOf()</h2>
<p>对象的<code>valueOf</code>旨在返回对象的<strong>原始值</strong>，会在需要将对象转换成原始值的地方<strong>自动执行</strong>。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200321105734.jpg?imageslim" alt="img" /></p>
<p>根据<code>MDN</code>上的资料<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>可知，内置的一些对象已经定义<code>valueOf</code>方法，而对象默认则返回本身作为<code>valueOf()</code>的返回值。</p>
<h2 id="objectprototypetostring"><a class="markdownIt-Anchor" href="#objectprototypetostring"></a> Object.prototype.toString()</h2>
<p>同理，<code>toString()</code>方法会返回表示该对象的字符串，会在对象预期要被转换成字符串的地方自动执行。对象默认的<code>toString()</code>方法会返回<code>[object type]</code>，这个<code>type</code>就是<strong>对象构造函数的名称</strong>。</p>
<h2 id="symboltoprimitive"><a class="markdownIt-Anchor" href="#symboltoprimitive"></a> Symbol.toPrimitive</h2>
<p><code>[Symbol.toPrimitive](hint)</code>方法作用同<code>valueOf()</code>一样，但是<font color=red><strong>优先级要高于</strong></font><code>valueOf()</code>；而且该方法还会接受一个参数<code>hint</code>，这个参数用来表示期望转换的原始值的<strong>具体类型</strong>，有以下几种：</p>
<ul>
<li><code>number</code>：数字类型</li>
<li><code>string</code>：字符串类型</li>
<li><code>default</code>：默认</li>
</ul>
<h2 id="对象转换成原始值"><a class="markdownIt-Anchor" href="#对象转换成原始值"></a> 对象转换成原始值</h2>
<p>很明显，以上三种方法都是在对象被预期转换成某种原始值时触发，那么触发的<strong>时机</strong>是什么，需要<strong>何种类型</strong>的原始值就需要弄清楚了。</p>
<h3 id="预期被转换成字符串类型"><a class="markdownIt-Anchor" href="#预期被转换成字符串类型"></a> 预期被转换成字符串类型</h3>
<blockquote>
<p>对应的<code>hint</code>类型为string</p>
</blockquote>
<ol>
<li>
<p>进行<strong>输出</strong>的地方，如<code>alert()</code>。</p>
</li>
<li>
<p><code>String(obj)</code>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  <span class="title function_">toString</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>(a)) <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>字符串连接</strong>（<code>+</code>）操作：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  <span class="title function_">toString</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a + <span class="string">&#x27;vv&#x27;</span>)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>模板字符串</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  [<span class="title class_">Symbol</span>.<span class="property">toPrimitive</span>] (hint) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(hint) <span class="comment">// string</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`你是老<span class="subst">$&#123;a&#125;</span>？`</span>) <span class="comment">// 你是老2？</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="预期被转换成数字类型"><a class="markdownIt-Anchor" href="#预期被转换成数字类型"></a> 预期被转换成数字类型</h3>
<blockquote>
<p>对应的<code>hint</code>类型为number</p>
</blockquote>
<ol>
<li>
<p><strong>除法</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  <span class="title function_">valueOf</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span> / a, a / <span class="number">2</span>) <span class="comment">// 1  1</span></span><br></pre></td></tr></table></figure>
<p>可以使用<code>[Symbol.toPrimitive]()</code>方法来验证一下：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  [<span class="title class_">Symbol</span>.<span class="property">toPrimitive</span>] (hint) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(hint) <span class="comment">// number</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span> / a) <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>Number(obj)</code>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  [<span class="title class_">Symbol</span>.<span class="property">toPrimitive</span>] (hint) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(hint) <span class="comment">// number</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>(a)) <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>正负号</strong>（注意不是加减运算）：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  [<span class="title class_">Symbol</span>.<span class="property">toPrimitive</span>] (hint) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(hint) <span class="comment">// number</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(+a) <span class="comment">// 2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(-a) <span class="comment">// -2</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="预期被转换成默认类型其他"><a class="markdownIt-Anchor" href="#预期被转换成默认类型其他"></a> 预期被转换成默认类型（其他）</h3>
<blockquote>
<p>对应的<code>hint</code>类型为default</p>
</blockquote>
<ol>
<li>
<p><strong>数字加法</strong>（即与对象相加的一方为数字类型）：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  [<span class="title class_">Symbol</span>.<span class="property">toPrimitive</span>] (hint) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(hint) <span class="comment">// default</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span> + a) <span class="comment">// 3</span></span><br></pre></td></tr></table></figure>
<p>这一点有点意外，原以为像这种情况预期转换的类型应该是数字类型，但事实上却是<code>default</code>；</p>
</li>
<li>
<p><strong>布尔运算</strong>：所有对象都被转换成<code>true</code>；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  [<span class="title class_">Symbol</span>.<span class="property">toPrimitive</span>] (hint) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(hint) <span class="comment">// 没有触发</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(a), a &amp;&amp; <span class="number">123</span>) <span class="comment">// true 123</span></span><br></pre></td></tr></table></figure>
<p>布尔运算包括<code>==</code>；</p>
</li>
</ol>
<h3 id="三种方法触发的顺序"><a class="markdownIt-Anchor" href="#三种方法触发的顺序"></a> 三种方法触发的顺序</h3>
<ol>
<li>
<p><strong>首先</strong>判断对象是否有<code>[Symbol.toPrimitive](hint)</code>方法，若有则执行该方法；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  [<span class="title class_">Symbol</span>.<span class="property">toPrimitive</span>] (hint) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(hint)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;right your mother right&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">toString</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;f**k&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">valueOf</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;sb&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>(a)) <span class="comment">// right your mother right</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果预期被转换成<strong>字符串类型</strong>时，则优先执行<code>toString()</code>方法；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  <span class="title function_">toString</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;f**k&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">valueOf</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;sb&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>(a)) <span class="comment">// f**k</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果预期被转换成<strong>默认类型或者数字类型</strong>时，则优先执行<code>valueOf()</code>方法：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  <span class="title function_">toString</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">123</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">valueOf</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">456</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>(a)) <span class="comment">// 456</span></span><br></pre></td></tr></table></figure>
<p><font color=red><strong>注</strong></font>：若没有<code>valueOf()</code>方法，但是定义了<code>toString()</code>方法，则会执行<code>toString()</code>方法；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123;</span><br><span class="line">  <span class="title function_">toString</span> () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">123</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>(a)) <span class="comment">// 123</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ul>
<li><a href="https://juejin.im/post/5e66dc416fb9a07cab3aaa0a">大厂面试题分享：如何让(a=<mark>1&amp;&amp;a</mark>=2&amp;&amp;a===3)的值为true? - 掘金</a></li>
<li><a href="https://javascript.info/object-toprimitive">Object to primitive conversion</a> <font color=red>★</font></li>
<li><a href="https://javascript.info/type-conversions">Type Conversions</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf">Object.prototype.valueOf() - JavaScript | MDN</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>vite、vue3和storybook</title>
    <url>/post/vite-vue3-storybook/</url>
    <content><![CDATA[<h2 id="关于storybook"><a class="markdownIt-Anchor" href="#关于storybook"></a> 关于storybook</h2>
<h3 id="storybook是什么"><a class="markdownIt-Anchor" href="#storybook是什么"></a> storybook是什么？</h3>
<blockquote>
<p>Storybook is a tool for UI development. It makes development faster and easier by isolating components. This allows you to work on one component at a time. You can develop entire UIs without needing to start up a complex dev stack, force certain data into your database, or navigate around your application.</p>
</blockquote>
<h3 id="storybook可以干什么"><a class="markdownIt-Anchor" href="#storybook可以干什么"></a> storybook可以干什么？</h3>
<ul>
<li>根据组件注释生成对应的文档信息</li>
<li>根据组件<code>prop</code>类型自动生成对应类型的交互控制</li>
<li>可以编写组件交互示例</li>
<li>可以进行组件测试</li>
<li><code>etc</code></li>
</ul>
<h3 id="概览"><a class="markdownIt-Anchor" href="#概览"></a> 概览</h3>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220118175711768.png?imageView2/2/w/1400" alt="image-20220118175711768" /></p>
<span id="more"></span>
<h2 id="基于vite和vue3使用storybook"><a class="markdownIt-Anchor" href="#基于vite和vue3使用storybook"></a> 基于vite和vue3使用storybook</h2>
<h3 id="基本步骤"><a class="markdownIt-Anchor" href="#基本步骤"></a> 基本步骤</h3>
<ol>
<li>
<p>初始化<code>storybook</code><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npx sb@next init --builder storybook-builder-vite</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>平移</strong>需要用到的<code>vite</code>配置到<code>.storybook/main.js</code>里面，其中<code>viteFinal</code>方法<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>就是专门设置自定义<code>vite</code>配置的地方，可以在这里修改或覆盖对应的配置，然后返回配置对象即可，如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">viteFinal</span>(<span class="params">config</span>) &#123;</span><br><span class="line">    <span class="comment">// 这里修改或覆盖配置</span></span><br><span class="line">    config.<span class="property">resolve</span>.<span class="property">alias</span> = [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">find</span>: <span class="regexp">/^@\//</span>,</span><br><span class="line">        <span class="attr">replacement</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;src&#x27;</span>) + <span class="string">&#x27;/&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">find</span>: <span class="string">&#x27;vue&#x27;</span>,</span><br><span class="line">        <span class="attr">replacement</span>: <span class="string">&#x27;vue/dist/vue.esm-bundler.js&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>自定义<code>storybook vite</code><a href="https://vitejs.dev/config/#cachedir">打包缓存目录</a>，如果不自定义一个缓存目录，则会导致<code>storybook</code>和正常开发的<code>vite</code>项目共用同一个缓存目录，那么里面的文件很有可能就是相互覆盖，导致两边一启动就会重新<code>pre-building</code>；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">config.<span class="property">cacheDir</span> = <span class="string">&#x27;node_modules/.vite-storybook&#x27;</span> <span class="comment">// 避免跟开发环境一个缓存目录，以免相互覆盖；</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果组件中用到了一些和<code>app</code>实例相关的全局配置，那么同样地需要平移地把相应的配置在<code>.storybook/preview.js</code>（这个文件也可以用<code>.ts</code>）中，可以把这里当做<code>storybook</code>的入口文件：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; app &#125; <span class="keyword">from</span> <span class="string">&#x27;@storybook/vue3&#x27;</span>; <span class="comment">// 这里的app就是storybook vue实例</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>上面的都配置好了之后，剩下的就是补充组件注释和增加对应组件的<code>story</code>文件了，最后<code>yarn storybook</code>就可以看到组件交互文档了；</p>
</li>
</ol>
<h3 id="关于组件注释"><a class="markdownIt-Anchor" href="#关于组件注释"></a> 关于组件注释</h3>
<p>组件文档关心的地方无非就是老三样（<code>props</code>，<code>events</code>，<code>slots</code>）和组件自身的描述，只需要在对应的地方写上<code>jsdoc</code>风格的注释即可：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220118162025797.png?imageslim" alt="image-20220118162025797" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220118162144013.png?imageslim" alt="image-20220118162144013" /></p>
<p>需要注意的是：</p>
<ol>
<li>由于<code>@storybook/vue3</code>依赖的上游解析器<a href="https://storybook.js.org/docs/vue/api/argtypes#automatic-argtype-inference"><code>vue-docgen-api</code></a>还不支持<code>emits</code>这种事件类型的注释，所以<code>events</code>目前貌似无法通过注释来生成对应的描述；</li>
<li>同理，对于<code>setup</code>风格的<code>vue</code>文件支持度也要取决于<a href="https://storybook.js.org/docs/vue/api/argtypes#automatic-argtype-inference"><code>vue-docgen-api</code></a>；</li>
<li><code>slot</code>注释需要增加<code>@slot</code>装饰符；</li>
</ol>
<h3 id="关于story文件"><a class="markdownIt-Anchor" href="#关于story文件"></a> 关于story文件</h3>
<ul>
<li>文件格式：<code>*.stories.@(js|jsx|ts|tsx|mdx)</code>；默认是这些格式，关于探测story文件的规则可以在<code>.storybook/main.js</code>进行配置；</li>
<li>本质上一个<code>story</code>文件对应一个组件，然后里面的每一个<code>story</code>实例就是这个组件的一个交互示例；所以完全可以把一个<code>story</code>实例当做是对当前组件的<code>props/events/slots</code>的一种组合；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220118163657467.png?imageslim" alt="image-20220118163657467" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220118171107283.png?imageView2/2/w/800" alt="image-20220118171107283" /></p>
<h3 id="其他问题"><a class="markdownIt-Anchor" href="#其他问题"></a> 其他问题</h3>
<h4 id="无法正确解析props类型"><a class="markdownIt-Anchor" href="#无法正确解析props类型"></a> 无法正确解析props类型</h4>
<p>当使用函数来输出<code>prop</code>定义信息时，会发现<code>storybook</code>得到的类型推断直接就是对应的代码，而非最终类型：</p>
<img src="http://pic.xiexuefeng.cc/markdown/image-20220114163559656.png?imageslim" alt="image-20220114163559656" style="zoom: 50%;" />
<p>这个可以理解，因为一般这种提取注释生成文档的工具都是从<code>AST</code>信息中进行获取的，如果<code>AST</code>推断得到的是一个函数节点当然就没法正确解析执行后的结果；目前解决思路有</p>
<ul>
<li>
<p>把这种函数当做宏，然后<code>storybook</code>在加载前把宏输出成结果字符串；其实利用<code>rollup</code>的虚拟文件玩法，这种思路是可以实现的<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>；</p>
</li>
<li>
<p>根据解析后的<code>VNode</code>信息来补充，因为<code>Vue</code>解析成<code>VNode</code>后其<code>prop</code>类型就是执行后的结果，即运行时真正用到的信息；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220114185734981.png?imageslim" alt="image-20220114185734981" /></p>
<p>当然这种方式得到的不是最准确的<code>ts interface</code>定义，因为在运行时这些类型都被分解成原子类型了（就是<code>vue2</code>中所熟悉的各种原始类型和数据结构的构造函数），不过至少能看；</p>
</li>
</ul>
<h4 id="和volar的冲突"><a class="markdownIt-Anchor" href="#和volar的冲突"></a> 和volar的冲突</h4>
<p>如果你发现<code>volar</code>在推导<code>template</code>的组件类型突然全变成了<code>any</code>时，可能就是<code>storybook</code>的锅；</p>
<p>推荐解决方案：<a href="https://github.com/johnsoncodehk/volar/discussions/592#discussioncomment-1763880">https://github.com/johnsoncodehk/volar/discussions/592#discussioncomment-1763880</a></p>
<h3 id="自动化生成对应组件的story"><a class="markdownIt-Anchor" href="#自动化生成对应组件的story"></a> 自动化生成对应组件的story</h3>
<p>如果你仅仅只想用<code>storybook</code>来快速查看组件文档，而不需要各种定制化的示例编写时，可以尝试用<code>node</code>脚本直接从一个<code>story</code>文件模板快速生成对应组件的<code>story</code>文件，省的一个个填写；</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> template = <span class="string">`import <span class="subst">$&#123;name&#125;</span> from &#x27;@/components/<span class="subst">$&#123;name&#125;</span>.vue&#x27;;</span></span><br><span class="line"><span class="string">import &#123; basicTemplate, getComponentPropInfo &#125; from &#x27;./tool&#x27;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">type <span class="subst">$&#123;name&#125;</span>Props = InstanceType&lt;typeof <span class="subst">$&#123;name&#125;</span>&gt;[&#x27;$props&#x27;];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">  title: &#x27;业务组件/<span class="subst">$&#123;name&#125;</span>&#x27;,</span></span><br><span class="line"><span class="string">  component: <span class="subst">$&#123;name&#125;</span>,</span></span><br><span class="line"><span class="string">  argTypes: getComponentPropInfo(<span class="subst">$&#123;name&#125;</span>.props, <span class="subst">$&#123;name&#125;</span>[&#x27;__docgenInfo&#x27;]),</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">const Template = basicTemplate&lt;<span class="subst">$&#123;name&#125;</span>Props&gt;(<span class="subst">$&#123;name&#125;</span>);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">export const Basic = Template.bind(&#123;&#125;);</span></span><br><span class="line"><span class="string">Basic.args = &#123;&#125;;</span></span><br><span class="line"><span class="string">Basic.storyName = &#x27;基本使用&#x27;;</span></span><br><span class="line"><span class="string">`</span> <span class="comment">// 一个包含空白参数story实例的story文件模板，仅供参考</span></span><br></pre></td></tr></table></figure>
<p>这样就可以快速查看文档了；</p>
<h2 id="更多"><a class="markdownIt-Anchor" href="#更多"></a> 更多</h2>
<p>更多<code>storybook</code>的用法推荐看<a href="https://storybook.js.org/docs/vue/get-started/introduction">官方文档</a>，真的是极其详细的文档；</p>
<h3 id="用默认的webpack打包器"><a class="markdownIt-Anchor" href="#用默认的webpack打包器"></a> 用默认的<code>webpack</code>打包器</h3>
<p><code>storybook</code>的<code>vite</code>版本目前还是测试阶段，所以如果用默认的<code>webpack</code>实际上也能用；关于这种用法也有很多坑，以下遇到的问题仅供参考：</p>
<ol>
<li><code>Error: PostCSS plugin tailwindcss requires PostCSS 8.</code>；<a href="https://stackoverflow.com/questions/64925926/error-postcss-plugin-tailwindcss-requires-postcss-8">javascript - Error: PostCSS plugin tailwindcss requires PostCSS 8 - Stack Overflow</a></li>
<li>编译成功后打开网址报错：<code>CANNOT get /</code>；<a href="https://qiita.com/kewpie134134/items/75a6e81519fa353af4fb">Storybook が CANNOT get / と表示された時 - Qiita</a></li>
<li>使用<code>sass</code>配置报错：<code>Type Error: this.getOptions is not a function For style-loader</code>；<a href="https://stackoverflow.com/questions/68580273/type-error-this-getoptions-is-not-a-function-for-style-loader">reactjs - Type Error: this.getOptions is not a function For style-loader - Stack Overflow</a></li>
<li><code>webpack</code>配置（因为<code>storybook</code>默认使用<code>webpack4</code>进行打包配置）：<a href="https://storybook.js.org/docs/vue/configure/webpack#extending-storybooks-webpack-config">https://storybook.js.org/docs/vue/configure/webpack#extending-storybooks-webpack-config</a></li>
</ol>
<h2 id="相关文章"><a class="markdownIt-Anchor" href="#相关文章"></a> 相关文章</h2>
<ul>
<li><a href="https://mokkapps.de/blog/document-and-test-vue-3-components-with-storybook/">Document &amp; Test Vue 3 Components With Storybook - Michael Hoffmann (Mokkapps) - Senior Frontend Developer (Freelancer)</a>：简单地介绍<code>storybook</code>在<code>vue3</code>中使用</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://storybook.js.org/blog/storybook-for-vite/">https://storybook.js.org/blog/storybook-for-vite/</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/387127953">在vite项目中使用storybook - 知乎</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://github.com/typed-macro/typed-macro/blob/master/DOCUMENTATION.md">typed-macro/DOCUMENTATION.md at master · typed-macro/typed-macro</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>storybook</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>某Vue应用页面性能优化实录</title>
    <url>/post/vue-app-performance-enhancement-record/</url>
    <content><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1>
<p>此文原为对公司内部某个 <code>Vue2</code>应用存在的严重性能问题，进行优化后笔者进行的内部总结文档。个人觉得其中一些分析思路和方法还是值得回味的，且暴露的一些引发性能问题的做法也值得吸取经验，故而现在进行对其中一些数据进行脱敏后进行发布。</p>
<h1 id="某编辑页性能问题表现"><a class="markdownIt-Anchor" href="#某编辑页性能问题表现"></a> 某编辑页性能问题表现</h1>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240517165722.png?imageslim" alt="image.png" /></p>
<ul>
<li>当 <code>tab</code>菜单切换时会出现<strong>肉眼可见的卡顿</strong></li>
<li>浏览器页面内存随着切换次数的增长而增长（经测试，最高可占用 <code>3~4G</code>的内存），直至<strong>页面崩溃</strong></li>
</ul>
<span id="more"></span>
<h1 id="内存泄漏分析"><a class="markdownIt-Anchor" href="#内存泄漏分析"></a> 内存泄漏分析</h1>
<p>很明显，这种页面内存增长方式透露出这些 <code>tab</code>页面存在着内存泄漏的情况，即一些内存没有被及时回收；通过 <code>Chrome</code>浏览器自带的 <code>Performance monitor</code>工具即可清楚的看到泄漏情况：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/15B6C60C024840B7A106859A45BBF738.png?imageslim" alt="image" /></p>
<p>而且通过上述工具监测得到的数据可以判断内存泄漏极有可能是由 <code>DOM</code>泄漏造成，即一些 <code>DOM</code>节点虽然从页面中移除了，但是还是存在被引用的情况；</p>
<h2 id="定位内存泄漏的地方"><a class="markdownIt-Anchor" href="#定位内存泄漏的地方"></a> 定位内存泄漏的地方</h2>
<p>借助 <code>Chrome</code>浏览器自带的 <code>Memory</code>工具可以很方便地分析内存变化，自然也可以分析内存泄漏产生的原因；该工具主要提供了3种内存分析的模式，这里主要用到 <code>Heap snapshot</code>这种模式，即内存快照，将页面当前的内存使用情况记录起来；</p>
<p>分析页面内存泄漏的一般操作路径<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>是：</p>
<ol>
<li>
<p>进入<strong>可能发生内存泄漏</strong>的页面；</p>
</li>
<li>
<p>然后跳转到另一个页面；</p>
</li>
<li>
<p>再回退至上一个页面；</p>
</li>
<li>
<p>手动进行一次垃圾回收；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/2A4590C2553843649B7173780BD031C8.png?imageslim" alt="image" /></p>
</li>
<li>
<p>然后记录页面的内存快照进行分析；</p>
</li>
</ol>
<p>拿到内存快照后，可以在面板中搜索关键字“<code>detached</code>”就可以快速得到目前内存中保留的已分离的 <code>DOM</code>节点，即页面中渲染已经用不到但还保留在内存中的 <code>DOM</code>节点，这些节点就是 <code>DOM</code>泄漏；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/CFD80C89BAD047A8B56DE19345CD5537.png?imageslim" alt="image" /></p>
<p>点开其中某组节点的第一个元素（我通常的做法是将节点按 <code>Retained Size</code>降序排列，然后再选择），然后下面就会显示所有引用该节点的内存节点：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/69AEDF1084FD47F5A0A20FDC015ADA51.png?imageslim" alt="image" /></p>
<p>考虑到页面本身是基于 <code>Vue</code>构建的，所以查看 <code>VueComponent</code>构建函数节点会更加方便一点，因为 <code>VueComponent</code>实例不仅保留了 <code>DOM</code>节点信息，还有父级和子级节点信息，所以通过实例树可以方便的找到泄漏的最顶级 <code>VueComponent</code>；</p>
<p>在网上看到一些关于 <code>Memory</code>工具使用教程，其中可以看到之前该工具可以直接悬停节点上查看该节点的信息，不过现在这个功能已经没了（搞不懂这么方便的功能为啥取消了）；好在还有一种不太优雅的方式可以达到同样的目的，在节点上右击选择“<code>store as global variable</code>”即可将节点信息存到一个临时变量上，然后就能在控制台查看了：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/4A71822A38E54489A7600F57D369D2A9.png?imageslim" alt="image" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/B641ED8028E046178010FBDDB1F32218.png?imageslim" alt="image" /></p>
<p>通过打印的 <code>VueComponent</code>实例信息就可以筛选出泄漏的最大范围组件是哪一个了，具体做法就是不断地查看其父级组件实例（<code>$parent</code>属性）然后确认该实例的DOM节点（<code>$el</code>属性）是否还存在于当前页面中（直接鼠标 <code>hover</code>该属性，如果 <code>DOM</code>节点存在于页面中，则会显示一个浅蓝色的框，代表选中），找到的第一个还存在于当前页面中的 <code>DOM</code>节点，其子节点就是泄漏的最大层级的 <code>VueComponent</code>实例了；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/6CF6359125414C37B4E6173339BA8BF2.png?imageslim" alt="image" /></p>
<p>经查，这个泄漏的最大层级的 <code>VueComponent</code>实例恰好是当前的路由组件，也就是说整个路由组件实例都被泄漏出去了，因此总体泄漏的 <code>DOM</code>数量非常可观，占用内存自然就很高了；</p>
<p>光知道泄漏 <code>Vue</code>组件实例还不够，还需要定位到具体是哪个代码引用了 <code>Vue</code>组件实例（及其子组件实例），不过至少可以确定的是泄漏就发生在这个路由里面所用到的代码；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/230916B8DFC141909E3A3945EA66EF9E.png?imageslim" alt="image" /></p>
<p>说实话，当我在 <code>Vue</code><a href="https://cn.vuejs.org/v2/cookbook/avoiding-memory-leaks.html">官方文档</a>中看到这么一句的时候，我还在想为啥官方可以这么肯定其自身不会发生内存泄漏呢？后面证实我还是太 <code>naive</code>了，官方确实有自信的资本，往这个方向找最后确实证实是某个第三方库使用导致了内存泄漏：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/44A5364B0E454575814455F25DE9FDF8.png?imageslim" alt="image" /></p>
<p>像这种使用 <code>DOM</code>节点来初始化实例的第三方库，如果在 <code>Vue</code>组件生命周期结束前不及时销毁其实例，确实很容易导致 <code>DOM</code>泄漏；</p>
<h2 id="内存泄漏优化后"><a class="markdownIt-Anchor" href="#内存泄漏优化后"></a> 内存泄漏优化后</h2>
<p>对造成 <code>DOM</code>泄漏的地方进行优化后，再次打开 <code>Performance monitor</code>工具进行监测可以得到：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/52422794AB7741E78B4FBD1B19C264DD.png?imageslim" alt="image" /></p>
<p>可以很明显的看到不同切换页面时，<code>DOM</code>节点数和占用内存都很稳定，而不是之前的直线上升。</p>
<h1 id="卡顿原因分析"><a class="markdownIt-Anchor" href="#卡顿原因分析"></a> 卡顿原因分析</h1>
<p>原本以为页面切换卡顿也是由于内存泄漏造成的，但实际上解决了内存泄漏后卡顿现象还是存在；所以此时可以断定，<code>js</code>代码中必然存在着阻塞主线程的 <code>long task</code>，使用性能分析工具一查看，果不其然，切换页面的过程中掉帧现象明显，且存在着大量 <code>long task</code>，甚至出现了超过 <code>3s</code>的 <code>long task</code>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/1B22C610DA974C0AA50BFAE4B085992F.png?imageslim" alt="image" /></p>
<p>通过对这些 <code>lont task</code>的调用树（<code>call tree</code>）分析可知，引起这些 <code>long task</code>主要来源有两类：</p>
<ul>
<li>数据深拷贝；</li>
<li><code>Vue</code>视图更新；</li>
</ul>
<h2 id="深拷贝"><a class="markdownIt-Anchor" href="#深拷贝"></a> 深拷贝</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/0BEED4ECADD94AFB9188B6F2B9427BF3.png?imageslim" alt="image" /></p>
<p>由某个 <code>long task</code>的 <code>call tree</code>可知，某个名为 <code>currentLogs</code>的 <code>getter</code>执行时长达 <code>3.5s</code>，引发了超长的主线程阻塞；联系到 <code>Vue</code>生态，<code>getter</code>一般存在于 <code>Vuex</code>或者 <code>computed</code>这类响应式计算数据中，然后再进一步查看代码，果然是 <code>Vuex</code>中的名为 <code>currentLogs</code>的 <code>getter</code>使用了深拷贝逻辑，对这个深拷贝逻辑进行计时可知：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/15A19619A90748BEB88E71FAF86048BF.png?imageslim" alt="image" /></p>
<p>由于这个深拷贝算法采用了递归算法，因此在遇到结构层级较深的数据结构时会有很高的调用执行栈开销，因而耗时较多；在对没有内置对象的数据结构进行深拷贝时，显然 <code>JSON.parse(JSON.stringify(xxx))</code>是不错的选择<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>；在使用序列化和反序列化进行深拷贝后，该任务的耗时明显降低：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/A67B4935361740D28B33FF1743701338.png?imageslim" alt="image" /></p>
<h2 id="vue-视图更新"><a class="markdownIt-Anchor" href="#vue-视图更新"></a> Vue 视图更新</h2>
<p>在这些 <code>long task</code>中还有很多 <code>1~2s</code>的任务，经分析大致上都是页面请求 <code>API</code>后更新数据所导致的视图更新（从函数名即可看出是 <code>Vue</code>里面的异步更新队列中的任务）;</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/C97BAB0EE82848A9A6B6CF31D23FFCAB.png?imageslim" alt="image" /></p>
<p>然后进一步查看可知，时间主要消耗在组件更新的 <code>patch</code>过程：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/A9C6C6BB8260445CB3376DFC6DD7DC50.png?imageslim" alt="image" /></p>
<p>这说明页面的 <code>DOM</code>数量过多或者结构嵌套较深，否则 <code>patch</code>过程不会花费那么久；通过进一步分析 <code>patch</code>内部函数的消耗时间组成可以发现，其耗时时间主要来自几大类逻辑：</p>
<ul>
<li>
<p><code>vnode</code>节点的创建、移除和对比；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/E7D758FB23CC4EA1A82E46A5F1B79E5F.png?imageslim" alt="image" /></p>
</li>
<li>
<p><code>element-ui</code>的 <code>input</code>组件所引发的高度计算；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/4D7B851120154F409165B1A932090F95.png?imageslim" alt="image" /></p>
</li>
<li>
<p><code>element-ui</code>的 <code>table</code>组件所引发的滚动高度和宽度计算；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/8AF20DAC884F43BF8479AEE22F18D81E.png?imageslim" alt="image" /></p>
</li>
<li>
<p><code>vue</code>响应式数据数据劫持初始化；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/514920C07CC54AD29F5ED37268B121DC.png?imageslim" alt="image" /></p>
</li>
</ul>
<h3 id="vnode节点的时间消耗"><a class="markdownIt-Anchor" href="#vnode节点的时间消耗"></a> <code>vnode</code>节点的时间消耗</h3>
<p>说实话，当看到 <code>vnode</code>节点的操作会产生如此多的时间消耗时，确实有点难以理解，毕竟页面的数据量远没达到上百上千条那么多（事实上，每页就 <code>10</code>条，再考虑到数据的多维性，将其展开大致就相当于 <code>20</code>~<code>30</code>条的数量），怎么会产生那么多 <code>vnode</code>节点呢？</p>
<p>由于 <code>Vue</code>是基于数据驱动的，一般是数据变动产生视图变动，再加上其内部的异步更新队列机制，可以借助 <code>$nextTick</code>方法来得到<strong>数据更新的一瞬到视图更新完成</strong>时大致过了多久：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/33674DB555B5493CB3FC8C068F681438.png?imageslim" alt="image" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/46ADAC2B1279434696E11542F78BC65F.png?imageslim" alt="image" /></p>
<p>经测试，这个过程耗时大致在 <code>400ms ~ 500ms</code>之间；也就是说由该数据更新所导致的一系列视图更新花了这么多的时间，远远超出了相邻两个队列的正常时间差（<code>16ms</code>），这说明这里的视图更新确实产生了大量的计算；熟悉 <code>Vue</code>响应式原理应该都清楚，这本质上是由于数据源这个发布者所携带的订阅者（或者其订阅者的订阅者……，简言之就是依赖链路）数量过多，因而涉及的订阅通知执行时间就飙升了；所以顺着这个思路可以查看该数据源的订阅者，说不定就能发现一些端倪，打印该响应式数据则可以看到，其订阅者数量有 <code>80</code>个：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/A500159559AF45EDA1E4240C2DFAEFCD.png?imageslim" alt="image" /></p>
<p>然后，打开其中第一个订阅者（<code>Watcher</code>对象），惊喜就出现了：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/19DE559D5B994A2B859AA126B09215AA.png?imageslim" alt="image" /></p>
<p>没错，这个组件竟然依赖了高达 <code>1072</code>个 <code>Observer</code>对象（数据源），顺便也解答了另一个疑惑：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/90A1953E515A4FB3AD409FE6468B48F8.png?imageslim" alt="image" /></p>
<p>为啥单个调用消耗最长（应该是累计？）时间的函数会是 <code>addDep</code>，因为这个函数就是（订阅者）专门用来添加其依赖的 <code>Dep</code>对象的；所以看到前面那个拥有 <code>1072</code>个 <code>Dep</code>对象的组件时就不足为奇了，也难怪不到百条的数据就可以造成如此多的视图更新消耗，因为这几乎等同于将页面所有的 <code>Vue</code>组件全部写在一个 <code>Vue</code>文件里面（可以思考为啥这样做会产生 <code>Vue</code>的性能问题）；</p>
<p>潜在解决方案：</p>
<ol>
<li>分批加载数据，分批渲染，类似于时间切片，将一个 <code>long task</code>切分成多个更小的 <code>task</code>；（治标不治本）</li>
<li>重新组织组件结构，避免让大量 <code>Vue</code>组件全部挂载到同一个父组件上；（重构）</li>
</ol>
<h3 id="input组件所引发的高度计算"><a class="markdownIt-Anchor" href="#input组件所引发的高度计算"></a> <code>input</code>组件所引发的高度计算</h3>
<p>根据性能工具分析结果可以看到一个名为 <code>resizeTextarea</code>的方法消耗了较多的执行时间，其源码位置正好是 <code>element</code>的 <code>input</code>组件，进一步打开源码可以发现，该方法主要是给 <code>textarea</code>类型的输入框进行高度计算的，而其中的核心逻辑在一个名为 <code>calcTextareaHeight.js</code>的文件里：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/25779E47E1B941E8BA48DE44F2370FD4.png?imageslim" alt="image" /></p>
<p>看到上述代码就不难理解为何这个高度计算的逻辑会如此耗时了，因为 <code>window.getComputedStyle()</code>方法会引发页面重排，重排本身就很耗时的，所以整个计算过程当然也就很耗时；其实如果只是页面中只有一两个 <code>textarea</code>类型的 <code>input</code>组件也许不会这么明显，但是要命的是每一行数据就会渲染 <code>2</code>个这样的组件，联系到上文可以得知页面中最多可以存在 <code>20~30</code>个这样的组件，所以叠加的性能问题也就自然很明显了；</p>
<p><strong>潜在解决方案</strong>：</p>
<ol>
<li>替换 <code>el-input</code>的 <code>textare</code>组件：基于原生 <code>textare</code>编写组件，<strong>避免重排计算</strong>；</li>
<li>基于 <code>contenteditable</code>属性编写组件；</li>
<li>去 <code>element-ui</code>提 <code>PR</code>（不太可取，因为使用场景过于极端、偏少）；</li>
</ol>
<hr />
<p>好了，问题来了，那么 <code>element-ui</code>为啥要不惜使用重排来计算 <code>textarea</code>的高度呢？为何不直接使用原生 <code>textarea</code>元素的高度表现呢？答案就在于其组件所支持的 <code>autosize</code>属性：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/DFB1CD4B5D3A46319178CA9146F294A7.png?imageslim" alt="image" /></p>
<p>原生的 <code>textarea</code>元素只有一个 <code>rows</code>属性用于根据行数设置高度<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>，然而并不支持 <code>minRows</code>和 <code>maxRows</code>这种看起来像是<strong>弹性高度</strong>的属性，所以要支持这种特性当然<strong>只能靠实时的计算</strong>给出 <code>min-height</code>、<code>max-height</code>和 <code>height</code>的对比关系，最终设置实际的高度；</p>
<h3 id="table组件所引发的滚动高度和宽度计算"><a class="markdownIt-Anchor" href="#table组件所引发的滚动高度和宽度计算"></a> <code>table</code>组件所引发的滚动高度和宽度计算</h3>
<p>定位到 <code>table</code>组件的源码可知，触发宽度计算的时机是表格数据发生变动时，而计算的逻辑大致是根据每个列配置的（最小）宽度或者自由分配来计算<strong>最终展示时表格每列的实际宽度及表格总体的最小宽度</strong>等；由于这里面涉及到修改 <code>DOM</code>节点的 <code>width</code>等宽度属性，所以就不可避免地触发重排了；</p>
<p>为啥表格重排会引发这么多的时间呢？其实背后是由于表格某一列所渲染的内容实在是过于繁多，导致重排的开销直线上升：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240517170100.png?imageslim" alt="image.png" /></p>
<p>既然本身就要超过一行显示省略号，<strong>何不对文本本身就进行截取</strong>以降低实际 <code>DOM</code>渲染消耗（主要是字符数量过多，场景很极端）；猜测像 <code>text-overflow/white-space</code>这种样式属性本身还是会对实际文本数量比较敏感，字符过多会造成计算样式的时间增长【<mark>待验证</mark>】；</p>
<hr />
<p><img src="https://pic.xiexuefeng.cc/markdown/0913AC58C80841E59C4E6A4CFC10C0DA.png?imageslim" alt="image" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/023216817E314765A34D1FB7148824FC.png?imageslim" alt="image" /></p>
<p>对显示字符做一定数量的截取后（不影响原有功能）：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/33299E5914F747E68A5DFEB045B85540.png?imageslim" alt="image" /></p>
<hr />
<p>同样地，那么 <code>element-ui</code>为何要计算表格的列宽度呢？答案还是由于其组件要支持（表格列）<strong>弹性宽度</strong>表现，所以自然要计算最终每列实际的宽度表现：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/CF8E629768344241BADF6AA7FDE933B4.png?imageslim" alt="image" /></p>
<h3 id="vue响应式数据数据劫持初始化"><a class="markdownIt-Anchor" href="#vue响应式数据数据劫持初始化"></a> <code>vue</code>响应式数据数据劫持初始化</h3>
<p><code>vue</code>自带的响应式数据机制确实使用很方便，以至于我们无需特别地对数据进行处理，仅需将数据放置到特定的位置即可（这一点 <code>Vue3</code>的组合式 <code>API</code>已经不赞成这样了，而是提供一系列的函数模块来手动初始化响应式数据）；事实上任何方便的背后都有一定的代价，而默认的响应式数据支持则带来了一定程度的数据劫持及监听的消耗，由于 <code>vue</code>组件实例的 <code>data</code>数据及计算属性的值都是进行了<strong>深层次的数据劫持</strong>（即对对象属性及其子属性都进行劫持），因而在遇到结构层级较多且数量较多的数据时，这种劫持方式显然会带来很大的时间及内存开销；比如：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/2F617B558DE6482CAAA6FBFEAB3E179A.png?imageslim" alt="image" /></p>
<p>可以看出，响应式数据中，每个对象本身会挂载一个 <code>Observer</code>实例，而对于每个属性则会挂载 <code>getter</code>实例和 <code>setter</code>实例，且不说这样的内存消耗，试想一下初始化如此多的对象实例是不是也挺费时间的；</p>
<p>这背后实际上涉及到的问题就是：<strong>是不是所有的数据都得是响应式数据</strong>？答案当然是“不是”，比如：</p>
<ul>
<li>数据仅做展示相关的用途，即完全不必要担心数据被 <code>set</code>；这种情况无非最多只是需要对最高层级的数据进行更新的时候进行响应式的视图更新，即这个数据被<strong>整体更新</strong>的时候，可以理解为“<strong>浅层</strong>”的响应式数据；</li>
<li>数据完全就是常量，不会改变也不希望在运行时进行改变，那就自然无需挂载到任何的 <code>Vue</code>组件实例上了；</li>
</ul>
<p>虽然 <code>vue2.x</code>本身没有提供只对数据进行浅层响应式处理的 <code>API</code>，但是其源码暴露了一个办法<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>：那就是利用 <code>Object.freeze()</code>方法将对象的属性给“冻结”，然后 <code>vue</code>就不会对这些属性进行数据劫持操作了；可以对页面中用到的一个应该是浅层响应式数据来做实验：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/554460C470DA4BB8B049794F8F590ACE.png?imageslim" alt="image" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/B82329F926AB49558E8B9F5340492B7B.png?imageslim" alt="image" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/8CC9A1441E1F4B7CBE7F44872F9FBED5.png?imageslim" alt="image" /></p>
<p>可以看到，对于同样的数据做了冻结处理之后，所消耗的视图更新时间大幅降低；</p>
<h3 id="对症下药"><a class="markdownIt-Anchor" href="#对症下药"></a> 对症下药</h3>
<table>
<thead>
<tr>
<th>问题</th>
<th>（潜在）解决方法</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>vnode</code>节点的时间消耗</td>
<td>1. 时间切片/任务切片；<code>&lt;br&gt;</code> 2. 重新组织组件结构；</td>
</tr>
<tr>
<td><code>input</code>组件所引发的高度计算</td>
<td>1. 替换 <code>textarea</code>组件，避免重排；<code>&lt;br&gt;</code> 2. 提 <code>PR</code>；</td>
</tr>
<tr>
<td><code>table</code>组件所引发的滚动高度和宽度计算</td>
<td>截取显示字符长度；</td>
</tr>
<tr>
<td><code>vue</code>响应式数据数据劫持初始化</td>
<td>数据冻结：<code>Object.freeze()</code>；</td>
</tr>
</tbody>
</table>
<h1 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h1>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/25166666">Effective前端6：避免页面卡顿 - 知乎</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/38448752">一个Vue页面的内存泄露分析 - 知乎</a></li>
<li><a href="https://juejin.cn/post/6844904048961781774">js 内存泄漏场景、如何监控以及分析</a></li>
<li><a href="https://cn.vuejs.org/v2/cookbook/avoiding-memory-leaks.html">避免内存泄漏 — Vue.js</a>：官方指南</li>
<li><a href="https://segmentfault.com/a/1190000020231307">深入了解 JavaScript 内存泄露 - SegmentFault 思否</a></li>
<li><a href="https://wiki.jikexueyuan.com/project/chrome-devtools/javascript-memory-profiling.html">JavaScript 内存分析 - Chrome 开发工具指南 - 极客学院Wiki</a></li>
<li><a href="https://www.jianshu.com/p/851b5bb0a4d4">Shallow Size和Retained Size详解 - 简书</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Editable_content">Content Editable - Web 开发者指南 | MDN</a></li>
<li><a href="https://juejin.cn/post/6844903847249330184">时间切片（Time Slicing）</a></li>
<li><a href="https://csstriggers.com/">CSS Triggers</a></li>
<li><a href="https://segmentfault.com/a/1190000008377887">Vue原理解析之observer模块 - SegmentFault 思否</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/38448752">一个Vue页面的内存泄露分析 - 知乎</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://segmentfault.com/a/1190000013107871">JavaScript 深拷贝性能分析 - SegmentFault 思否</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea"><code>&lt;textarea&gt;</code> - HTML（超文本标记语言） | MDN</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://juejin.cn/post/6844903922469961741">Vue性能提升之Object.freeze()</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>优化</category>
      </categories>
      <tags>
        <tag>内存泄漏</tag>
        <tag>Vue</tag>
        <tag>响应式数据</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义vue-cli远程preset模板</title>
    <url>/post/vue-cli-remote-preset/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p><code>vue-cli</code>提供了一个名为<code>preset</code>的功能，即预设，顾名思义就是将<code>vue-cli</code>的一些设置保存在<code>preset</code>文件中，以便快速复用；</p>
<p>而远程<code>preset</code>则拥有更多的扩展性，可以用来定制扩展的脚手架功能，如定制项目模板；</p>
<span id="more"></span>
<h2 id="远程preset的组成"><a class="markdownIt-Anchor" href="#远程preset的组成"></a> 远程preset的组成</h2>
<p>远程<code>preset</code>本质上就是一个<code>vue-cli</code>插件项目，其中最核心的部分是：</p>
<ul>
<li><code>preset.json</code>：预设文件，可以被<code>vue-cli</code>识别自动安装一些插件；</li>
<li><code>prompts.js</code>：返回一个数组，该数组格式参照<a href="https://github.com/SBoudrias/Inquirer.js">inquirer.js</a>的<code>prompt</code>方法参数，因此该文件的功能就是提供一个交互式命令，交互的结果会被传递到生成器（即<code>generator/index.js</code>导出的函数）中；</li>
<li><code>generator/index.js</code>：生成器，该文件导出一个函数，该函数接收三个参数，提供一些内置的<code>API</code>和交互参数，用于处理项目文件及结构；</li>
</ul>
<h2 id="远程preset处理流程"><a class="markdownIt-Anchor" href="#远程preset处理流程"></a> 远程preset处理流程</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210209130557.png?imageslim" alt="img" /></p>
<h2 id="生成器"><a class="markdownIt-Anchor" href="#生成器"></a> 生成器</h2>
<p>生成器可以说是整个远程<code>preset</code>中扩展性最强的部分，也是自由度最大的部分，除了可以接收<code>preset</code>配置和交互式命令的结果，还能利用提供的<code>Generator API</code>实例快速地改变项目结构和自由组合；</p>
<h3 id="生成器函数的结构"><a class="markdownIt-Anchor" href="#生成器函数的结构"></a> 生成器函数的结构</h3>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// generator/index.js</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function">(<span class="params">api, options, preset</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><code>api</code>：<code>Generator API</code>实例，详见：<a href="https://cli.vuejs.org/dev-guide/generator-api.html">https://cli.vuejs.org/dev-guide/generator-api.html</a></li>
<li><code>options</code>：交互结果的答案选项</li>
<li><code>preset</code>：<code>preset.json</code>文件中<code>json</code>对象，还包括一些项目基本信息，如项目名称等</li>
</ul>
<h3 id="常用的generator-api"><a class="markdownIt-Anchor" href="#常用的generator-api"></a> 常用的Generator API</h3>
<ul>
<li>
<p><code>extendPackage(packageInfo: object)</code>：用于合并生成项目中的<code>package.json</code>，<br />
传入需要增加或覆盖的字段即可，如：</p>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">api.<span class="title function_">extendPackage</span>(&#123;</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;lint:nofix&quot;</span>: <span class="string">&quot;vue-cli-service lint --no-fix&quot;</span>,</span><br><span class="line">    <span class="string">&quot;lint:ts&quot;</span>: <span class="string">&quot;vue-cli-service lint --ext .ts --no-fix&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type-check&quot;</span>: <span class="string">&quot;tsc --noEmit&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;devDependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;lint-staged&quot;</span>: <span class="string">&quot;^10.2.11&quot;</span>,</span><br><span class="line">    <span class="string">&quot;chalk&quot;</span>: <span class="string">&quot;^4.1.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cz-conventional-changelog&quot;</span>: <span class="string">&quot;^3.2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;husky&quot;</span>: <span class="string">&quot;^4.2.5&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;lint-staged&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;src/**/*.(js|ts|vue)&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;vue-cli-service lint --no-fix&quot;</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;husky&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;hooks&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;pre-commit&quot;</span>: <span class="string">&quot;npm run type-check &amp;&amp; lint-staged&quot;</span>,</span><br><span class="line">      <span class="string">&quot;commit-msg&quot;</span>: <span class="string">&quot;node ./hooks/commit-msg $HUSKY_GIT_PARAMS &amp;&amp; commitlint -E HUSKY_GIT_PARAMS&quot;</span>,</span><br><span class="line">      <span class="string">&quot;post-merge&quot;</span>: <span class="string">&quot;node ./hooks/post-merge&quot;</span>,</span><br><span class="line">      <span class="string">&quot;pre-push&quot;</span>: <span class="string">&quot;node ./hooks/pre-push $HUSKY_GIT_PARAMS&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><code>render()</code>：用于渲染模板文件，实际上背后就是基于<code>ejs</code>渲染引擎；该方法有三个参数，一般情况下只会用到第一个参数，用于添加模板文件或者移除一些默认文件；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20210209130635.png?imageslim" alt="img" /></p>
<ul>
<li>
<p>由于渲染引擎是<code>ejs</code>，因此如果模板文件中包含了一些<code>ejs</code>语句，就需要对一些语句进行特殊处理，否则渲染时会报错；主要的是将<code>&lt;%</code>变成<code>&lt;%%</code>即可，这样在渲染后模板文件中的<code>&lt;%%</code>就会自动变成<code>&lt;%</code>，在项目中使用就是正常的；</p>
</li>
<li>
<p>对于<code>ejs</code>不能识别的那些文件，只要<font color=#f00>不是空文件</font>就会按相对于模板根目录的路径<font color=#f00>复制到</font>创建项目中；</p>
</li>
<li>
<p>利用回调函数，甚至可以删除默认创建的一些文件，如：</p>
</li>
</ul>
  <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 删除 vue-cli 默认目录</span></span><br><span class="line">api.<span class="title function_">render</span>(<span class="function"><span class="params">files</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="title class_">Object</span>.<span class="title function_">keys</span>(files)</span><br><span class="line">    .<span class="title function_">filter</span>(removeFile)</span><br><span class="line">    .<span class="title function_">forEach</span>(<span class="function"><span class="params">path</span> =&gt;</span> <span class="keyword">delete</span> files[path]) <span class="comment">// 删除键等同于删除对应的文件</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>可以看到回调函数可以得到一个对象，该对象是当前项目中已经存在的文件，键名就是文件路径（包括文件名），当删除该对象的键（即属性）时等同于删除了该文件，可以用来删除<code>vue-cli</code>创建的某些默认文件；</p>
</li>
</ul>
<h2 id="模板文件"><a class="markdownIt-Anchor" href="#模板文件"></a> 模板文件</h2>
<p>所谓的模板文件，就是指通过<code>render()</code>方法进行渲染或者复制到新项目的那些文件，其本质上是一个空白项目（或者一部分）；模板文件可以放在一个文件夹内，也可以分开放在不同的地方，根据参数不同然后进行组装，这取决于创建项目的流程设计了；</p>
<h3 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h3>
<ul>
<li>文件名如果是以点<code>.</code>开头的（常见于配置文件），需要把点换成下划线<code>_</code>；</li>
<li>文件名如果是以单个下划线<code>_</code>开头的，需要把单个下划线<code>_</code>替换成双下划线<code>__</code>；</li>
</ul>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://ejs.co/">EJS – Embedded JavaScript templates</a></li>
<li><a href="https://cli.vuejs.org/zh/guide/plugins-and-presets.html#%E8%BF%9C%E7%A8%8B-preset">插件和 Preset | Vue CLI</a></li>
<li><a href="https://cli.vuejs.org/dev-guide/generator-api.html">Generator API | Vue CLI</a></li>
<li><a href="https://cli.vuejs.org/zh/dev-guide/plugin-dev.html#generator">插件开发指南 | Vue CLI</a></li>
<li><a href="https://juejin.cn/post/6844904099821912077">定制一套方便自己开发的Vue-Cli项目模版</a></li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>基建</tag>
        <tag>vue-cli</tag>
        <tag>脚手架</tag>
      </tags>
  </entry>
  <entry>
    <title>在vue-cli项目中使用scss</title>
    <url>/post/vue-cli-scss/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>最近想在一个使用<code>vue-cli</code>的小项目中，使用<code>scss</code>来编写样式；如果不需要引入公共的<code>scss</code>文件的话，那只需要在<code>&lt;style&gt;</code>中设置<code>lang=&quot;scss&quot;</code>即可。但是一般使用<code>scss</code>的时候，都会设置<strong>公共文件</strong>进行引用，方便代码复用。所以，如果需要像普通引入公共<code>scss</code>文件的话，需要进行一些配置。</p>
<span id="more"></span>
<h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2>
<h3 id="安装相关依赖包"><a class="markdownIt-Anchor" href="#安装相关依赖包"></a> 安装相关依赖包</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm i node-sass --save-dev</span><br><span class="line">npm i sass-loader --save-dev</span><br><span class="line">npm i sass-resources-loader --save-dev</span><br></pre></td></tr></table></figure>
<h3 id="修改loader配置"><a class="markdownIt-Anchor" href="#修改loader配置"></a> 修改Loader配置</h3>
<p><code>vue-cli</code>项目的<code>loader</code>配置文件是<code>build/utils.js</code>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180902/4B041EBjK0.png?imageslim" alt="mark" /></p>
<p>然后新增一个函数，如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">generateSassResourceLoader</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> loaders = [</span><br><span class="line">      cssLoader,</span><br><span class="line">      <span class="string">&#x27;sass-loader&#x27;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">loader</span>: <span class="string">&#x27;sass-resources-loader&#x27;</span>,</span><br><span class="line">        <span class="attr">options</span>: &#123;</span><br><span class="line">          <span class="comment">// 引入多个文件时用数组的形式传入，单个文件时可以直接使用如下形式</span></span><br><span class="line">          <span class="attr">resources</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;../src/style/common.scss&#x27;</span>)  </span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">    <span class="comment">// Extract CSS when that option is specified</span></span><br><span class="line">    <span class="comment">// (which is the case during production build)</span></span><br><span class="line">    <span class="keyword">if</span> (options.<span class="property">extract</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">ExtractTextPlugin</span>.<span class="title function_">extract</span>(&#123;</span><br><span class="line">        <span class="attr">use</span>: loaders,</span><br><span class="line">        <span class="attr">fallback</span>: <span class="string">&#x27;vue-style-loader&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> [<span class="string">&#x27;vue-style-loader&#x27;</span>].<span class="title function_">concat</span>(loaders)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后把<code>exports.cssLoaders</code>的<code>return</code>项中的<code>scss</code>属性值改成上面新增的函数：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">scss</span>: <span class="title function_">generateSassResourceLoader</span>()</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">  <span class="attr">css</span>: <span class="title function_">generateLoaders</span>(),</span><br><span class="line">  <span class="attr">postcss</span>: <span class="title function_">generateLoaders</span>(),</span><br><span class="line">  <span class="attr">less</span>: <span class="title function_">generateLoaders</span>(<span class="string">&#x27;less&#x27;</span>),</span><br><span class="line">  <span class="attr">sass</span>: <span class="title function_">generateLoaders</span>(<span class="string">&#x27;sass&#x27;</span>, &#123; <span class="attr">indentedSyntax</span>: <span class="literal">true</span> &#125;),</span><br><span class="line">  <span class="attr">scss</span>: <span class="title function_">generateSassResourceLoader</span>(), <span class="comment">// 修改成自定义的loader函数</span></span><br><span class="line">  <span class="attr">stylus</span>: <span class="title function_">generateLoaders</span>(<span class="string">&#x27;stylus&#x27;</span>),</span><br><span class="line">  <span class="attr">styl</span>: <span class="title function_">generateLoaders</span>(<span class="string">&#x27;stylus&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2>
<p>配置完后，就可以在<code>vue</code>文件使用引入的公共<code>scss</code>文件中的变量和样式了。</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://blog.csdn.net/qq_27868533/article/details/79651659">vue引入sass全局变量</a></li>
<li><a href="https://www.cnblogs.com/wuzhendong/p/8078659.html">在vue-cli中安装scss，且可以全局引入scss的步骤</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>sass</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-lazyload的一个坑：事件失效</title>
    <url>/post/vue-lazyload-event-not-work/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>使用<code>vue-lazyload</code>的<code>lazy-component</code>组件对某个组件进行包裹，然后对组件整体设置懒加载效果时，存在一个坑：该组件内部的自定义组件（即非原生<code>html</code>标签）<font color=red><strong>所有的自定义事件都会失效</strong></font>，且可能<strong>视图渲染不完全</strong>（多层组件嵌套时）；</p>
<span id="more"></span>
<h2 id="可能的原因"><a class="markdownIt-Anchor" href="#可能的原因"></a> 可能的原因</h2>
<p>初步猜测是<code>lazy-component</code>渲染函数的问题，因为渲染函数可以控制内部子元素的事件和属性等配置的挂载；然后一看该组件<a href="https://github.com/hilongjw/vue-lazyload/blob/8647831c1422ee0bb32d5839c7250a7a3dba7563/src/lazy-component.js#L12">源码</a>，其内部渲染函数为：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200704125530.png?imageslim" alt="img" /></p>
<p>不知道是不是跟渲染函数的第二个参数为<code>null</code>有关，渲染函数的第二个参数是用来设置<code>attribute</code>相关的参数（即包括指令，自定义事件<code>v-on</code>及<code>props</code>等相关的属性）；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200704125548.png?imageslim" alt="img" /></p>
<h2 id="解决办法"><a class="markdownIt-Anchor" href="#解决办法"></a> 解决办法</h2>
<p>首先本能地使用<code>Vue</code>实例自带的<code>$foreUpdate()</code>对组件内部进行强制重新渲染，但是重新渲染后还是存在上述问题；毕竟<code>$foreUpdate()</code>方法本质上就是再次调用组件的渲染函数进行渲染，如果渲染函数本身就存在问题，重新渲染多少次都没用。</p>
<p>直接修改源码也是一种办法，不过发现直接改源码并没有用，因为<code>vue-lazyload</code>包主文件是一个编译后压缩的<code>js</code>文件（大多数包都是编译后的），也就是说如果要通过改源码这一途径来解决就需要对这个包进行编译……这个还是有点麻烦的，毕竟看了一下里面的依赖挺多的；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200704125602.png?imageslim" alt="img" /></p>
<p>不过好在发现这个<code>lazy-component</code>有个<a href="https://github.com/hilongjw/vue-lazyload/blob/8647831c1422ee0bb32d5839c7250a7a3dba7563/src/lazy-component.js#L45">自定义事件<code>show</code></a>，看源码应该是在懒加载组件从不可见区域进入可见区域时触发的，有了这个时间点就好办了；只需要利用这个时间点，用<code>lazy-component</code>进行占位，然后列表项进入可见区域后马上隐藏<code>lazy-component</code>且显示真正的列表项组件，因为此时<code>lazy-component</code>组件和要进行懒加载的列表项组件是平级的（即兄弟关系），所以就避免了<code>lazy-component</code>组件渲染的坑，还可以直接利用其懒加载功能；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200704125617.png?imageslim" alt="img" /></p>
<p>可以写成一个新的懒加载组件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- lazy-item组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 通过lazy-component组件的show事件来切换真正的内容 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lazy-component</span> <span class="attr">v-if</span>=<span class="string">&quot;showLazy&quot;</span> <span class="attr">class</span>=<span class="string">&quot;item-lazy&quot;</span> @<span class="attr">show</span>=<span class="string">&quot;load&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 直接透传prop和自定义事件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list-item</span> <span class="attr">v-else</span> <span class="attr">v-on</span>=<span class="string">&quot;$listeners&quot;</span> <span class="attr">v-bind</span>=<span class="string">&quot;$attrs&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">LayzItem</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Vue</span> &#123;</span><br><span class="line">  name = <span class="string">&#x27;LayzItem&#x27;</span></span><br><span class="line"></span><br><span class="line">  private showLazy = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  private <span class="title function_">load</span> () &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;懒加载load&#x27;</span>)</span><br><span class="line">    <span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">showLazy</span> = <span class="literal">false</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="一个小技巧透传"><a class="markdownIt-Anchor" href="#一个小技巧透传"></a> 一个小技巧：透传</h2>
<p>所谓的透传就是将<strong>父组件的属性直接传给子组件</strong>，而不是通过在父组件定义相关的<code>props</code>和事件，然后再传入到子组件上；如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">list-item</span> <span class="attr">v-else</span> <span class="attr">v-on</span>=<span class="string">&quot;$listeners&quot;</span> <span class="attr">v-bind</span>=<span class="string">&quot;$attrs&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>通过<code>v-on</code>直接绑定父组件的<code>$listeners</code>属性，可以将父组件上绑定的所有事件直接绑定到子组件上；同理，<code>$attrs</code>包含组件的所有<code>attribute</code>属性，通过<code>v-bind</code>则可以直接绑定到子组件上；</p>
<p>透传的好处就是不需要在父组件中重新定义相关属性再中转给子组件，适用于<font color=#39f><strong>希望将父组件上的相关属性直接传递给子组件</strong></font>的情况；上面这种包装列表项为懒加载组件的情况就很适用，因为直接在懒加载组件（父组件）上绑定的属性和事件就可以原封不动地传给真正的列表项了。</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://www.zhihu.com/question/302249432/answer/530484251">修改nodejs项目中node_modules的代码，不能生效吗？ - 知乎</a></li>
<li><a href="https://cn.vuejs.org/v2/guide/render-function.html#%E5%90%91%E5%AD%90%E5%85%83%E7%B4%A0%E6%88%96%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E9%80%92-attribute-%E5%92%8C%E4%BA%8B%E4%BB%B6">渲染函数 &amp; JSX — Vue.js</a></li>
</ul>
]]></content>
      <categories>
        <category>踩坑</category>
      </categories>
      <tags>
        <tag>vue-lazyload</tag>
      </tags>
  </entry>
  <entry>
    <title>vue3核心原理：响应式数据系统</title>
    <url>/post/vue3-reactive/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>以下这几个模块是<code>vue3</code>发布订阅系统和响应式数据的核心组成；事实上<code>vue2</code>也有相应的组成部分，只不过依附在<code>vue</code>实例上，但是<code>vue3</code>把相应的模块独立出来，不再依附于<code>vue</code>实例；</p>
<span id="more"></span>
<h2 id="ref-模块"><a class="markdownIt-Anchor" href="#ref-模块"></a> ref 模块</h2>
<p><code>ref</code>模块总体作用是对数据进行<strong>响应式处理</strong>，即进行数据劫持，监听<code>set</code>和<code>get</code>操作；<code>set</code>操作内对比数据改变以便通知订阅者进行更新（使用<code>trigger</code>模块），<code>get</code>操作内则追踪依赖者（使用<code>track</code>模块），也就是所谓的依赖收集，这些依赖者也就是订阅者；画成流程图大致如下：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123422.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123433.png?imageslim" alt="img" /></p>
<p>上图是对<a href="https://github.com/vuejs/vue-next/blob/c219cbfb01207a3645e4b66b2887a5b678098261/packages/reactivity/src/ref.ts#L44">ref模块核心代码</a>的大致功能划分，可以看出源码的逻辑很清晰；经过<code>ref</code>函数包裹后得到的数据结构如下：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">Ref</span>&lt;T = <span class="built_in">any</span>&gt; &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Type differentiator only.</span></span><br><span class="line"><span class="comment">   * We need this to be in public d.ts but don&#x27;t want it to show up in IDE</span></span><br><span class="line"><span class="comment">   * autocomplete, so we use a private Symbol instead.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  [<span class="title class_">RefSymbol</span>]: <span class="literal">true</span></span><br><span class="line">  <span class="attr">value</span>: T</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>即得到的数据是一个含有<code>value</code>属性的对象，而属性值就是原始数据；为何要包裹成一个对象？原因就是<code>JS</code>中的<font color=#f00>原始类型值无法进行数据劫持</font>以便构成响应式数据，因此只好包裹成对象。</p>
<h2 id="effect-模块"><a class="markdownIt-Anchor" href="#effect-模块"></a> effect 模块</h2>
<p><code>effect</code>模块是专门<font color=#39f>用来收集函数内的副作用</font>，当然，这不是说函数所有的副作用都能用<code>effect</code>进行收集；<code>effect</code>能够收集的副作用仅限于响应式数据（即<code>Ref</code>对象或对数据进行类似<code>Ref</code>对象的劫持处理），一般是函数内<font color=#f00><code>get</code></font>了响应式数据；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123443.png?imageslim" alt="img" /></p>
<p>从上面这个流程图可以看出，<code>effect</code>模块主要包含三个函数：</p>
<ul>
<li><code>effect</code>：这个函数的作用实际上就是限定当前副作用发生的范围，可以简单地理解为标记当前副作用为活动状态，<font color=#39f>便于进行依赖收集</font>；</li>
<li><code>track</code>：这个函数的作用就十分明显了，就是收集当前活动的副作用作为依赖，即<font color=#39f>增加订阅者</font>；</li>
<li><code>trigger</code>：同理，这个函数就是用于<font color=#39f>通知订阅者进行更新</font>；</li>
</ul>
<p>所以，<code>effect</code>模块简单地来说就是<font color=#f00>充当发布者和订阅者之间的桥梁</font>；可以看下<code>effect</code>的<a href="https://github.com/vuejs/vue-next/blob/50adc014f59a7f385c836014abb059ec72c52239/packages/reactivity/src/effect.ts#L79">构建函数</a>，逻辑十分清晰：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123452.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123502.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123514.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123522.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123532.png?imageslim" alt="img" /></p>
<h2 id="comupted-模块"><a class="markdownIt-Anchor" href="#comupted-模块"></a> comupted 模块</h2>
<p>只要理解了<code>effect</code>模块的作用，那就能很快理解<code>computed</code>模块的原理了；所谓的计算属性的核心就是一个<code>getter</code>函数，这个函数<font color=#f00>是天然的副作用</font>，即这个<code>getter</code>函数<font color=#f00>必然会依赖其他响应式数据</font>；既然是副作用函数，那就直接借助<code>effect</code>模块就能收集依赖和触发更新了，这一点同<code>Ref</code>对象很像，而从<a href="https://github.com/vuejs/vue-next/blob/619efd9ac5a0d38651b7282722e7b347a013411a/packages/reactivity/src/computed.ts#L58">源码</a>就可以看出，<code>computed</code>函数返回的数据就是一个<font color=#39f>特殊的<code>Ref</code>对象</font>；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123543.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123550.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123600.png?imageslim" alt="img" /></p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123608.png?imageslim" alt="img" /></p>
<h2 id="reactive模块"><a class="markdownIt-Anchor" href="#reactive模块"></a> reactive模块</h2>
<p>这个模块从功能上看起来跟<code>ref</code>有点类似，都是<strong>构建响应式数据</strong>，但是两者之间还是有区别的，这个区别<a href="https://composition-api.vuejs.org/zh/#ref-vs-reactive">官方文档</a>上也有说明；简单地来说：</p>
<ul>
<li><code>ref</code>函数适合对<font color=#39f>原始类型的变量</font>进行响应式数据处理；</li>
<li><code>reactive</code>函数则适合对<font color=#39f>对象类型的变量</font>进行响应式数据处理；</li>
</ul>
<p>基于<code>reactive</code>构造得到的响应式数据的特点可知：这种响应式数据<font color=#f00>只能通过对象属性形式生效</font>，一旦将其中的属性<font color=#f00>通过解构或者是赋值剥离原对象，则会丧失其响应性</font>；不过官方也提供了<code>toRefs</code>函数来解决这个问题，<code>toRefs</code>函数可以将<code>reactive</code>数据对象的每个属性值包装成<code>Ref</code>对象，因此被剥离原对象也可以保持响应性；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123616.png?imageslim" alt="img" /></p>
<p>上图只是简单地描述了典型的对象被代理成响应式数据的过程，着重关注于<code>set</code>和<code>get</code>的代理，其他的代理属性和类型可以查看源码；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123626.png?imageslim" alt="img" /></p>
<p>上图就是<code>reactive</code>构建函数了，从其中逻辑可以看出构造<code>reactive</code>数据的关键就在于设置代理配置了，根据不同的参数及不同的对象类型就可以设置相应的代理配置，从而得到不同的代理效果；</p>
<p>代理配置源码中有<font color=#f00>一个亮点</font>：在代理深层对象时，并不是一开始就是直接进行递归调用，遍历每层对象属性；而是<font color=#39f>采用惰性初始模式</font>，延迟递归发生的时机，即把深层次对象的递归放入<code>get</code>代理函数中，因此只有第一次真正<code>get</code>访问到这个深层对象时才会执行初始化函数；</p>
<blockquote>
<p>在程式设计中, 惰性初始是一种拖延战术。在第一次需求出现以前，先延迟创建物件、计算值或其它昂贵程序。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>这样做有什么好处？除了避免一开始就递归大量属性时的风险，源码注释<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>上也说了：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="title function_">isObject</span>(res)) &#123;</span><br><span class="line">  <span class="comment">// Convert returned value into a proxy as well. we do the isObject check</span></span><br><span class="line">  <span class="comment">// here to avoid invalid value warning. Also need to lazy access readonly</span></span><br><span class="line">  <span class="comment">// and reactive here to avoid circular dependency.</span></span><br><span class="line">  <span class="keyword">return</span> isReadonly ? <span class="title function_">readonly</span>(res) : <span class="title function_">reactive</span>(res)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这种模式<font color=#f00>还能避免循环引用时所产生的堆栈溢出的情况</font>，毕竟只有真正<code>get</code>到这个属性时才会执行初始化函数，因此即便对象属性中发生了循环引用，没有通过属性访问符来无限访问就不会引起一般情况下所产生的堆栈溢出；</p>
<p>上面这种用法其实在<code>computed</code>模块中也有类似的应用。</p>
<h2 id="watch-模块"><a class="markdownIt-Anchor" href="#watch-模块"></a> watch 模块</h2>
<p><code>watch</code>模块的本质就是<font color=#39f><strong>监听响应式数据</strong></font>，当数据更新时执行回调函数；看到响应式数据和更新回调就立马能想到<code>effect</code>模块了，没错，<code>watch</code>模块内部就是<font color=#f00>构造了一个副作用</font>，从而将副作用加入到响应式数据中的依赖列表中；</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226123635.png?imageslim" alt="img" /></p>
<p>上面这个流程图就是对<code>watch</code>模块内部核心逻辑的简单概括；</p>
<p><code>watch</code>模块中还有一个<a href="https://github.com/vuejs/vue-next/blob/4172fdb90cd75d5741f843a227cfe9b5f5b22b35/packages/runtime-core/src/apiWatch.ts#L75"><code>watchEffect</code>函数</a>，看起来好像是用于监听副作用对象的，但是我看源码这个监听好像并没啥用处？有点疑惑……</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/%E5%89%AF%E4%BD%9C%E7%94%A8_(%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6)">副作用 (计算机科学) - 维基百科，自由的百科全书</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://zh.wikipedia.org/wiki/%E6%83%B0%E6%80%A7%E5%88%9D%E5%A7%8B%E6%A8%A1%E5%BC%8F">https://zh.wikipedia.org/wiki/惰性初始模式</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://github.com/vuejs/vue-next/blob/d005b578b183f165929e1f921584ce599178cad6/packages/reactivity/src/baseHandlers.ts#L88">https://github.com/vuejs/vue-next/blob/d005b578b183f165929e1f921584ce599178cad6/packages/reactivity/src/baseHandlers.ts#L88</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vuex基本使用</title>
    <url>/post/vuex-basic/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>在使用<code>Vue.js</code>制作项目时，有时发现一些变量和参数需要在多个组件之间进行使用，且组件<code>A</code>中该参数的改变需要同时使组件<code>B</code>发生相应更新；因此就需要在这些组件能够共同访问的地方定义公共参数。</p>
<span id="more"></span>
<p>之前使用过一个『不太好』的方法，就是直接在<code>Vue</code>对象（准确来说相当于<code>Vue class</code>）的<code>prototype</code>上添加需要使用的公共变量，因此所有<code>Vue</code>实例（包括组件，因为组件实际上也是<code>Vue</code>实例？）都可以继承并访问到这个属性，也就可以在多个组件间进行使用。然而这里实际上有个<font color=#39f>『坑』</font>，理解原型链就能知道，对<code>Vue</code><font color=#39f><strong>实例</strong></font>的属性进行改变并不会影响到<code>Vue</code>的<code>prototype</code>同名属性，自然也就无法对其他组件进行及时更新；这么做也无法使用<code>Vue</code>本身的数据依赖机制，但是如果那个<font color=red><strong>公共属性是常量</strong></font>的话完全可以使用上述方法。</p>
<h2 id="vuex"><a class="markdownIt-Anchor" href="#vuex"></a> Vuex</h2>
<blockquote>
<p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。Vuex 也集成到 Vue 的官方调试工具 devtools extension，提供了诸如零配置的 time-travel 调试、状态快照导入导出等高级调试功能。</p>
</blockquote>
<p>简言之，<code>Vuex</code>就是用来在<code>Vue</code>中管理组件状态的官方工具。</p>
<h2 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h2>
<h3 id="state"><a class="markdownIt-Anchor" href="#state"></a> State</h3>
<p>相当于<code>Vue</code>实例或组件中的<code>data</code>属性，在组件中可以通过<code>this.$store.state</code>来访问获取相应的<code>state</code>属性；</p>
<h3 id="getter"><a class="markdownIt-Anchor" href="#getter"></a> Getter</h3>
<p>相当于<code>Vue</code>实例或组件中的<code>computed</code>属性，定义一个方法来对某一个或多个<code>state</code>进行处理，并返回相应的值，因此该方法<font color=red><strong>依赖于</strong></font>用到的<code>state</code>属性，只要依赖的<code>state</code>属性没有发生改变，该<code>getters</code>的值就不会发生改变；在组件中可以通过<code>this.$store.getters</code>来访问获取相应的<code>getters</code>属性；</p>
<h3 id="mutation"><a class="markdownIt-Anchor" href="#mutation"></a> Mutation</h3>
<p>为了方便进行管理数据依赖，并不能直接对<code>store</code>里的<code>state</code>进行直接更改，<font color=red><strong>唯一的方法</strong></font>就是使用<code>mutations</code>里注册的方法进行相应更改；因此<code>mutations</code>就相当于<code>Vue</code>实例或组件中的<code>methods</code>属性，并且类似于组件中的自定义事件，需要使用的时候要『触发』相应的方法，即在组件中要使用<code>this.$store.commit('type', payload)</code>，其中<code>type</code>就是<code>mutations</code>中定义的方法名，<code>prelaod</code>就是需要传给该方法的参数。需要注意的是在<code>mutations</code>中的方法<font color=red><strong>必须是同步的，即不能有异步回调</strong></font>！！！</p>
<h3 id="action"><a class="markdownIt-Anchor" href="#action"></a> Action</h3>
<p>跟<code>mutations</code>类似，<code>actions</code>也相当于<code>Vue</code>实例或组件中的<code>methods</code>属性；但是<code>actions</code>里的方法<font color=red><strong>一般都是执行异步回调操作</strong></font>，并在回调完成后执行<code>commit</code>操作来『触发』<code>mutations</code>中的方法。在组件中可以使用<code>this.$store.dispatch('type', payload)</code>来『触发』相应的<code>actions</code>方法。</p>
<h3 id="响应式获取状态"><a class="markdownIt-Anchor" href="#响应式获取状态"></a> 响应式获取状态</h3>
<p>在组件中如果要响应式地依赖状态值，那么最好在<code>computed</code>属性中返回一个状态，这样状态一旦改变，这边的值也会相应的更新。如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">computed</span>: &#123;</span><br><span class="line">        <span class="title function_">playing</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">state</span>.<span class="property">playing</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">song</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">getters</span>.<span class="property">curSong</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://vuex.vuejs.org/zh/">Vuex 是什么？ | Vuex</a></li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>note</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>网页加载与阻塞</title>
    <url>/post/web-load-and-block/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<blockquote>
<p>注：本文写于2020年较早的时候，只是最近整理发布，因此关于渲染流程的认识比较肤浅，重点关注阻塞策略部分就好了；</p>
</blockquote>
<span id="more"></span>
<h2 id="基本流程"><a class="markdownIt-Anchor" href="#基本流程"></a> 基本流程</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226113138.png?imageslim" alt="img" /></p>
<h2 id="相关概念"><a class="markdownIt-Anchor" href="#相关概念"></a> 相关概念</h2>
<ul>
<li>
<p><code>DOM</code>：<code>Document Object Model</code>，即文档对象模型；用于描述文档的结构及元素属性，是HTML和XML文档的编程接口（和<code>JS</code>进行交互的接口）。</p>
</li>
<li>
<p><code>CSSOM</code>：<code>CSS Object Model</code>，即<code>CSS</code>对象模型；跟<code>DOM</code>类似，不过<code>CSSOM</code>是用来描述样式的结构和属性，是<code>CSS</code>的编程接口（和<code>JS</code>进行交互的接口）。</p>
</li>
<li>
<p><code>Render Tree</code>：是<code>DOM</code>和<code>CSSOM</code>两者的结构，渲染树即包含<strong>可以被渲染</strong>的元素节点，同时也包含对应节点的样式信息；</p>
<p>哪些节点是不会被解析到渲染树中？</p>
<ul>
<li>不包括<code>head</code>、<code>script</code>、<code>meta</code>等不可见的节点；</li>
<li>某些通过<code>CSS</code>隐藏的节点在渲染树中也会被忽略，比如应用了<code>display:none</code> 规则的节点（<code>visibility: hidden</code>只是视觉不可见，仍占据空间，不会被忽略）<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>；</li>
</ul>
</li>
<li>
<p><code>Layout</code>：布局；根据渲染树进一步计算出每个渲染节点的位置和尺寸信息（对应顶点着色器的工作？）；</p>
</li>
<li>
<p><code>Paint</code>：绘制；根据布局信息，得出渲染节点的像素信息，最终通过显卡绘制到屏幕的相应区域（对应片元着色器的工作？）；</p>
</li>
<li>
<p><strong>回流</strong>：<code>reflow</code>，也叫重排；该流程会重新计算文档中元素的布局信息，某些对<code>DOM</code>或<code>CSS</code>的修改就会引发回流；</p>
</li>
<li>
<p><strong>重绘</strong>：<code>repaint</code>，即重新绘制部分或全部文档元素；当元素的像素信息改变时会触发重绘，很明显，回流必定引发重绘；</p>
</li>
</ul>
<h2 id="阻塞策略"><a class="markdownIt-Anchor" href="#阻塞策略"></a> 阻塞策略</h2>
<p>虽然普通的<code>link</code>及<code>script</code>会阻塞<code>DOM</code>的解析，但是有一些方法可以调整原始的阻塞策略；</p>
<h3 id="调整script位置"><a class="markdownIt-Anchor" href="#调整script位置"></a> 调整script位置</h3>
<p>由于<code>script</code>不论内联还是外部，不论加载与否都会阻塞<code>DOM</code>的解析，因此将<code>script</code>标签移至<code>DOM</code>最后（即<code>&lt;body&gt;</code>闭合标签前），可以最小地影响<code>DOM</code>的解析。</p>
<h3 id="deferasync属性"><a class="markdownIt-Anchor" href="#deferasync属性"></a> defer/async属性</h3>
<p>这两个可以用于<strong>非内联</strong><code>script</code>标签（即必须设置<code>src</code>属性），当设置为<code>true</code>时，对应的<code>script</code>标签不会阻塞<code>DOM</code>的解析，但是两个属性的作用还是有所不同的。</p>
<h4 id="defer属性"><a class="markdownIt-Anchor" href="#defer属性"></a> defer属性</h4>
<p><code>defer</code>，意为延迟；该属性除了可以使<code>script</code>标签不阻塞<code>DOM</code>解析，还会使对应的<code>script</code>标签的执行阶段延迟到<font color=red><code>DOM</code>解析完成后，<code>DOMContentLoaded</code>事件触发前</font>；也就是所有的<code>defer</code>脚本都必须在加载完且<code>DOM</code>解析完成后才能执行，且<strong>按照顺序</strong>执行；</p>
<h4 id="async属性"><a class="markdownIt-Anchor" href="#async属性"></a> async属性</h4>
<p>这个属性就比较简单粗暴，仅仅只是不阻塞<code>DOM</code>而已，加载完后对应的<code>script</code>会按顺序执行，因此执行的时机取决于加载完成的时间点（有可能在<code>DOMContentLoaded</code>事件触发前执行，也可能在触发后执行），<font color=red>但是必定会在<code>window</code>的<code>load</code>事件触发前</font>执行；</p>
<h2 id="预加载策略"><a class="markdownIt-Anchor" href="#预加载策略"></a> 预加载策略</h2>
<p>预加载，顾名思义就是预先加载某些会用到的文件，可以是脚本、样式，也可以是媒体文件等；通过预加载设置可以改变原本的一些文件加载顺序和优先级；</p>
<p>设置<code>link</code>标签的<code>rel</code>属性为<code>preload</code>或<code>prefetch</code>可以开启对应文件的预加载，此时<code>href</code>属性值就是预加载的文件地址，然后通过<code>as</code>属性可以指定文件用途（浏览器内部根据不同的<code>as</code>类型会有不同的加载优先级）；</p>
<blockquote>
<p>preload 还有许多其他好处。使用 as来指定将要预加载的内容的类型，将使得浏览器能够：</p>
<ul>
<li>更精确地优化资源加载优先级。</li>
<li>匹配未来的加载需求，在适当的情况下，重复利用同一资源。</li>
<li>为资源应用正确的内容安全策略。</li>
<li>为资源设置正确的 Accept 请求头。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></li>
</ul>
</blockquote>
<p>比如，可以通过设置对应的预加载，提前在头部加载脚本文件，然后在底部执行脚本；这样既能避免阻塞<code>DOM</code>解析，又可以提前加载脚本文件；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;test.js&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">as</span>=<span class="string">&quot;script&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;test.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="preload和prefetch的区别"><a class="markdownIt-Anchor" href="#preload和prefetch的区别"></a> preload和prefetch的区别</h3>
<p><code>prefetch</code>虽然也是对资源文件进行预加载，但是其设计目的是<strong>为了预加载下一页或之后可能会跳转的页面所需要用到的文件</strong>，因此其优先级低于<code>preload</code>。</p>
<h2 id="验证实验"><a class="markdownIt-Anchor" href="#验证实验"></a> 验证实验</h2>
<ol>
<li>
<p><code>script</code>的执行是否阻塞<code>DOM</code>的解析？</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span>&gt;</span>t1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; <span class="number">1000000000</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 模拟同步执行耗时</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>, <span class="variable language_">window</span>.<span class="property">t2</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;t2&quot;</span>&gt;</span>t2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>, <span class="variable language_">window</span>.<span class="property">t2</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>根据上述代码设计，如果<code>script</code>的执行不会阻塞<code>DOM</code>解析，那么第一处打印应该不会是<code>undefined</code>；反之若阻塞<code>DOM</code>解析，则为<code>undefined</code>；实际结果为：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226113154.png?imageslim" alt="img" /></p>
<p>因此答案为：<code>script</code>的执行会阻塞<code>DOM</code>的解析；</p>
</li>
<li>
<p><code>script</code>的加载是否阻塞<code>DOM</code>的解析？</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> start = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>, <span class="variable language_">window</span>.<span class="property">t1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/vue/2.6.11/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span>&gt;</span>t1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() - start)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>, <span class="variable language_">window</span>.<span class="property">t1</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>根据上述设计，如果外部<code>script</code>的加载不会阻塞<code>DOM</code>解析，那么第一处的打印将不会是<code>undefined</code>；反之则为<code>undefined</code>；测试的时候可以将网速调慢，这样对比更明显：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226113203.png?imageslim" alt="img" /></p>
<p>得到的测试结果为：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226113211.png?imageslim" alt="img" /></p>
<p>因此答案为：<code>script</code>的加载会阻塞<code>DOM</code>的解析；</p>
</li>
<li>
<p><code>css</code>的加载是否阻塞<code>DOM</code>的解析？</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> start = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>, <span class="variable language_">window</span>.<span class="property">t1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">100</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap-grid.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span>&gt;</span>t1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() - start)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>, <span class="variable language_">window</span>.<span class="property">t1</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>同理，首先降低网速，得到的打印结果为：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226113219.png?imageslim" alt="img" /></p>
<p>因此答案为：<code>css</code>的加载不会阻塞<code>DOM</code>的解析；</p>
</li>
<li>
<p><code>css</code>的加载是否阻塞<code>JS</code>的执行？</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> start = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap-grid.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() - start)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>, <span class="variable language_">window</span>.<span class="property">t1</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span>&gt;</span>t1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>同样地，降低网速进行测试，得到打印结果：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226113227.png?imageslim" alt="img" /></p>
<p>显然，<code>css</code>文件之后的<code>js</code>是在<code>css</code>文件加载之后才执行的；</p>
<p>因此答案为：<code>css</code>的加载会阻塞<code>JS</code>的执行；</p>
</li>
<li>
<p><code>css</code>的加载是否阻塞<code>DOM</code>的渲染？</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#t1</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> start = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;start&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>, <span class="variable language_">window</span>.<span class="property">t1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">10</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span>&gt;</span>t1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() - start)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>同样地，降低网速进行测试，录制结果为：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226113237.gif?imageslim" alt="img" /></p>
<p>从录制<code>gif</code>可以明显看到虽然<code>css</code>加载不阻塞<code>DOM</code>的解析，但是加载过程中<code>DOM</code>是不会被渲染到浏览器的，直到<code>css</code>文件加载完成（<code>CSSOM</code>构建完成）才会进行渲染，因此<code>css</code>的加载会阻塞<code>DOM</code>的渲染，造成白屏；</p>
</li>
<li>
<p>设置<code>defer</code>的<code>script</code>加载是否阻塞<code>DOM</code>的解析？</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> start = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>, <span class="variable language_">window</span>.<span class="property">t1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./test06.js&quot;</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span>&gt;</span>t1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() - start)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="variable language_">window</span>.<span class="property">t1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test06.js</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;外部JS&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>同样地，降低网速进行测试，得到打印结果：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226113246.png?imageslim" alt="img" /></p>
<p>从打印结果不难看出加了<code>defer</code>属性的<code>script</code>加载并不会阻塞<code>DOM</code>的解析，而且会在<code>DOMContentLoaded</code>事件之前执行完；</p>
</li>
<li>
<p>设置<code>async</code>的<code>script</code>加载是否阻塞<code>DOM</code>的解析？</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> start = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>, <span class="variable language_">window</span>.<span class="property">t1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./test07.js&quot;</span> <span class="attr">async</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span>&gt;</span>t1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() - start)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="variable language_">window</span>.<span class="property">t1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;load&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>同样地，降低网速进行测试，得到打印结果：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226113256.png?imageslim" alt="img" /></p>
<p>结果跟<code>defer</code>类似，不会阻塞<code>DOM</code>的解析，而且<code>async</code>脚本并不会影响到<code>DOMContentLoaded</code>事件的触发，但是会影响到<code>load</code>事件的触发；</p>
</li>
<li>
<p>进行预加载（<code>preload</code>）的<code>script</code>是否阻塞<code>DOM</code>的解析？</p>
 <figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> start = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>, <span class="variable language_">window</span>.<span class="property">t1</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;./test08.js&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;preload&quot;</span> <span class="attr">as</span>=<span class="string">&quot;script&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;t1&quot;</span>&gt;</span>t1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./test08.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>同样地，降低网速进行测试，得到打印结果：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201226113304.png?imageslim" alt="img" /></p>
<p>结果很明显：预加载的<code>script</code>不会阻塞<code>DOM</code>的解析；</p>
<p>但是，如果预加载的<code>script</code>后面有其他<code>DOM</code>，这时仍然会阻塞后面的<code>DOM</code>解析！</p>
</li>
</ol>
<p>上述实验源码放在这里：<a href="https://github.com/xxf1996/web-load-test">https://github.com/xxf1996/web-load-test</a></p>
<h3 id="实验结论"><a class="markdownIt-Anchor" href="#实验结论"></a> 实验结论</h3>
<p>根据以上实验测试，可以得出：</p>
<ol>
<li><code>css</code>的加载会阻塞其后的<code>js</code>执行，不会阻塞<code>DOM</code>的解析，但是会阻塞<code>DOM</code>的渲染；</li>
<li><code>js</code>的加载和执行都会阻塞<code>DOM</code>的解析；</li>
<li>给<code>script</code>设置<code>defer</code>或<code>async</code>属性可以避免阻塞<code>DOM</code>的解析；</li>
</ol>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/29418126">浏览器的渲染：过程与原理 - 知乎</a></li>
<li><a href="https://juejin.im/post/5b879d0fe51d4538843631c1">页面渲染：过程分析 - 掘金</a></li>
<li><a href="https://segmentfault.com/a/1190000010298038">浏览器渲染页面过程与页面优化 - 前端小事 - SegmentFault 思否</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model/Introduction">DOM概述 - Web API 接口参考 | MDN</a></li>
<li><a href="https://www.w3cplus.com/javascript/cssom-css-typed-om.html">初探CSS对象模型（CSSOM）_JavaScript, CSS, CSSOM, 会员专栏 教程_w3cplus</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Preloading_content">Preloading content with rel=“preload” - HTML: Hypertext Markup Language | MDN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Events/DOMContentLoaded">DOMContentLoaded - 事件参考 | MDN</a></li>
<li><a href="https://juejin.im/post/5b88ddca6fb9a019c7717096">css加载会造成阻塞吗？ - 掘金</a></li>
<li><a href="http://pij.robinqu.me/Browser_Scripting/Document_Loading/ScriptTag.html">Script标签和脚本执行顺序 - JavaScript编程语言</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://juejin.im/post/5b879d0fe51d4538843631c1">页面渲染：过程分析 - 掘金</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Preloading_content">通过rel=&quot;preload&quot;进行内容预加载 - HTML（超文本标记语言） | MDN</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title>webGL坐标系变换</title>
    <url>/post/webgl-coordinate-transformation/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>由于<code>webGL</code>存在着几个不同的坐标系：模型坐标系、世界坐标系、相机坐标系和裁剪坐标系；因此将物体的同一坐标表示在不同的坐标系时，就需要对坐标进行转换，而根据不同坐标系之间的特性转换的具体参数可能有不同之处。</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200505180510.jpg?imageslim" alt="img" /></p>
<span id="more"></span>
<h2 id="坐标系变换矩阵"><a class="markdownIt-Anchor" href="#坐标系变换矩阵"></a> 坐标系变换矩阵</h2>
<p>将坐标从<strong>原</strong>坐标系变换到<strong>新</strong>坐标系中，有以下<strong>通用</strong>变换矩阵：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mrow><mi>x</mi><mi>x</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mrow><mi>y</mi><mi>x</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mrow><mi>z</mi><mi>x</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mrow><mi>y</mi><mi>y</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mrow><mi>z</mi><mi>y</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mrow><mi>x</mi><mi>z</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mrow><mi>y</mi><mi>z</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>U</mi><mrow><mi>z</mi><mi>z</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mi>z</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msup><mspace linebreak="newline" height="2em"></mspace><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mover accent="true"><msub><mi>U</mi><mi>x</mi></msub><mo stretchy="true">→</mo></mover></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>U</mi><mrow><mi>x</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>U</mi><mrow><mi>x</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>U</mi><mrow><mi>x</mi><mi>z</mi></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> x轴基向量</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mover accent="true"><msub><mi>U</mi><mi>y</mi></msub><mo stretchy="true">→</mo></mover></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>U</mi><mrow><mi>y</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>U</mi><mrow><mi>y</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>U</mi><mrow><mi>y</mi><mi>z</mi></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> y轴基向量</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mover accent="true"><msub><mi>U</mi><mi>z</mi></msub><mo stretchy="true">→</mo></mover></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>U</mi><mrow><mi>z</mi><mi>x</mi></mrow></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>U</mi><mrow><mi>z</mi><mi>y</mi></mrow></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>U</mi><mrow><mi>z</mi><mi>z</mi></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> z轴基向量</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mover accent="true"><mi>O</mi><mo stretchy="true">→</mo></mover></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msub><mi>O</mi><mi>x</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>O</mi><mi>y</mi></msub><mo separator="true">,</mo><mtext> </mtext><msub><mi>O</mi><mi>z</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext> 原点</mtext></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{pmatrix}
U_{xx} &amp; U_{yx} &amp; U_{zx} &amp; O_{x}\\
U_{xy} &amp; U_{yy} &amp; U_{zy} &amp; O_{y}\\
U_{xz} &amp; U_{yz} &amp; U_{zz} &amp; O_{z}\\
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix}^{-1} \\[2em]
\begin{aligned}
\overrightarrow{U_{x}} &amp;= (U_{xx},\ U_{xy},\ U_{xz}),\ \text{x轴基向量} \\
\overrightarrow{U_{y}} &amp;= (U_{yx},\ U_{yy},\ U_{yz}),\ \text{y轴基向量} \\
\overrightarrow{U_{z}} &amp;= (U_{zx},\ U_{zy},\ U_{zz}),\ \text{z轴基向量} \\
\overrightarrow{O} &amp;= (O_{x},\ O_{y},\ O_{z}),\ \text{原点}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.004068em;vertical-align:-2.15003em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:2.8540379999999996em;"><span style="top:-5.10293em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span><span class="mspace newline" style="margin-top:2em;"></span><span class="base"><span class="strut" style="height:7.461320000000001em;vertical-align:-3.4806600000000003em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9806600000000003em;"><span style="top:-5.98066em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-4.11533em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-0.38466999999999985em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4806600000000003em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9806600000000003em;"><span style="top:-5.98066em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord">x</span><span class="mord cjk_fallback">轴基向量</span></span></span></span><span style="top:-4.11533em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord">y</span><span class="mord cjk_fallback">轴基向量</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord">z</span><span class="mord cjk_fallback">轴基向量</span></span></span></span><span style="top:-0.38466999999999985em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord cjk_fallback">原点</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4806600000000003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>U</mi><mi>x</mi></msub><mo stretchy="true">→</mo></mover><mo separator="true">,</mo><mover accent="true"><msub><mi>U</mi><mi>y</mi></msub><mo stretchy="true">→</mo></mover><mo separator="true">,</mo><mover accent="true"><msub><mi>U</mi><mi>z</mi></msub><mo stretchy="true">→</mo></mover><mo separator="true">,</mo><mover accent="true"><mi>O</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{U_{x}},\overrightarrow{U_{y}},\overrightarrow{U_{z}},\overrightarrow{O}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.491438em;vertical-align:-0.286108em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>分别是新坐标系的<strong>基向量及原点</strong>在<font color=red><strong>原</strong></font>坐标系中的表示。只需要将变换矩阵<strong>左乘</strong>一个列向量，即可得到该向量在新坐标系中的表示。</p>
<p>通过通用的坐标系变换矩阵可以推导出其它变换（<strong>平移</strong>、<strong>旋转</strong>、<strong>缩放</strong>等）的矩阵；</p>
<p><strong>注</strong>：左乘是因为得到的变换矩阵是<strong>列主序</strong>的，为啥矩阵要列主序？因为<font color=red><code>glsl</code>中的矩阵就是列主序的</font>！</p>
<p><strong>思考</strong>：为啥矩阵要取逆矩阵？</p>
<h2 id="模型变换矩阵"><a class="markdownIt-Anchor" href="#模型变换矩阵"></a> 模型变换矩阵</h2>
<p>模型变换指的是将坐标从<strong>模型坐标系</strong>转换到<strong>世界坐标系</strong>；一个模型内的所有顶点坐标都是相对于该模型的<strong>中心点</strong>（也就是模型坐标系的原点）而确定的，在实际应用中，一般都只能确定模型中心点在世界坐标系中的坐标，以及<strong>平移、旋转、缩放</strong>等操作，除此之外，一般模型的中心点的初始位置就是世界坐标系的原点位置<code>(0, 0, 0)</code>，所以模型变换矩阵可以简化为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mo>=</mo><mi>T</mi><mo>∗</mo><mi>R</mi><mo>∗</mo><mi>S</mi><mspace linebreak="newline" height="1em"></mspace><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>T</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>:</mo><mtext>平移矩阵</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>R</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>:</mo><mtext>旋转矩阵</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>S</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>:</mo><mtext>缩放矩阵</mtext></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">M = T * R * S \\[1em]
\begin{aligned}
T&amp;: \text{平移矩阵} \\
R&amp;: \text{旋转矩阵} \\
S&amp;: \text{缩放矩阵}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span><span class="mspace newline" style="margin-top:1em;"></span><span class="base"><span class="strut" style="height:4.500000000000002em;vertical-align:-2.000000000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-1.6599999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5000000000000004em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord text"><span class="mord cjk_fallback">平移矩阵</span></span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord text"><span class="mord cjk_fallback">旋转矩阵</span></span></span></span><span style="top:-1.6599999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord text"><span class="mord cjk_fallback">缩放矩阵</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.000000000000001em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><strong>思考</strong>：为什么能够简化？</p>
<p>注意顺序一定不能弄错，因为矩阵不满足交换律……那么为啥矩阵顺序必须是这样的？原因如下：</p>
<ol>
<li>平移后会影响旋转，因此这里的旋转指的是是<strong>绕模型中心</strong>进行的旋转操作；所以平移要后于旋转进行。</li>
<li>同样，旋转后再进行缩放时，可能会造成缩放的效果不对（主要是旋转后<code>x, y, z</code>坐标发生改变，而缩放<code>x, y, z</code>系数<strong>不一致时</strong>，就可能对应不上）；因此缩放要先于旋转进行。</li>
</ol>
<h2 id="视图变换矩阵"><a class="markdownIt-Anchor" href="#视图变换矩阵"></a> 视图变换矩阵</h2>
<p>视图变换指的是将坐标从世界坐标系转换到<strong>相机坐标系</strong>（也叫观察坐标系）；根据通用坐标系变换矩阵公式可知，只需要得到相机坐标系的原点及三个基向量在世界坐标系中的表示，即可得到视图变换矩阵。</p>
<blockquote>
<p>需要注意的是相机坐标系是<strong>右手系</strong>！！！</p>
</blockquote>
<h3 id="相机空间"><a class="markdownIt-Anchor" href="#相机空间"></a> 相机空间</h3>
<ul>
<li><strong>VRP</strong>（View Reference Point）：观察参考点，也叫视点（eyepoint）；相机坐标系的原点。</li>
<li><strong>VPN</strong>（View Plane Normal）：观察平面法向量，也叫观察/相机方向；相机坐标系的<code>z</code>轴。</li>
<li><strong>VUV</strong>（View Up Vector）：相机顶部正朝向；相机坐标系的<code>y</code>轴大概方向。</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200505180543.jpg?imageslim" alt="img" /></p>
<h3 id="推导过程"><a class="markdownIt-Anchor" href="#推导过程"></a> 推导过程</h3>
<ol>
<li>首先，相机坐标系原点（即<strong>人眼或相机位置</strong>）在世界坐标系中的位置是已知的；相机的关注点（<code>lookat</code>）的位置也是已知的；<code>VUV</code>也是已知的；</li>
<li>根据关注点和相机位置可以得到<code>VPN</code>（即相机坐标系的<code>z</code>轴基向量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>N</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20533em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>）；</li>
<li>根据<code>VUV</code>及<code>VPN</code>的<strong>叉乘</strong>可以得到相机坐标系的<code>x</code>轴基向量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>U</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{U}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20533em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>；</li>
<li>同理，根据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>N</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20533em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>U</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{U}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20533em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>的叉乘可以得到<strong>真正</strong>的<code>y</code>轴基向量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>V</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20533em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>；</li>
<li>将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>U</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{U}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20533em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>V</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20533em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>N</mi><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20533em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>以及<code>VRP</code>的坐标代入到通用变换公式即可得到视图变换矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>：</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>V</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mi>z</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><mi>T</mi><mo>∗</mo><mi>R</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mi>R</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><msup><mi>T</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mover accent="true"><mi>U</mi><mo stretchy="true">→</mo></mover><mo>⋅</mo><mi>O</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mover accent="true"><mi>V</mi><mo stretchy="true">→</mo></mover><mo>⋅</mo><mi>O</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mover accent="true"><mi>N</mi><mo stretchy="true">→</mo></mover><mo>⋅</mo><mi>O</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><mspace linebreak="newline" height="2em"></mspace><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>R</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>T</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mi>x</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mi>y</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mi>z</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msup><mi>R</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><msup><mi>R</mi><mi>T</mi></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>u</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>v</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>x</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>y</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>n</mi><mi>z</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>T</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>O</mi><mi>x</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>O</mi><mi>y</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><msub><mi>O</mi><mi>z</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{aligned}
V &amp;= \begin{pmatrix}
u_{x} &amp; v_{x} &amp; n_{x} &amp; O_{x}\\
u_{y} &amp; v_{y} &amp; n_{y} &amp; O_{y}\\
u_{z} &amp; v_{z} &amp; n_{z} &amp; O_{z}\\
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix}^{-1} \\[2em]
&amp;= (T * R)^{-1} \\
&amp;= R^{-1} * T^{-1} \\
&amp;= \begin{pmatrix}
u_{x} &amp; u_{y} &amp; u_{z} &amp; -\overrightarrow{U}\cdot O\\
v_{x} &amp; v_{y} &amp; v_{z} &amp; -\overrightarrow{V}\cdot O\\
n_{x} &amp; n_{y} &amp; n_{z} &amp; -\overrightarrow{N}\cdot O\\
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix}
\end{aligned} \\[2em]
\begin{aligned}
R &amp;= \begin{pmatrix}
u_{x} &amp; v_{x} &amp; n_{x} &amp; 0\\
u_{y} &amp; v_{y} &amp; n_{y} &amp; 0\\
u_{z} &amp; v_{z} &amp; n_{z} &amp; 0\\
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix} \\[2em]
T &amp;= \begin{pmatrix}
1 &amp; 0 &amp; 0 &amp; O_{x}\\
0 &amp; 1 &amp; 0 &amp; O_{y}\\
0 &amp; 0 &amp; 1 &amp; O_{z}\\
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix} \\[2em]
R^{-1} = R^T &amp;= \begin{pmatrix}
u_{x} &amp; u_{y} &amp; u_{z} &amp; 0\\
v_{x} &amp; v_{y} &amp; v_{z} &amp; 0\\
n_{x} &amp; n_{y} &amp; n_{z} &amp; 0\\
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix} \\[2em]
T^{-1} &amp;= \begin{pmatrix}
1 &amp; 0 &amp; 0 &amp; -O_{x}\\
0 &amp; 1 &amp; 0 &amp; -O_{y}\\
0 &amp; 0 &amp; 1 &amp; -O_{z}\\
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:14.758244000000001em;vertical-align:-7.129122000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.629122000000001em;"><span style="top:-9.973079000000002em;"><span class="pstrut" style="height:5.197995000000001em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span><span style="top:-6.448971000000002em;"><span class="pstrut" style="height:5.197995000000001em;"></span><span class="mord"></span></span><span style="top:-4.924863000000002em;"><span class="pstrut" style="height:5.197995000000001em;"></span><span class="mord"></span></span><span style="top:-1.0668680000000013em;"><span class="pstrut" style="height:5.197995000000001em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:7.129122000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.629122000000001em;"><span style="top:-9.973079000000002em;"><span class="pstrut" style="height:5.197995000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:2.8540379999999996em;"><span style="top:-5.10293em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-6.448971000000002em;"><span class="pstrut" style="height:5.197995000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-4.924863000000002em;"><span class="pstrut" style="height:5.197995000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.0668680000000013em;"><span class="pstrut" style="height:5.197995000000001em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1979950000000006em;"><span style="top:-5.197995000000001em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.632665em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.0673349999999995em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.8673349999999991em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.697995000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1979950000000006em;"><span style="top:-5.197995000000001em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.632665em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.0673349999999995em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.8673349999999991em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.697995000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1979950000000006em;"><span style="top:-5.197995000000001em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.632665em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.0673349999999995em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.8673349999999991em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.697995000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1979950000000006em;"><span style="top:-5.197995000000001em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord">−</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-3.632665em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord">−</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-2.0673349999999995em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord">−</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.20533em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-0.8673349999999991em;"><span class="pstrut" style="height:3.20533em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.697995000000001em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:7.129122000000001em;"><span></span></span></span></span></span></span></span></span><span class="mspace newline" style="margin-top:2em;"></span><span class="base"><span class="strut" style="height:21.03015em;vertical-align:-10.265074999999998em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:10.765075em;"><span style="top:-12.765075em;"><span class="pstrut" style="height:4.650029999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-7.455045em;"><span class="pstrut" style="height:4.650029999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-2.145015000000001em;"><span class="pstrut" style="height:4.650029999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span><span style="top:3.1650149999999986em;"><span class="pstrut" style="height:4.650029999999999em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:10.265074999999998em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:10.765075em;"><span style="top:-12.765075em;"><span class="pstrut" style="height:4.650029999999999em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-7.455045em;"><span class="pstrut" style="height:4.650029999999999em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.145015000000001em;"><span class="pstrut" style="height:4.650029999999999em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span><span style="top:3.1650149999999986em;"><span class="pstrut" style="height:4.650029999999999em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.8000000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.39501em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.41001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:10.265074999999998em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><strong>注</strong>：当一个矩阵为<font color=#36f>正交矩阵</font>时（即行向量和列向量两两正交），其转置矩阵等于其逆矩阵<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>！</p>
<h2 id="投影变换矩阵"><a class="markdownIt-Anchor" href="#投影变换矩阵"></a> 投影变换矩阵</h2>
<p>投影变换指的是将坐标从相机坐标系转换到裁剪坐标系，最终投影变换将得到顶点投影后的<strong>标准化设备坐标</strong>（<code>Normalized Device Coordinate, NDC</code>），可以输入到顶点着色器中进行使用。</p>
<blockquote>
<p>所谓的标准化设备坐标指的是<code>x, y , z</code>坐标值的范围都在<code>[-1, 1]</code>之间。</p>
</blockquote>
<p>投影变换跟前面的坐标系之间的变换方法有些不同，裁剪坐标系并不是指定一个坐标原点和三个基向量而形成的，而是通过一些观察参数得到的<strong>平截头体</strong>（<code>Frustum</code>，一个空间范围）形成的，这个空间范围除了跟观察参数有关以外还和投影方式有关！</p>
<h3 id="相关概念"><a class="markdownIt-Anchor" href="#相关概念"></a> 相关概念</h3>
<p>实际上在设定观察参数时，用到的参考坐标系仍然是<strong>相机坐标系</strong>，也就是相当于平截头体是相机空间的子空间，只不过变换后坐标进行了转换。</p>
<ol>
<li><strong>投影点</strong>：相机坐标系的原点。</li>
<li><strong>近平面</strong>：通过设置近平面距离<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{near}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可得，所以近平面指的是相机坐标系<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mo>−</mo><msub><mi>D</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">z = -D_{near}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>平面。</li>
<li><strong>远平面</strong>：同理，设置一个远平面距离<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{far}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>可得，近平面指的是相机坐标系<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mo>−</mo><msub><mi>D</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">z = -D_{far}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>平面。</li>
<li><strong>平截头体的宽高</strong>：指的是平截头体在近平面一端上的矩形宽高（远平面一端矩形的宽高可以根据参数推算）。</li>
</ol>
<h3 id="正交投影"><a class="markdownIt-Anchor" href="#正交投影"></a> 正交投影</h3>
<p>正交投影是平行投影的一种，其<strong>投影线是垂直于投影平面</strong>（这里的投影平面值的就是近平面）的。因此可以得到正交投影的平截头体为一个长方体：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200505180558.jpg?imageslim" alt="img" /></p>
<p><strong>注</strong>：正交投影平截头体的宽高一般是通过设置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{left}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{right}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">y_{top}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">y_{bottom}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>得到的。</p>
<p>由于投影平面垂直于相机坐标系的<code>z</code>轴，因此相机坐标系内的一点在投影平面的<code>xyz</code>坐标只需要对原坐标做一个<strong>范围缩放处理</strong>即可：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mrow><mrow><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mrow></mfrac><mo>∗</mo><mn>2</mn><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mn>2</mn><mo>∗</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>+</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mrow><mrow><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mn>2</mn><mi>x</mi><mo>−</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub><mo>+</mo><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo></mrow><mrow><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mn>2</mn><mi>x</mi></mrow><mrow><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mrow></mfrac><mo>−</mo><mfrac><mrow><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub><mo>+</mo><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub></mrow><mrow><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
x&#x27; &amp;= \frac{x - x_{left}}{x_{right} - x_{left}} * 2 - 1 \\
&amp;= \frac{2 * (x - x_{left}) - x_{right} + x_{left}}{x_{right} - x_{left}} \\
&amp;= \frac{2x - (x_{left} + x_{right})}{x_{right} - x_{left}} \\
&amp;= \frac{2x}{x_{right} - x_{left}} - \frac{x_{left} + x_{right}}{x_{right} - x_{left}}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:10.524201999999999em;vertical-align:-5.012101em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.5121009999999995em;"><span style="top:-7.678771em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-4.9796629999999995em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span><span style="top:-2.2805549999999997em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span><span style="top:0.3129930000000003em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.012101em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.5121009999999995em;"><span style="top:-7.678771em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.26033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-4.9796629999999995em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.2805549999999997em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:0.3129930000000003em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.26033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.012101em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>从上面<code>x</code>坐标的变换可以看到，这种变换实际上就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[x_{left}, x_{right}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-1, 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>的变换。同理，<code>y</code>坐标就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>y</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi></mrow></msub><mo stretchy="false">]</mo><mo>→</mo><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[y_{bottom}, y_{top}]\rightarrow[-1, 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>；而<code>z</code>坐标则是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub><mo separator="true">,</mo><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo stretchy="false">]</mo><mo>→</mo><mo stretchy="false">[</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[z_{far}, z_{near}] \rightarrow [-1, 1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>。</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mn>2</mn><mi>y</mi></mrow><mrow><msub><mi>y</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi></mrow></msub><mo>−</mo><msub><mi>y</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi></mrow></msub></mrow></mfrac><mo>−</mo><mfrac><mrow><msub><mi>y</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi></mrow></msub><mo>+</mo><msub><mi>y</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi></mrow></msub></mrow><mrow><msub><mi>y</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi></mrow></msub><mo>−</mo><msub><mi>y</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi></mrow></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>z</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mn>2</mn><mi>z</mi></mrow><mrow><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>−</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mrow></mfrac><mo>−</mo><mfrac><mrow><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>+</mo><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub></mrow><mrow><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>−</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
y&#x27; &amp;= \frac{2y}{y_{top} - y_{bottom}} - \frac{y_{bottom} + y_{top}}{y_{top} - y_{bottom}} \\
z&#x27; &amp;= \frac{2z}{z_{near} - z_{far}} - \frac{z_{far} + z_{near}}{z_{near} - z_{far}}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.187096em;vertical-align:-2.343548em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.843548em;"><span style="top:-4.843548em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.343548em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.843548em;"><span style="top:-4.843548em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.26033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.26033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.343548em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><strong>注</strong>：由于相机坐标系是<strong>右手系</strong>，因此<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>&gt;</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">z_{near} &gt; z_{far}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>！</p>
<p>从投影变换结果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>z</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x&#x27;, y&#x27;, z&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>可以得到正交投影的<strong>投影变换矩阵</strong>：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mtext>正交</mtext></msub><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathsize="1.2em"><mfrac><mn>2</mn><mstyle mathsize="1.2em"><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mstyle></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mstyle mathsize="1.2em"><mfrac><mstyle mathsize="1.2em"><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub><mo>+</mo><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub></mstyle><mstyle mathsize="1.2em"><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mstyle></mfrac></mstyle></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathsize="1.2em"><mfrac><mn>2</mn><mstyle mathsize="1.2em"><msub><mi>y</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi></mrow></msub><mo>−</mo><msub><mi>y</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi></mrow></msub></mstyle></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mstyle mathsize="1.2em"><mfrac><mstyle mathsize="1.2em"><msub><mi>y</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi></mrow></msub><mo>+</mo><msub><mi>y</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi></mrow></msub></mstyle><mstyle mathsize="1.2em"><msub><mi>y</mi><mrow><mi>t</mi><mi>o</mi><mi>p</mi></mrow></msub><mo>−</mo><msub><mi>y</mi><mrow><mi>b</mi><mi>o</mi><mi>t</mi><mi>t</mi><mi>o</mi><mi>m</mi></mrow></msub></mstyle></mfrac></mstyle></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathsize="1.2em"><mfrac><mn>2</mn><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>−</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mstyle mathsize="1.2em"><mfrac><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>+</mo><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>−</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mfrac></mstyle></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P_{正交} = \begin{pmatrix}
\large \frac{2}{\large x_{right} - x_{left}} &amp; 0 &amp; 0 &amp; - \large \frac{\large x_{left} + x_{right}}{\large x_{right} - x_{left}} \\[1em]
0 &amp; \large \frac{2}{\large y_{top} - y_{bottom}} &amp; 0 &amp; - \large \frac{\large y_{bottom} + y_{top}}{\large y_{top} - y_{bottom}} \\[1em]
0 &amp; 0 &amp; \large \frac{2}{\large z_{near} - z_{far}} &amp; -\large \frac{\large z_{far} + z_{near}}{\large z_{near} - z_{far}} \\[1em]
0 &amp; 0 &amp; 0 &amp; 1
\end{pmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">交</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:9.60014em;vertical-align:-4.55007em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.050070000000001em;"><span style="top:0.7500499999999996em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-0.3999600000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-0.9949700000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-1.5899800000000008em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-2.184990000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-2.7800000000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.3750100000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.9700200000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.56503em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-5.16004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-5.755050000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-5.81005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-7.050070000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.55007em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.001322em;"><span style="top:-7.001322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8236266666666667em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:0em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:0em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5940000000000003em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:-4.2337739999999995em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.4662259999999987em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:0.7337740000000006em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.501322000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.001322em;"><span style="top:-7.001322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.2337739999999995em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8236266666666667em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.26005333333333336em;"><span style="top:-2.65em;margin-left:-0.03588em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.03588em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5940000000000003em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:-1.4662259999999987em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:0.7337740000000006em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.501322000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.001322em;"><span style="top:-7.001322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.2337739999999995em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.4662259999999987em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8236266666666667em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5940000000000003em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:0.7337740000000006em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.501322000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.001322em;"><span style="top:-7.001322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">−</span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1729566666666669em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:0em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:0em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.789626666666667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:0em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:0em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:-4.2337739999999995em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">−</span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1729566666666669em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.26005333333333336em;"><span style="top:-2.65em;margin-left:-0.03588em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.03588em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.789626666666667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.03588em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.26005333333333336em;"><span style="top:-2.65em;margin-left:-0.03588em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:-1.4662259999999987em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">−</span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1729566666666669em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.789626666666667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:0.7337740000000006em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.501322000000001em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.050070000000001em;"><span style="top:0.7500499999999996em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-0.3999600000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-0.9949700000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-1.5899800000000008em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-2.184990000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-2.7800000000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.3750100000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.9700200000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.56503em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-5.16004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-5.755050000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-5.81005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-7.050070000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.55007em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="透视投影"><a class="markdownIt-Anchor" href="#透视投影"></a> 透视投影</h3>
<p>投射投影则是模拟真实世界中看见物体的模式进行的投影，具有立体效果。其平截头体如下所示：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200505180611.jpg?imageslim" alt="img" /></p>
<p>可以看到点和投影点有一组三角相似关系：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200505180622.jpg?imageslim" alt="img" /></p>
<p>进而根据三角相似原理可以得到一组等式：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>x</mi></mfrac><mo>=</mo><mfrac><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>y</mi></mfrac><mo>=</mo><mfrac><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mi>z</mi></mfrac><mspace linebreak="newline" height="1em"></mspace><mo>⇒</mo><mstyle mathsize="1.2em"><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mfrac><mrow><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>∗</mo><mi>x</mi></mrow><mi>z</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mfrac><mrow><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>∗</mo><mi>y</mi></mrow><mi>z</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>z</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mrow><annotation encoding="application/x-tex">\frac{x&#x27;}{x} = \frac{y&#x27;}{y} = \frac{z_{near}}{z} \\[1em]
\Rightarrow 
\large\begin{cases} x&#x27; &amp;= \frac{z_{near} * x}{z} \\[1em]
y&#x27; &amp;= \frac{z_{near} * y}{z} \\[1em]
z&#x27; &amp;= z_{near}
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.114892em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.309332em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4288919999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935599999999998em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline" style="margin-top:1em;"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:7.584em;vertical-align:-3.4919999999999995em;"></span><span class="minner sizing reset-size6 size7"><span class="mopen sizing reset-size7 size6"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.90002em;"><span style="top:-0.7499899999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-0.74499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.03999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.3349900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.6299900000000003em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.9249900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.2199900000000006em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.2549900000000003em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.2000100000000002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.34501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.64001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.93501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.23001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.52501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.82001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.85501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-6.15002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.30002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.41em;"><span style="top:-5.602em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7333733333333334em;"><span style="top:-3.163em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.1620000000000004em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7333733333333334em;"><span style="top:-3.163em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-0.7220000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7333733333333334em;"><span style="top:-3.163em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9099999999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.41em;"><span style="top:-5.602em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7155199999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4053333333333335em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17991999999999994em;"><span style="top:-2.4570000000000003em;margin-left:-0.04398em;margin-right:0.0625em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:-3.1620000000000004em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7498133333333333em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.439626666666667em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.17991999999999994em;"><span style="top:-2.4570000000000003em;margin-left:-0.04398em;margin-right:0.0625em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:-0.7220000000000005em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span></span></span></p>
<p>需要注意的是，这里的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">x&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">y&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>并不是最终我们想要的标准化设备坐标，而是在近平面的投影坐标，实际上还是处于相机坐标系中；因此还需要进行一下范围变换：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>x</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>−</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mrow><mrow><msub><mi>x</mi><mrow><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi></mrow></msub></mrow></mfrac><mo>∗</mo><mn>2</mn><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>−</mo><mo stretchy="false">(</mo><mo>−</mo><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><mrow><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi></mrow></mfrac><mo>∗</mo><mn>2</mn><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mn>2</mn><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><mrow><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>∗</mo><mn>2</mn><mi>x</mi></mrow><mrow><mi>z</mi><mo>∗</mo><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>y</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>∗</mo><mn>2</mn><mi>y</mi></mrow><mrow><mi>z</mi><mo>∗</mo><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
x&#x27;&#x27; &amp;= \frac{x&#x27; - x_{left}}{x_{right} - x_{left}} * 2 - 1 \\
&amp;= \frac{x&#x27; - (-width / 2)}{width} * 2 - 1 \\
&amp;= \frac{2x&#x27;}{width} \\[2em]
&amp;= \frac{z_{near} * 2x}{z * width} \\[2em]
y&#x27;&#x27;&amp;= \frac{z_{near} * 2y}{z * height} 
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:15.688104em;vertical-align:-7.594051999999999em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:8.094052em;"><span style="top:-10.094051999999998em;"><span class="pstrut" style="height:3.4288920000000003em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-7.393052em;"><span class="pstrut" style="height:3.4288920000000003em;"></span><span class="mord"></span></span><span style="top:-4.978160000000001em;"><span class="pstrut" style="height:3.4288920000000003em;"></span><span class="mord"></span></span><span style="top:-0.9967200000000007em;"><span class="pstrut" style="height:3.4288920000000003em;"></span><span class="mord"></span></span><span style="top:2.9847199999999985em;"><span class="pstrut" style="height:3.4288920000000003em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:7.594051999999999em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:8.094052em;"><span style="top:-10.094051999999998em;"><span class="pstrut" style="height:3.4288920000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-7.393052em;"><span class="pstrut" style="height:3.4288920000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord">/</span><span class="mord">2</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-4.978160000000001em;"><span class="pstrut" style="height:3.4288920000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.9967200000000007em;"><span class="pstrut" style="height:3.4288920000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:2.9847199999999985em;"><span class="pstrut" style="height:3.4288920000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:7.594051999999999em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>不过由于投影坐标系是左手系的，因此<code>z</code>轴方向与相机坐标系刚好相反，需要取负值；其次，由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>分量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>，所以各分量需要先乘以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>x</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><mfrac><mrow><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>∗</mo><mn>2</mn><mi>x</mi></mrow><mrow><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>y</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><mfrac><mrow><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>∗</mo><mn>2</mn><mi>y</mi></mrow><mrow><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
x&#x27;&#x27; &amp;= - \frac{z_{near} * 2x}{width} \\[2em]
y&#x27;&#x27;&amp;= - \frac{z_{near} * 2y}{height}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.48332em;vertical-align:-2.99166em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.49166em;"><span style="top:-5.4916599999999995em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.5102200000000001em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.99166em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.49166em;"><span style="top:-5.4916599999999995em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.5102200000000001em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.99166em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>由于投影到平面的点是<code>2D</code>的（因为投影后所有点的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>都相同），不过由于<strong>深度测试</strong>需要用到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>值来判断点在空间中前后顺序，因此需要对原有的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>坐标进行线性插值得到一个符合标准化设备坐标系的坐标值；不过，由于齐次坐标的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>分量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>，因此实际上应该对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.2em"><mfrac><mn>1</mn><mstyle mathsize="1.2em"><mi>z</mi></mstyle></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\large\frac{1}{\large z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.402352em;vertical-align:-0.414em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8236266666666667em;"><span style="top:-2.8550000000000004em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal sizing reset-size4 size7" style="margin-right:0.04398em;">z</span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5940000000000003em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span></span>进行插值<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>：</p>
<blockquote>
<p><strong>思考</strong>：我在想如果使<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">w=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，那么是不是可以用普通的一次线性函数插值？还有就是为啥一定要利用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>的特性来除以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">x, y, z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>坐标，而不是直接让其为目标值？这样看起来有点多此一举……<br><br />
事实上，使用普通一次线性函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo>=</mo><mi>a</mi><mi>z</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">z&#x27;&#x27; = az + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>得到的参数似乎对不上公认的那个透视投影矩阵。</p>
</blockquote>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo>=</mo><mi>a</mi><mo>⋅</mo><mfrac><mn>1</mn><mstyle mathsize="1.2em"><mi>z</mi></mstyle></mfrac><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">z&#x27;&#x27; = a\cdot\frac{1}{\large z} + b
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.5140000000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord mathnormal sizing reset-size6 size7" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.8770000000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span></span></p>
<p>同时，在近平面<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">z&#x27;&#x27; = -1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>和远平面<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>z</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">z&#x27;&#x27; = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>处有确定的投影关系：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo>∗</mo><mstyle mathsize="1.2em"><mfrac><mn>1</mn><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mfrac><mo>+</mo><mi>b</mi></mstyle></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo>∗</mo><mstyle mathsize="1.2em"><mfrac><mn>1</mn><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mfrac><mo>+</mo><mi>b</mi></mstyle></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline" height="1em"></mspace><mo>⇒</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mstyle mathsize="1.2em"><mfrac><mstyle mathsize="1.2em"><mn>2</mn><mo>∗</mo><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>∗</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>−</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mfrac></mstyle></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mo>−</mo><mstyle mathsize="1.2em"><mfrac><mstyle mathsize="1.2em"><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>+</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mstyle><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>−</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mfrac></mstyle></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">\begin{cases}
a * \large\frac{1}{\large z_{near}} + b &amp;= -1 \\[1em]
a * \large\frac{1}{\large z_{far}} + b &amp;= 1
\end{cases} \\[1em]
\Rightarrow
\begin{cases}
a &amp;= \large \frac{\large 2 * z_{near} * z_{far}}{\large z_{near} - z_{far}} \\[1em]
b &amp;= - \large \frac{\large {\large z_{near} + z_{far}}}{\large z_{near} - z_{far}}
\end{cases} \\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.2000399999999996em;vertical-align:-1.8500199999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.348776em;"><span style="top:-4.540776em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8236266666666667em;"><span style="top:-2.855em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5940000000000003em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.495em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal sizing reset-size6 size7">b</span></span></span><span style="top:-2.100776em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8236266666666667em;"><span style="top:-2.855em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5940000000000003em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6246266666666667em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size6 size7">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal sizing reset-size6 size7">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.848776em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.348776em;"><span style="top:-4.348776em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-1.908776em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.848776em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline" style="margin-top:1em;"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.127976em;vertical-align:-2.3139880000000006em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500200000000005em;"><span style="top:-1.8999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.89499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.18999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8139879999999997em;"><span style="top:-4.813988em;"><span class="pstrut" style="height:3.48088em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-1.9744399999999993em;"><span class="pstrut" style="height:3.48088em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3139880000000006em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8139879999999997em;"><span style="top:-4.813988em;"><span class="pstrut" style="height:3.48088em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2340666666666666em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.789626666666667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:-1.9744399999999993em;"><span class="pstrut" style="height:3.48088em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1729566666666669em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.789626666666667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3139880000000006em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span></span></span></span></p>
<p>经过这么多步转换后，可以得到透视投影矩阵为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mtext>透视</mtext></msub><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathsize="1.2em"><mfrac><mrow><mn>2</mn><mo>∗</mo><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mrow><mrow><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi></mrow></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathsize="1.2em"><mfrac><mrow><mn>2</mn><mo>∗</mo><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mrow><mrow><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathsize="1.2em"><mfrac><mstyle mathsize="1.2em"><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>+</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mstyle><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>−</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathsize="1.2em"><mfrac><mrow><mn>2</mn><mo>∗</mo><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>∗</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mrow><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>−</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mfrac></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">P_{透视} = \begin{pmatrix}
\large \frac{2 * \large z_{near}}{width} &amp; 0 &amp; 0 &amp; 0 \\[1em] 
0 &amp; \large \frac{2 * \large z_{near}}{height} &amp; 0 &amp; 0 \\[1em]
0 &amp; 0 &amp; \large \frac{\large {\large z_{near} + z_{far}}}{\large z_{near} - z_{far}} &amp; \large \frac{2 * \large z_{near} * z_{far}}{\large z_{near} - z_{far}} \\[1em]
0 &amp; 0 &amp; -1 &amp; 0
\end{pmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">透</span><span class="mord cjk_fallback mtight">视</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:8.824892em;vertical-align:-4.162446000000001em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.450060000000001em;"><span style="top:0.1500399999999994em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-0.9999700000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-1.5949800000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-2.1899900000000008em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-2.7850000000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.3800100000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.97502em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.57003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-5.16504em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-5.210040000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-6.450060000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9500599999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.662445999999999em;"><span style="top:-7.001322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.89056em;"><span style="top:-2.8550000000000004em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">h</span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.66em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mspace mtight" style="margin-right:0.26022222222222224em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:-4.57265em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.805102em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:0.3948980000000007em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.162446000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.662445999999999em;"><span style="top:-7.001322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.57265em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.89056em;"><span style="top:-2.8550000000000004em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.66em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mspace mtight" style="margin-right:0.26022222222222224em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47462666666666664em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:-1.805102em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:0.3948980000000007em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.162446000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.662445999999999em;"><span style="top:-7.001322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.57265em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.805102em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1729566666666669em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.789626666666667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:0.3948980000000007em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.162446000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.662445999999999em;"><span style="top:-7.001322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.57265em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.805102em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0549066666666667em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.789626666666667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mspace mtight" style="margin-right:0.26022222222222224em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.26022222222222224em;"></span><span class="mbin sizing reset-size4 size7">∗</span><span class="mspace mtight" style="margin-right:0.26022222222222224em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:0.3948980000000007em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.162446000000001em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.450060000000001em;"><span style="top:0.1500399999999994em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-0.9999700000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-1.5949800000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-2.1899900000000008em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-2.7850000000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.3800100000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.97502em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.57003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-5.16504em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-5.210040000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-6.450060000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9500599999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>不过上述参数只是从数学上假设的，实际应用中计算透视投影矩阵时通常使用<strong>视场角</strong>（<code>fovy</code>）、<strong>宽高比</strong>（<code>aspect</code>）、近平面和远平面这四个值来计算透视投影矩阵：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200505180636.jpg?imageslim" alt="img" /></p>
<p>很明显，通过视场角、近平面和宽高比能够算出近平面的宽高；</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mi>a</mi><mi>n</mi><mo stretchy="false">(</mo><mi>f</mi><mi>o</mi><mi>v</mi><mi>y</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mstyle mathsize="1.2em"><mfrac><mstyle mathsize="1.2em"><mn>0.5</mn><mo>∗</mo><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mstyle><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mfrac></mstyle></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>t</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mstyle mathsize="1.2em"><mfrac><mstyle mathsize="1.2em"><mi>w</mi><mi>i</mi><mi>d</mi><mi>t</mi><mi>h</mi></mstyle><mstyle mathsize="1.2em"><mi>h</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mstyle></mfrac></mstyle></mrow></mstyle></mtd></mtr></mtable></mrow><mspace linebreak="newline" height="1em"></mspace><mtext>记 </mtext><mi>θ</mi><mo>=</mo><mi>f</mi><mi>o</mi><mi>v</mi><mi>y</mi><mi mathvariant="normal">/</mi><mn>2</mn><mspace linebreak="newline" height="1em"></mspace><mo>⇒</mo><msub><mi>P</mi><mtext>透视</mtext></msub><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathsize="1.2em"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>t</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi>a</mi><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>t</mi></mrow></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>c</mi><mi>o</mi><mi>t</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathsize="1.2em"><mfrac><mstyle mathsize="1.2em"><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>+</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mstyle><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>−</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mfrac></mstyle></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mstyle mathsize="1.2em"><mfrac><mrow><mn>2</mn><mo>∗</mo><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>∗</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mrow><mstyle mathsize="1.2em"><msub><mi>z</mi><mrow><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi></mrow></msub><mo>−</mo><msub><mi>z</mi><mrow><mi>f</mi><mi>a</mi><mi>r</mi></mrow></msub></mstyle></mfrac></mstyle></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\begin{cases}
tan(fovy / 2) &amp;= \large \frac{\large 0.5 * height}{\large  z_{near}} \\[1em]
aspect &amp;= \large \frac{\large width}{\large height}
\end{cases} \\[1em]
\text{记 }\theta = fovy / 2 \\[1em]
\Rightarrow
P_{透视} = \begin{pmatrix}
\large \frac{cot(\theta)}{aspect} &amp; 0 &amp; 0 &amp; 0 \\[1em] 
0 &amp; cot(\theta) &amp; 0 &amp; 0 \\[1em]
0 &amp; 0 &amp; \large \frac{\large {\large z_{near} + z_{far}}}{\large z_{near} - z_{far}} &amp; \large \frac{2 * \large z_{near} * z_{far}}{\large z_{near} - z_{far}} \\[1em]
0 &amp; 0 &amp; -1 &amp; 0
\end{pmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.01544em;vertical-align:-2.25772em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500200000000005em;"><span style="top:-1.8999899999999998em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.89499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.18999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.90002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.75772em;"><span style="top:-4.75772em;"><span class="pstrut" style="height:3.438656em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">/</span><span class="mord">2</span><span class="mclose">)</span></span></span><span style="top:-2.019592em;"><span class="pstrut" style="height:3.438656em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.25772em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.75772em;"><span style="top:-4.75772em;"><span class="pstrut" style="height:3.438656em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.19888em;"><span style="top:-2.855em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7044400000000004em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7">0</span><span class="mord sizing reset-size4 size7">.</span><span class="mord sizing reset-size4 size7">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal sizing reset-size4 size7">h</span><span class="mord mathnormal sizing reset-size4 size7">e</span><span class="mord mathnormal sizing reset-size4 size7">i</span><span class="mord mathnormal sizing reset-size4 size7" style="margin-right:0.03588em;">g</span><span class="mord mathnormal sizing reset-size4 size7">h</span><span class="mord mathnormal sizing reset-size4 size7">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.495em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:-2.019592em;"><span class="pstrut" style="height:3.438656em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0884399999999999em;"><span style="top:-2.6955600000000004em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal sizing reset-size4 size7">h</span><span class="mord mathnormal sizing reset-size4 size7">e</span><span class="mord mathnormal sizing reset-size4 size7">i</span><span class="mord mathnormal sizing reset-size4 size7" style="margin-right:0.03588em;">g</span><span class="mord mathnormal sizing reset-size4 size7">h</span><span class="mord mathnormal sizing reset-size4 size7">t</span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5940000000000003em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal sizing reset-size4 size7" style="margin-right:0.02691em;">w</span><span class="mord mathnormal sizing reset-size4 size7">i</span><span class="mord mathnormal sizing reset-size4 size7">d</span><span class="mord mathnormal sizing reset-size4 size7">t</span><span class="mord mathnormal sizing reset-size4 size7">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.69888em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.25772em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline" style="margin-top:1em;"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord cjk_fallback">记</span><span class="mord"> </span></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">/</span><span class="mord">2</span></span><span class="mspace newline" style="margin-top:1em;"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">透</span><span class="mord cjk_fallback mtight">视</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:8.699548em;vertical-align:-4.099774000000001em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.450060000000001em;"><span style="top:0.1500399999999994em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-0.9999700000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-1.5949800000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-2.1899900000000008em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-2.7850000000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.3800100000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.97502em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.57003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-5.16504em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-5.210040000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-6.450060000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9500599999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.599774em;"><span style="top:-6.835322000000001em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9766666666666668em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4766666666666666em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">t</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47462666666666664em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:-4.635322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8677739999999996em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:0.33222600000000063em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.099774000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.599774em;"><span style="top:-6.835322000000001em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.635322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-1.8677739999999996em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:0.33222600000000063em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.099774000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.599774em;"><span style="top:-6.835322000000001em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.635322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8677739999999996em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1729566666666669em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.789626666666667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:0.33222600000000063em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.099774000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.599774em;"><span style="top:-6.835322000000001em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.635322em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8677739999999996em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord sizing reset-size6 size7"><span class="mopen nulldelimiter sizing reset-size7 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0549066666666667em;"><span style="top:-2.80667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin sizing reset-size4 size7">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.43em;"><span class="pstrut" style="height:3.2em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.789626666666667em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mspace mtight" style="margin-right:0.26022222222222224em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704000000000002em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.26022222222222224em;"></span><span class="mbin sizing reset-size4 size7">∗</span><span class="mspace mtight" style="margin-right:0.26022222222222224em;"></span><span class="mord sizing reset-size4 size7"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31296em;"><span style="top:-2.65em;margin-left:-0.04398em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2796266666666667em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6729566666666666em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size7 size6"></span></span></span></span><span style="top:0.33222600000000063em;"><span class="pstrut" style="height:3.4075480000000002em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.099774000000001em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.450060000000001em;"><span style="top:0.1500399999999994em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-0.9999700000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-1.5949800000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-2.1899900000000008em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-2.7850000000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.3800100000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.97502em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.57003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-5.16504em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-5.210040000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-6.450060000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9500599999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://juejin.im/book/5baaf635f265da0ab915cc9f/section/5baf34be5188255c652d4e40">WebGL 入门与实践：18 - lucefer - 掘金小册</a></li>
<li><a href="https://yq.aliyun.com/articles/325591">视图矩阵的推导-云栖社区-阿里云</a></li>
<li><a href="https://zh.wikipedia.org/wiki/%E4%B8%89%E7%BB%B4%E6%8A%95%E5%BD%B1">三维投影 - 维基百科，自由的百科全书</a></li>
<li><a href="https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/08%20Coordinate%20Systems/">坐标系统 - LearnOpenGL-CN</a></li>
<li><a href="https://www.qiujiawei.com/linear-algebra-12/">线性代数之透视矩阵Perspective Matrix – Wyman的原创技术博客 </a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://zh.wikipedia.org/wiki/%E6%AD%A3%E4%BA%A4%E7%9F%A9%E9%98%B5">正交矩阵 - 维基百科，自由的百科全书</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://www.cnblogs.com/graphics/archive/2012/07/25/2582119.html">透视投影详解 - 翰墨小生 - 博客园</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>GLSL</tag>
        <tag>计算机图形</tag>
        <tag>webGL</tag>
      </tags>
  </entry>
  <entry>
    <title>利用FBO传送粒子数据</title>
    <url>/post/webgl-fbo-texture/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>直接用<code>webGL</code>画出成千上万的粒子，并不像在<code>canvas</code>中造出相应数量的粒子“<strong>实例</strong>”，然后统一绘制那么简单；因为直接在<code>webGL</code>中绘制时，实际上是用<strong>着色器</strong>去绘制，而着色器的<code>API</code>有限，最重要的是数据传入着色器内的方式有限；但是另一方面由于着色器内可以进行<strong>并行运算</strong>，因此如果将原本在<code>CPU</code>中进行的计算转移到<code>GPU</code>内就会大幅提高运行效率，画面也就更流畅了。</p>
<p>而<strong>帧缓冲</strong>就可以解决大量数据传入的问题，不过用帧缓冲来传递数据<strong>本质上</strong>是利用帧缓冲作为数据写入介质，将数据通过帧缓冲保存到纹理上，然后将纹理传入相应的着色器；帧缓冲实际上的作用其实<strong>更加强大</strong>。</p>
<span id="more"></span>
<h2 id="帧缓冲"><a class="markdownIt-Anchor" href="#帧缓冲"></a> 帧缓冲</h2>
<p>帧缓冲（<code>frame buffer</code>）本质上就是一块<strong>内存</strong>，不过这块内存是可以直接被<strong>显示器</strong>使用然后进行显示的。</p>
<p>而对应到<code>webGL</code>，帧缓冲就是一种用来组织图像（帧）渲染所需的<strong>内存资源</strong>的数据结构；图像渲染所需的内存资源，指的就是颜色缓冲（<code>coloc buffer</code>）、深度缓冲（<code>depth buffer</code>）以及模板缓冲（<code>stencil buffer</code>）这三种缓冲。</p>
<p>不过这三种缓冲是作为<strong>附加对象</strong>（<code>attachment</code>）添加到帧缓冲里面的（我的理解是作为帧缓冲对象的一个属性），也就是这三种缓冲可以自由搭配添加到里面；比如只需要颜色缓冲，或者开启深度测试后加入深度缓冲等等。</p>
<p>在<code>webGL</code>中，绘制操作都是在一个<strong>默认的帧缓冲</strong>上面进行的，也只有这个帧缓冲才会被显示出来；而其他被创建的帧缓冲虽然也可以进行绘制等操作，但都是不可见的，也就是离屏（<code>off-screen</code>）的；所以可以利用创建的帧缓冲来进行离屏渲染等操作。</p>
<blockquote>
<p>A framebuffer (frame buffer, or sometimes framestore) is a portion of random-access memory (RAM) containing a bitmap that drives a video display.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<blockquote>
<p>In WebGL, a framebuffer is a data structure that organizes the memory resources that are needed to render an image.<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p>
</blockquote>
<h2 id="在帧缓冲上绘制纹理"><a class="markdownIt-Anchor" href="#在帧缓冲上绘制纹理"></a> 在帧缓冲上绘制纹理</h2>
<h3 id="基本流程"><a class="markdownIt-Anchor" href="#基本流程"></a> 基本流程</h3>
<p>在帧缓冲上绘制的<strong>原理</strong>就是：只要着色器程序<strong>绑定</strong>了某个帧缓冲，那么接下来的绘制操作都是在这个帧缓冲上面进行的。因此大致步骤如下；</p>
<ol>
<li>
<p><strong>创建帧缓冲</strong>；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> frameBuffer = gl.<span class="title function_">createFramebuffer</span>()</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>创建纹理对象</strong>；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> frameTexture = gl.<span class="title function_">createTexture</span>()</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>激活纹理通道</strong>；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">activeTexture</span>(gl.<span class="property">TEXTURE0</span> + textureID) <span class="comment">// 激活对应的纹理</span></span><br></pre></td></tr></table></figure>
<p>这一步对于着色器如果同时存在<strong>多个纹理传入</strong>时是必须的；</p>
</li>
<li>
<p><strong>绑定纹理对象</strong>；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">bindTexture</span>(gl.<span class="property">TEXTURE_2D</span>, frameTexture)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>纹理数据<strong>初始化</strong>（<strong>很重要</strong>！）；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_2D</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, width, height, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, <span class="literal">null</span>) <span class="comment">// 先初始化纹理数据</span></span><br></pre></td></tr></table></figure>
<p>如果不进行纹理数据的初始化，相当于纹理的<strong>尺寸</strong>和<strong>格式</strong>完全不知道；那么帧缓冲中绘制的信息也就传入不了；而且绘制时会有以下<strong>警告</strong>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200207172757.png?imageslim" alt="20200207172757" /></p>
</li>
<li>
<p><strong>设置纹理参数</strong>；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">texParameteri</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_WRAP_S</span>, gl.<span class="property">CLAMP_TO_EDGE</span>) <span class="comment">// 指定纹理S轴方向大小适应方式</span></span><br><span class="line">gl.<span class="title function_">texParameteri</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_WRAP_T</span>, gl.<span class="property">CLAMP_TO_EDGE</span>) <span class="comment">// 指定纹理T轴方向大小适应方式</span></span><br><span class="line">gl.<span class="title function_">texParameterf</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_MIN_FILTER</span>, gl.<span class="property">LINEAR</span>) <span class="comment">// 指定纹理缩小取样算法</span></span><br><span class="line">gl.<span class="title function_">texParameterf</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_MAG_FILTER</span>, gl.<span class="property">LINEAR</span>) <span class="comment">// 指定纹理放大取样算法</span></span><br></pre></td></tr></table></figure>
<p>大致就是设置纹理的<strong>取样算法</strong>和<strong>裁剪</strong>等等相关参数，也可以不设置，使用默认参数；</p>
</li>
<li>
<p><strong>绑定帧缓冲</strong>；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">bindFramebuffer</span>(gl.<span class="property">FRAMEBUFFER</span>, frameBuffer) <span class="comment">// 使用帧缓冲</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>将纹理对象绑定到帧缓冲的<strong>颜色缓冲</strong>上；</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">framebufferTexture2D</span>(gl.<span class="property">FRAMEBUFFER</span>, gl.<span class="property">COLOR_ATTACHMENT0</span>, gl.<span class="property">TEXTURE_2D</span>, frameTexture, <span class="number">0</span>) <span class="comment">// 将纹理绑定到帧缓冲中的颜色缓冲上</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>void gl.framebufferTexture2D(target, attachment, textarget, texture, level);</p>
</blockquote>
<p><code>framebufferTexture2D()</code>函数的第二个参数<code>attachment</code>就是指定帧缓冲的哪个<strong>附加对象</strong>，即缓冲，在<code>webGL1</code>中，只有三个选项<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>：</p>
<ul>
<li><code>COLOR_ATTACHMENT0</code>：对应帧缓冲中的<strong>颜色缓冲</strong>；</li>
<li><code>DEPTH_ATTACHMENT</code>：对应帧缓冲中的<strong>深度缓冲</strong>；</li>
<li><code>STENCIL_ATTACHMENT</code>：对应帧缓冲中的<strong>模板缓冲</strong>；</li>
</ul>
</li>
<li>
<p><strong>绘制纹理</strong>：一般纹理的绘制需要单独的着色器来进行，也就需要<strong>另建一个着色器程序</strong>，并用这个着色器程序开启帧缓冲，然后绘制；不过需要注意的是，同一上下文创建的不同着色器程序，<strong>其纹理通道是共用的</strong>（有待验证），因此分配通道编号的时候需要注意！</p>
</li>
</ol>
<h3 id="如何准确地将数据绘制到纹理"><a class="markdownIt-Anchor" href="#如何准确地将数据绘制到纹理"></a> 如何准确地将数据绘制到纹理</h3>
<p>纹理一般保存的就是颜色缓冲数据，而颜色缓冲本质上就是图像的<strong>像素信息</strong>；每个像素点实际上就是一个<code>vec4</code>类型的数据，颜色值的范围又在<code>[0, 1]</code>之间，所以数据值如果超出这个范围，那么就需要对数据进行处理了。</p>
<p>由于一个像素点最多存放<code>4</code>个数字（<strong>维度</strong>），因此当一个粒子的信息超过<code>4</code>个数字时就需要将信息进行分割，同时纹理空间也要进行相应地分割；</p>
<h4 id="不需要分割数据时"><a class="markdownIt-Anchor" href="#不需要分割数据时"></a> 不需要分割数据时</h4>
<p>当一个粒子信息小于等于<code>4</code>个维度时，那么可以直接按像素点的空间位置，连续的进行存储数据；若有剩余维度，可以补<code>0</code>或<code>1</code>；</p>
<ol>
<li>对粒子数据进行遍历；</li>
<li>得到粒子数据在帧缓冲中的<strong>设备坐标位置</strong>（坐标范围为<code>[-1, 1]</code>），按顺序存入一个<strong>一维数组</strong>（空间顺序可以按照<strong>从左至右，从上至下</strong>）；</li>
<li>得到粒子数据在纹理中的<strong>纹理坐标位置</strong>（坐标范围为<code>[0, 1]</code>），按顺序存入一个<strong>一维数组</strong>；</li>
<li>处理粒子数据，按顺序存入一个<strong>一维数组</strong>；</li>
</ol>
<p><strong>注</strong>：为何存放至一维数组？因为一维数组可以写入<code>ABO</code>（<code>Array Buffer Object</code>，<strong>数组缓冲对象</strong>）中传入着色器内；</p>
<p>按照上述流程，可以得到三个一维数组；其中设备坐标数组和粒子数据数组用于在帧缓冲中<strong>逐像素点绘制纹理</strong>，得到纹理后传入需要的着色器程序；纹理坐标数组则用于在着色器内精准地<strong>获取对应粒子存放在纹理中的数据</strong>；</p>
<p><font color=red><strong>特别需要注意的是</strong></font>：虽然帧缓冲中绘制的图像就是纹理图像，但是<strong>纹理空间</strong>和<strong>设备空间</strong>的坐标系范围不一样！也就是说，同一个像素点在帧缓冲和在纹理中的坐标是不一样的！</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200207172825.png?imageslim" alt="20200207172825" /></p>
<hr />
<p>虽然坐标系有点不同，但是按理直接进行<strong>坐标系变换</strong>不就一样可以将设备坐标转化为<strong>同一像素点</strong>对应的纹理坐标吗？我一开始确实也是这么做的，但是实际变换后发现着色器展现的信息好像跟我写入纹理的不太一样；我发现着色器展现的数据好像是我<strong>写入纹理当中的一半</strong>，我左思右想没想到原因；唯一的原因可能就是纹理坐标<strong>不是精确的像素点位置</strong>，导致取样的时候进行了<strong>插值</strong>！而且“<strong>原本数据的一半</strong>”不难让人想到是<strong>原像素点</strong>和一个<strong>空像素点</strong>（即<code>vec4(0.0, 0.0, 0.0, 0.0)</code>）之间进行的插值，所以我将变换后得到的<strong>纹理坐标</strong>统一<strong>向右和向下</strong>偏移了<code>0.5</code>个像素位置，取样的数据竟然神奇的与我写入的一致了……</p>
<p>不过目前还不清楚是我写入帧缓冲的像素点位置有问题还是帧缓冲转纹理数据<strong>普遍</strong>具有这样的问题。</p>
<hr />
<h4 id="需要数据分割时"><a class="markdownIt-Anchor" href="#需要数据分割时"></a> 需要数据分割时</h4>
<p>当粒子数据超过<code>4</code>个维度时，可以将数据<strong>拆分</strong>几个不同的<code>4</code>维数据（一般可以按照<strong>数据的功能</strong>进行拆分，如：速度，大小，颜色信息等等），分区域进行数据填充；实际上仍然可以共用一套索引坐标（即纹理坐标），然后按规律找出其他区域的索引，这样就能够将数据维度扩充到<code>4</code>维以上了！</p>
<p>只要确定好拆分的规则，以及解析其他区域索引的规则，剩下的就是一样的操作了。</p>
<p>这里有个<strong>案例</strong>可以参考：<a href="https://juejin.im/post/5db10690e51d4529df5f65cb">[WebGL] 百万流畅流体粒子 - 掘金</a></p>
<h3 id="设置帧缓冲的尺寸"><a class="markdownIt-Anchor" href="#设置帧缓冲的尺寸"></a> 设置帧缓冲的尺寸</h3>
<p>帧缓冲的默认尺寸实际上就是<code>canvas</code>的尺寸大小，但是为了节省内存和加快数据传输，可以将帧缓冲的尺寸调整成适应数据量长度的大小，以免<strong>造成过多的空间被闲置</strong>。</p>
<p>可以使用<code>viewport()</code>方法来设置帧缓冲的窗口大小：</p>
<blockquote>
<p>void gl.viewport(x, y, width, height);</p>
</blockquote>
<ul>
<li><code>x</code>：原点的<code>x</code>坐标（原点的位置是区域的左下角）；单位为像素（下面单位都一样）。</li>
<li><code>y</code>：原点的<code>y</code>坐标；</li>
<li><code>width</code>：窗口宽度；</li>
<li><code>height</code>：窗口高度；</li>
</ul>
<p>需要注意的是，在帧缓冲上绘制完纹理后，需要把窗口大小<strong>切回原来的尺寸</strong>（貌似窗口大小设置对<strong>所有的帧缓冲</strong>有效……）！</p>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ul>
<li><a href="https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-render-to-texture.html">WebGL 渲染到纹理</a></li>
<li><a href="https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-data-textures.html">WebGL 数据纹理</a></li>
<li><a href="http://www.yanhuangxueyuan.com/WebGL_course/offScreen.html">WebGL离屏渲染_逐片元操作_郭隆邦技术博客</a></li>
<li><a href="https://codepen.io/ykob/pen/NNKdLX">WebGL Framebuffer</a>【codepen】</li>
<li><a href="https://wow.techbrood.com/fiddle/44877?vm=full">https://wow.techbrood.com/fiddle/44877?vm=full</a></li>
<li><a href="https://stackoverflow.com/questions/41824631/how-to-work-with-framebuffers-in-webgl">javascript - How to work with framebuffers in webgl? - Stack Overflow</a>【具体步骤参考】</li>
<li><a href="https://learnopengl-cn.readthedocs.io/zh/latest/04%20Advanced%20OpenGL/05%20Framebuffers/">帧缓冲 - LearnOpenGL-CN</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://en.wikipedia.org/wiki/Framebuffer">Framebuffer - Wikipedia</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="http://math.hws.edu/graphicsbook/c7/s4.html">Introduction to Computer Graphics, Section 7.4 – Framebuffers</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D">WebGLRenderingContext.framebufferTexture2D() - Web APIs | MDN</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>webGL</tag>
        <tag>FBO</tag>
        <tag>纹理</tag>
      </tags>
  </entry>
  <entry>
    <title>webGL常见光照模型</title>
    <url>/post/webgl-reflection-model/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<blockquote>
<p>当光照射到物体表面时,物体对光会发生<strong>反射、透射、吸收、衍射、折射、和干涉</strong>，其中被物体吸收的部分转化为热，<strong>反射、透射的光进入人的视觉系统</strong>，使我们能看见物体。为模拟这一现象，我们建立一些数学模型来替代复杂的物理模型，这些模型就称为明暗效应模型或者光照明模型。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
</blockquote>
<p>简言之，光照模型就是用来<strong>模拟</strong>真实世界中物体<strong>受到光线照射</strong>时的表现的计算模型；</p>
<span id="more"></span>
<h2 id="冯氏光照模型phong-reflection-model"><a class="markdownIt-Anchor" href="#冯氏光照模型phong-reflection-model"></a> 冯氏光照模型（Phong reflection model）</h2>
<p>冯氏光照模型由<strong>环境光</strong>、<strong>漫反射光</strong>及<strong>镜面反射光</strong>这三类光线组成；</p>
<ul>
<li>环境光（<code>Ambient Light</code>）：用于模拟物体周围环境固有存在的光线；通常是阳光，月光这类光线对物体造成漫反射光，<strong>在物体间不停地反射</strong>，达到某种程度恒定的光线；</li>
<li>漫反射光（<code>Diffuse Light</code>）：用于模拟光线照射到<strong>粗糙表面</strong>形成的反射光；</li>
<li>镜面反射光（<code>Specular Light</code>）：用于模拟光线照射到<strong>光滑表面</strong>形成的亮点（即高光）；</li>
</ul>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200505182218.jpg?imageslim" alt="img" /></p>
<h3 id="环境光的计算"><a class="markdownIt-Anchor" href="#环境光的计算"></a> 环境光的计算</h3>
<p>由于环境光模拟的是一类固定的光线，因此常使用<code>环境光因子</code>来计算；</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mtext>环境</mtext></msub><mo>=</mo><msub><mi>L</mi><mtext>光源</mtext></msub><mo>∗</mo><msub><mi>K</mi><mtext>环境</mtext></msub></mrow><annotation encoding="application/x-tex">L_{环境} = L_{光源} * K_{环境}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">环</span><span class="mord cjk_fallback mtight">境</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">光</span><span class="mord cjk_fallback mtight">源</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">环</span><span class="mord cjk_fallback mtight">境</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><strong>注意</strong>：环境光因子的值在<code>[0, 1]</code>之间！</p>
<h3 id="漫反射的计算"><a class="markdownIt-Anchor" href="#漫反射的计算"></a> 漫反射的计算</h3>
<p>漫反射的计算需要借助物体表面的法向量，通过光线的入射方向（<code>L</code>）及法向量（<code>N</code>）的<strong>点乘</strong>可以得到<code>漫反射因子</code>，然后根据漫反射因子来得到漫反射光；</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>K</mi><mtext>漫反射</mtext></msub><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mtext>光源</mtext></msub><mo>⋅</mo><mi>N</mi><mo separator="true">,</mo><mtext> </mtext><mn>0.0</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi>L</mi><mtext>漫反射</mtext></msub><mo>=</mo><msub><mi>L</mi><mtext>光源</mtext></msub><mo>∗</mo><msub><mi>K</mi><mtext>漫反射</mtext></msub></mrow><annotation encoding="application/x-tex">K_{漫反射} = max(D_{光源} \cdot N,\ 0.0)\\
L_{漫反射} = L_{光源} * K_{漫反射}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">漫</span><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">光</span><span class="mord cjk_fallback mtight">源</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">漫</span><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">光</span><span class="mord cjk_fallback mtight">源</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">漫</span><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><strong>注意</strong>：当光线方向与法向量之间夹角大于<code>90°</code>时，点乘值必然小于<code>0</code>（此时相当于光线没有照射到该点）；</p>
<h3 id="镜面反射光的计算"><a class="markdownIt-Anchor" href="#镜面反射光的计算"></a> 镜面反射光的计算</h3>
<p>同理，镜面反射光也需要先计算出一个<code>镜面反射因子</code>；镜面反射因子是由人眼观察方向（<code>V</code>）和光线反射方向（<code>R</code>）之间的点乘得到；</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>K</mi><mtext>镜面反射</mtext></msub><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>V</mi><mo>⋅</mo><mi>R</mi><mo separator="true">,</mo><mtext> </mtext><mn>0.0</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi>L</mi><mtext>镜面反射</mtext></msub><mo>=</mo><msub><mi>L</mi><mtext>光源</mtext></msub><mo>∗</mo><msub><mi>K</mi><mtext>镜面反射</mtext></msub></mrow><annotation encoding="application/x-tex">K_{镜面反射} = max(V \cdot R,\ 0.0)\\
L_{镜面反射} = L_{光源} * K_{镜面反射}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">镜</span><span class="mord cjk_fallback mtight">面</span><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">镜</span><span class="mord cjk_fallback mtight">面</span><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">光</span><span class="mord cjk_fallback mtight">源</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">镜</span><span class="mord cjk_fallback mtight">面</span><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>除此之外，可以通过一个反光度（<code>Shininess</code>）的变量来控制高光区域的大小，<strong>反光度越大，则高光区域越小</strong>；</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>K</mi><mtext>镜面反射</mtext></msub><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>V</mi><mo>⋅</mo><mi>R</mi><msup><mo stretchy="false">)</mo><mrow><mi>s</mi><mi>h</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>s</mi><mi>s</mi></mrow></msup><mo separator="true">,</mo><mtext> </mtext><mn>0.0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">K_{镜面反射} = max((V \cdot R)^{shininess},\ 0.0)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">镜</span><span class="mord cjk_fallback mtight">面</span><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span></p>
<p><strong>注意</strong>：反光度的值一般为<code>2</code>的<code>n</code>次方，如：<code>32, 64, 128, ...</code>；</p>
<p>因此，<code>环境光 + 漫反射光 + 镜面反射光</code>即等于物体的反射光，最后将反射光乘以物体颜色即可得到物体最终进入人眼中的颜色值了（<strong>逐分量相乘</strong>）；</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mtext>反射</mtext></msub><mo>=</mo><msub><mi>L</mi><mtext>环境</mtext></msub><mo>+</mo><msub><mi>L</mi><mtext>漫反射</mtext></msub><mo>+</mo><msub><mi>L</mi><mtext>镜面反射</mtext></msub><mspace linebreak="newline"></mspace><mi>C</mi><mi>o</mi><mi>l</mi><mi>o</mi><msub><mi>r</mi><mtext>反射</mtext></msub><mo>=</mo><mi>C</mi><mi>o</mi><mi>l</mi><mi>o</mi><msub><mi>r</mi><mtext>物体</mtext></msub><mo>∗</mo><msub><mi>L</mi><mtext>反射</mtext></msub></mrow><annotation encoding="application/x-tex">L_{反射} = L_{环境} + L_{漫反射} + L_{镜面反射}\\
Color_{反射} = Color_{物体} * L_{反射}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">环</span><span class="mord cjk_fallback mtight">境</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">漫</span><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">镜</span><span class="mord cjk_fallback mtight">面</span><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">物</span><span class="mord cjk_fallback mtight">体</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>这里有一个关于<code>Phong</code>光照模型的<code>Demo</code>：<a href="https://codepen.io/xxf1996/full/QWLRRGZ">14. Phong specular reflect</a></p>
<h2 id="blinnphong-光照模型"><a class="markdownIt-Anchor" href="#blinnphong-光照模型"></a> Blinn–Phong 光照模型</h2>
<p><code>Blinn–Phong</code>光照模型实际上是对于冯氏光照模型的一种改进，主要区别就在于<strong>镜面反射因子</strong>的计算；</p>
<h3 id="改进后的镜面反射因子"><a class="markdownIt-Anchor" href="#改进后的镜面反射因子"></a> 改进后的镜面反射因子</h3>
<p>在<code>Blinn–Phong</code>光照模型中，镜面反射因子是由光源方向（<code>L</code>）和观察方向（<code>V</code>）的<strong>半程向量</strong>（<code>H</code>）与法向量（<code>N</code>）之间的点积构成的；</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>K</mi><mtext>镜面反射</mtext></msub><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>H</mi><mo>⋅</mo><mi>N</mi><msup><mo stretchy="false">)</mo><mrow><mi>s</mi><mi>h</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>s</mi><mi>s</mi></mrow></msup><mo separator="true">,</mo><mtext> </mtext><mn>0.0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">K_{镜面反射} = max((H \cdot N)^{shininess},\ 0.0)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">镜</span><span class="mord cjk_fallback mtight">面</span><span class="mord cjk_fallback mtight">反</span><span class="mord cjk_fallback mtight">射</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span></p>
<p>同样地，这里有一个关于<code>Blinn–Phong</code>光照模型的<code>Demo</code>：<a href="https://codepen.io/xxf1996/full/eYOaavq">15. Blinn-Phong specular reflect</a></p>
<h2 id="参考链接"><a class="markdownIt-Anchor" href="#参考链接"></a> 参考链接</h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Phong_reflection_model">Phong reflection model - Wikipedia</a></li>
<li><a href="https://en.wikipedia.org/wiki/Blinn%E2%80%93Phong_reflection_model">Blinn–Phong reflection model - Wikipedia</a></li>
<li><a href="https://learnopengl-cn.readthedocs.io/zh/latest/02%20Lighting/02%20Basic%20Lighting/">光照基础 - LearnOpenGL-CN</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://zhuanlan.zhihu.com/p/49474631">什么是光照模型 - 知乎</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>计算机图形</tag>
        <tag>webGL</tag>
      </tags>
  </entry>
  <entry>
    <title>立方体纹理的应用</title>
    <url>/post/webgl-textcube-application/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>立方体纹理是<code>webGL</code>纹理中的一种，实际上可以看做是六个<code>2D</code>纹理组成的，分别对应立方体的六个面；由于六个纹理图片组成了立方体，因此立方体纹理的取样和<code>2D</code>纹理的取样有点区别，因此作用也更加丰富；</p>
<span id="more"></span>
<h2 id="立方体纹理的取样"><a class="markdownIt-Anchor" href="#立方体纹理的取样"></a> 立方体纹理的取样</h2>
<p>由于立方体有六个纹理，因此不能像2D纹理那样只要指定一个二维纹理坐标就可以进行取样；</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="type">vec4</span> <span class="built_in">textureCube</span>(<span class="type">samplerCube</span> sampler, <span class="type">vec3</span> coord)</span><br></pre></td></tr></table></figure>
<p>上面就是<code>GLSL</code>中对立方体纹理进行取样的函数，其中第二个参数就是用于进行取样的坐标；可以看到这个坐标是三维的，有的地方<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>说这个坐标是<strong>纹理的法向量</strong>；不过我觉得这里坐标<font color=#39f>更像是一个方向向量</font>，即从立方体中心位置朝这个方向发射射线，射线与立方体相交的位置就是取样点；</p>
<h2 id="立方体纹理的应用"><a class="markdownIt-Anchor" href="#立方体纹理的应用"></a> 立方体纹理的应用</h2>
<p>以我目前的了解，立方体纹理大致有以下几种应用：</p>
<ul>
<li>正方体表面贴图</li>
<li>用于环境贴图（反射贴图），模拟镜面反射结果</li>
<li>天空盒</li>
</ul>
<h3 id="立方体贴图"><a class="markdownIt-Anchor" href="#立方体贴图"></a> 立方体贴图</h3>
<p>这个应用就很好理解了，借助立方体纹理可以分别给立方体每个面贴上对应面的纹理图片，这样就省去一个一个声明<code>6</code>个不同的<code>2D</code>纹理然后去分别贴图了；而且这样还可以直接利用立方体的顶点坐标来获取每个片元上面的取样方向向量了，因为立方体物体的中心就是几何中心；</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 顶点着色器</span></span><br><span class="line"><span class="keyword">attribute</span> <span class="type">vec4</span> a_Pos;</span><br><span class="line"><span class="keyword">varying</span> <span class="type">vec4</span> v_Pos;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main() &#123;</span><br><span class="line">    <span class="built_in">gl_Position</span> = a_Pos;</span><br><span class="line">    v_Pos = a_Pos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 片元着色器</span></span><br><span class="line"><span class="keyword">varying</span> <span class="type">vec4</span> v_Pos; <span class="comment">// 立方体各点的插值坐标</span></span><br><span class="line"><span class="keyword">uniform</span> <span class="type">samplerCube</span> u_Texture; <span class="comment">// 立方体纹理</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> main() &#123;</span><br><span class="line">    <span class="built_in">gl_FragColor</span> = <span class="built_in">textureCube</span>(u_Texture, <span class="built_in">normalize</span>(v_Pos);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>事实上不用立方体纹理也可以很方便地进行立方体贴图，做法就是将六张纹理图片拼接成一张纹理图片，然后每个面对应的纹理区域可以利用公式计算得到；这种做法就跟前端使用的精灵图原理是一样的，不过专业术语叫做<font color=#f00><strong>纹理图集</strong></font><sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>；</p>
<h3 id="立方体环境贴图"><a class="markdownIt-Anchor" href="#立方体环境贴图"></a> 立方体环境贴图</h3>
<p>环境贴图，也叫<strong>反射贴图</strong>：</p>
<blockquote>
<p>反射映射（Reflection mapping）在计算机图形学领域是用预先计算的纹理图像模拟复杂镜面的一种高效方法。纹理用来储存被渲染物体周围环境的图像。<br><br><br />
这种实现方法比传统的光线跟踪（光线跟踪通过射出一束光线并且跟踪光线的传输路径来计算反射）算法效率更高，但是需要注意的是这种方法是实际反射的一种近似，有时甚至是非常粗糙的近似。<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p>
</blockquote>
<p>从上面这段描述可以看出，环境贴图就是对物体环境的一种近似模拟，<font color=#f00>目的就是想要高效地计算得到对于环境的镜面反射</font>；</p>
<p>立方体环境贴图就是其中的一种，其原理就是将环境映射到一个立方体纹理上，然后通过<font color=#39f>物体表面法向量以及视线方向向量得到反射方向向量</font>，然后取样得到对应的纹理像素；</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 顶点着色器</span></span><br><span class="line"><span class="keyword">precision</span> <span class="keyword">mediump</span> <span class="type">float</span>; <span class="comment">// 中等精度</span></span><br><span class="line"><span class="keyword">attribute</span> <span class="type">vec3</span> a_Pos;</span><br><span class="line"><span class="keyword">attribute</span> <span class="type">vec3</span> a_Normal;</span><br><span class="line"><span class="keyword">varying</span> <span class="type">vec3</span> v_Normal;</span><br><span class="line"><span class="keyword">varying</span> <span class="type">vec3</span> v_Pos;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> u_Projection;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> u_View;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> u_Model;</span><br><span class="line"><span class="type">void</span> main() &#123;</span><br><span class="line">  <span class="built_in">gl_Position</span> = u_Projection * u_View * u_Model * <span class="type">vec4</span>(a_Pos, <span class="number">1.0</span>);</span><br><span class="line">  v_Normal = <span class="type">mat3</span>(u_Model) * a_Normal;</span><br><span class="line">  v_Pos = <span class="type">mat3</span>(u_Model) * a_Pos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 片元着色器</span></span><br><span class="line"><span class="keyword">precision</span> <span class="keyword">mediump</span> <span class="type">float</span>; <span class="comment">// 中等精度</span></span><br><span class="line"><span class="keyword">varying</span> <span class="type">vec3</span> v_Normal;</span><br><span class="line"><span class="keyword">varying</span> <span class="type">vec3</span> v_Pos;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">samplerCube</span> u_Texture;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">vec3</span> u_EyePos;</span><br><span class="line"><span class="type">void</span> main() &#123;</span><br><span class="line">  <span class="type">vec3</span> normal = <span class="built_in">normalize</span>(v_Normal); <span class="comment">// 法向量</span></span><br><span class="line">  <span class="type">vec3</span> eyeToPos = <span class="built_in">normalize</span>(v_Pos - u_EyePos); <span class="comment">// 视线方向</span></span><br><span class="line">  <span class="type">vec3</span> reflectDirection = <span class="built_in">reflect</span>(eyeToPos, normal); <span class="comment">// 计算反射方向</span></span><br><span class="line">  <span class="built_in">gl_FragColor</span> = <span class="built_in">textureCube</span>(u_Texture, reflectDirection);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201007125627.gif?imageslim" alt="img" /></p>
<h3 id="天空盒"><a class="markdownIt-Anchor" href="#天空盒"></a> 天空盒</h3>
<blockquote>
<p>天空盒是应用于场景的背景以显示天空、空间或封闭结构的纹理。天空盒可以是环绕到球体上的单个纹理，或环绕到立方体上的六个纹理。<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></p>
</blockquote>
<p>天空盒通常<strong>充当着背景的角色</strong>，因此其一定是位于渲染区域的最底层；如果仅仅只是将立方体天空盒当做一个巨大的容器，其他所有的物体都位于这个容器内来渲染天空盒的话，就需要<font color=#f00>保证渲染物体不会超过容器的范围</font>，否则就会被天空盒遮住<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup>！</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201007125747.png?imageslim" alt="img" /></p>
<p>所以另一个常用的做法就是通过屏幕坐标（<code>NDC</code>）然后反推出该点的<font color=#f00><strong>世界坐标</strong></font>，于是根据该点的世界坐标与相机坐标就得到了该点对于天空盒的方向向量；</p>
<p>那么如何根据屏幕坐标然后反推得到该点的世界坐标呢？已知屏幕坐标计算过程为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mrow><mi>N</mi><mi>D</mi><mi>C</mi></mrow></msub><mo>=</mo><msub><mi>M</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>v</mi><mi>i</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi></mrow></msub><mo>∗</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">P_{NDC} = M_{projection} * M_{view} * M_{model} * P
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></span></p>
<p>根据矩阵变换的特点可知，<font color=#39f>逆矩阵即为矩阵变换的逆变换</font>，因此屏幕坐标对应的世界坐标为：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mrow><mi>w</mi><mi>o</mi><mi>r</mi><mi>l</mi><mi>d</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>M</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow></msub><mo>∗</mo><msub><mi>M</mi><mrow><mi>v</mi><mi>i</mi><mi>e</mi><mi>w</mi></mrow></msub><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><msub><mi>P</mi><mrow><mi>N</mi><mi>D</mi><mi>C</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{world} = (M_{projection} * M_{view})^{-1} * P_{NDC}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 顶点着色器</span></span><br><span class="line"><span class="keyword">precision</span> <span class="keyword">highp</span> <span class="type">float</span>;</span><br><span class="line"><span class="keyword">attribute</span> <span class="type">vec2</span> a_Pos;</span><br><span class="line"><span class="keyword">varying</span> <span class="type">vec4</span> v_Pos;</span><br><span class="line"><span class="type">void</span> main() &#123;</span><br><span class="line">  <span class="built_in">gl_Position</span> = <span class="type">vec4</span>(a_Pos, <span class="number">1.0</span>, <span class="number">1.0</span>); <span class="comment">// 绘制一个能够填满屏幕的矩形</span></span><br><span class="line">  v_Pos = <span class="built_in">gl_Position</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 片元着色器</span></span><br><span class="line"><span class="keyword">precision</span> <span class="keyword">highp</span> <span class="type">float</span>;</span><br><span class="line"><span class="keyword">varying</span> <span class="type">vec4</span> v_Pos;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">samplerCube</span> u_Texture;</span><br><span class="line"><span class="keyword">uniform</span> <span class="type">mat4</span> u_VPInverse; <span class="comment">// 视图投影矩阵的逆矩阵</span></span><br><span class="line"><span class="type">void</span> main() &#123;</span><br><span class="line">  <span class="comment">// 获取屏幕坐标的世界坐标，这里相机坐标为原点，因此视线方向可以简化</span></span><br><span class="line">  <span class="type">vec4</span> direction = u_VPInverse * v_Pos;</span><br><span class="line">  <span class="built_in">gl_FragColor</span> = <span class="built_in">textureCube</span>(u_Texture, <span class="built_in">normalize</span>(direction.xyz / direction.w));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20201007125822.gif?imageslim" alt="img" /></p>
<p>这种渲染看起来跟<code>VR</code>的感觉很相似，不知道<code>VR</code>渲染原理是不是就是天空盒呢？</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-environment-maps.html">WebGL 环境贴图 (反射)</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-cube-maps.html">WebGL 立方体贴图</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-3d-textures.html">WebGL 三维纹理</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://zh.wikipedia.org/wiki/%E5%8F%8D%E5%B0%84%E8%B4%B4%E5%9B%BE">https://zh.wikipedia.org/wiki/反射贴图</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://docs.aws.amazon.com/zh_cn/sumerian/latest/userguide/assets-skybox.html">天空盒 - Amazon Sumerian天空盒 - Amazon Sumerian</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-skybox.html">WebGL 天空盒</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>webGL</tag>
        <tag>纹理</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序原生语法工程化</title>
    <url>/post/weixin-miniprogram-project/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>关于微信小程序的工程化处理，如果像是选择<code>mpvue</code>、<code>wepy</code>等框架，项目其实就是按照一般的<code>vue</code>项目进行处理，只不过基于一般的<code>vue</code>项目多了一层转编译成原生小程序代码；</p>
<p>但如果直接使用原生语法来搭建小程序项目，那么该如何进行一些工程化的处理呢？不可能是完全地一个个页面独立地手写，这样效率太低了。</p>
<span id="more"></span>
<h2 id="组件"><a class="markdownIt-Anchor" href="#组件"></a> 组件</h2>
<h3 id="组件的创建"><a class="markdownIt-Anchor" href="#组件的创建"></a> 组件的创建</h3>
<p>小程序本身就提供了组件的语法，首先需要对<code>.json</code>文件做一个声明：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;component&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>而视图（<code>wxml</code>）和样式（<code>wxss</code>）则和一般页面的写法是一样的。主要的区别就是逻辑文件（<code>js</code>）的写法，声明组件需要使用<code>Component()</code>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Component</span>(&#123;</span><br><span class="line">  <span class="attr">properties</span>: &#123;</span><br><span class="line">    <span class="comment">// 这里定义了innerText属性，属性值可以在组件使用时指定</span></span><br><span class="line">    <span class="attr">innerText</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">value</span>: <span class="string">&#x27;default value&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="comment">// 这里是一些组件内部数据</span></span><br><span class="line">    <span class="attr">someData</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="comment">// 这里是一个自定义方法</span></span><br><span class="line">    <span class="attr">customMethod</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p><code>properties</code>是用来声明组件的自定义属性的，可以在<code>wxml</code>中当做<code>data</code>来使用；实际上就是用来进行传递父级数据的。需要注意的是组件的生命周期和页面的生命周期有所不同，组件还能监听到所在页面（<code>Page</code>）的一些生命周期，详情可以查看官方文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/lifetimes.html">https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/lifetimes.html</a></p>
<h3 id="组件的使用"><a class="markdownIt-Anchor" href="#组件的使用"></a> 组件的使用</h3>
<p>总所周知，组件有全局组件和局部组件，小程序组件也一样；如果是全局组件，则声明在<code>app.json</code>文件中，如果只是局部组件（单独使用），则可以在页面对应的<code>json</code>文件中进行声明，语法如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;usingComponents&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;component-tag-name&quot;</span>: <span class="string">&quot;path/to/the/custom/component&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>usingComponents</code>就是声明使用组件的地方，键名就是组件的标签名，键值就是组件的路径。</p>
<h3 id="mixin"><a class="markdownIt-Anchor" href="#mixin"></a> mixin</h3>
<blockquote>
<p>导出语法只能是CommonJS？</p>
</blockquote>
<p>小程序为原生组件也提供了一套类似混合（<code>mixin</code>）的语法，叫做<code>behaviors</code>；用独立的<code>js</code>文件编写，然后引入到相应的组件文件（<code>js</code>）中即可。语法大致如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// my-behavior.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Behavior</span>(&#123;</span><br><span class="line">  <span class="attr">behaviors</span>: [],</span><br><span class="line">  <span class="attr">properties</span>: &#123;</span><br><span class="line">    <span class="attr">myBehaviorProperty</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">myBehaviorData</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">attached</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="attr">myBehaviorMethod</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>其作用就是<strong>复用组件之间</strong>的自定义属性、方法、数据等等。</p>
<h4 id="使用-behaviors"><a class="markdownIt-Anchor" href="#使用-behaviors"></a> 使用 behaviors</h4>
<p>使用的语法跟<code>vue</code>中<code>mixin</code>的使用类似，在组件的<code>behaviors</code>属性中添加相应的<code>behavior</code>文件即可；</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// my-component.js</span></span><br><span class="line"><span class="keyword">var</span> myBehavior = <span class="built_in">require</span>(<span class="string">&#x27;my-behavior&#x27;</span>)</span><br><span class="line"><span class="title class_">Component</span>(&#123;</span><br><span class="line">  <span class="attr">behaviors</span>: [myBehavior],</span><br><span class="line">  <span class="attr">properties</span>: &#123;</span><br><span class="line">    <span class="attr">myProperty</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">myData</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">attached</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="attr">myMethod</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="wxs"><a class="markdownIt-Anchor" href="#wxs"></a> WXS</h2>
<h3 id="语法限制"><a class="markdownIt-Anchor" href="#语法限制"></a> 语法限制</h3>
<p>由于小程序本身语法的限制，导致在<code>wxml</code>的模板语法中并<strong>不能使用自定义方法</strong>，但是<code>wxs</code>定义的方法却能够在模板语法中使用，这样就能解决不能使用方法来处理模板语法中数据的问题了。</p>
<p><code>wxs</code>是小程序自定义的一套脚本语言，实际上就是基于<code>ES5</code>进行的一些改造，不过有些原生对象做了限制，如<code>Date</code>对象。因此，在<code>wxs</code>中并<font color=red><strong>不能使用</strong></font><code>ES6</code>及以上语法，且模块语法为<code>CommonJS</code>！举个例子：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> getMax = <span class="keyword">function</span>(<span class="params">array</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> max = <span class="literal">undefined</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; array.<span class="property">length</span>; ++i) &#123;</span><br><span class="line">    max = max === <span class="literal">undefined</span> ?</span><br><span class="line">      array[i] :</span><br><span class="line">      (max &gt;= array[i] ? max : array[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">getMax</span>: getMax</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>由于习惯了<code>ES6</code>以上的语法，所以写<code>wxs</code>的时候<strong>务必注意</strong>：</p>
<ul>
<li>不能使用<code>let</code>、箭头函数和模板字符串等语法</li>
<li>导出只能通过<code>module.exports</code>对象</li>
</ul>
<h3 id="创建和使用"><a class="markdownIt-Anchor" href="#创建和使用"></a> 创建和使用</h3>
<p><code>wxs</code>既可以在<code>wxml</code>中进行声明，然后直接使用；也可以写在独立的<code>.wxs</code>文件中，然后引入到相应的<code>wxml</code>中进行使用。需要注意的是，不管是哪种方式，<code>wxs</code>里面的方法和数据<font color=red><strong>都要进行导出之后</strong></font>才能进行使用！</p>
<h4 id="wxml文件内"><a class="markdownIt-Anchor" href="#wxml文件内"></a> wxml文件内</h4>
<p>在<code>wxml</code>中则通过在<code>&lt;wxs&gt;</code>标签中声明<code>wxs</code>语法，然后通过<code>module</code>属性来指定该模块的名称，然后在<code>wxml</code>中进行使用即可；</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">wxs</span> <span class="attr">module</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">    function hello (text) &#123;</span><br><span class="line">        return &#x27;hello, &#x27; + text</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    module.exports = &#123;</span><br><span class="line">        hello: hello</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">wxs</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;demo.hello(name)&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="独立的wxs文件"><a class="markdownIt-Anchor" href="#独立的wxs文件"></a> 独立的wxs文件</h4>
<p>声明类似，只不过是把<code>wxs</code>代码写在单独的<code>.wxs</code>文件中而已：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// demo.wxs</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hello</span> (<span class="params">text</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;hello, &#x27;</span> + text</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">hello</span>: hello</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后通过<code>&lt;wxs&gt;</code>标签进行引入：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">wxs</span> <span class="attr">src</span>=<span class="string">&quot;path/to/demo.wxs&quot;</span> <span class="attr">module</span>=<span class="string">&quot;demo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">wxs</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;demo.hello(name)&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>通过<code>&lt;wxs&gt;</code>的<code>src</code>属性来指定<code>.wxs</code>文件的位置；</p>
<h3 id="其他注意事项"><a class="markdownIt-Anchor" href="#其他注意事项"></a> 其他注意事项</h3>
<ul>
<li><code>.wxs</code>和<code>.js</code>文件<font color =red><strong>不能互相引入</strong></font>，<code>.wxs</code>只能引入<code>.wxs</code>文件！</li>
<li>使用<code>require()</code>函数引入<code>.wxs</code>文件时，只能使用相对路径！</li>
</ul>
<h3 id="npm包的使用"><a class="markdownIt-Anchor" href="#npm包的使用"></a> npm包的使用</h3>
<p>这个流程<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/npm.html">官方文档</a>就已经说的很清楚了，不再赘述了。</p>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>虽说微信小程序为原生语法工程化提供了配套的语法和设施，但是很显然，同诸如<code>vue</code> + <code>webpack</code>等成熟的前端工程化配套而言，像是一个『拙劣的模仿者』，也只能是凑合着用了。</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/">自定义组件 | 微信开放文档</a></li>
<li><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/npm.html">npm 支持 | 微信开放文档</a></li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>输入纹理资源</title>
    <url>/post/webgl-texture-input/</url>
    <content><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>在<code>webGL</code>中，纹理有两种类型，一种是<code>2d</code>的，另一种是天空盒类型的。纹理除了用于给物体表面贴图之外，还可以用于数据传输，十分有用。</p>
<p>纹理数据的<strong>来源</strong>可以是图片、视频、帧缓冲、<code>canvas</code>甚至还可以是数组，对于着色器而言，纹理就是一类特定的数据，在着色器可以使用取样器来进行数据取样（解析）。</p>
<span id="more"></span>
<h2 id="纹理坐标系"><a class="markdownIt-Anchor" href="#纹理坐标系"></a> 纹理坐标系</h2>
<p><img src="https://pic.xiexuefeng.cc/markdown/20200209164113.png?imageslim" alt="20200209164113" /></p>
<p>如上图所示（<a href="https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/06%20Textures/">图片来源</a>），纹理坐标系的原点位于<strong>纹理区域</strong>的<em>左下角</em>，然后<code>s</code>轴从左往右逐渐增大，范围为<code>[0, 1]</code>；同理，<code>t</code>轴从下往上逐渐增大，范围也为<code>[0, 1]</code>。</p>
<p>记住纹理坐标系的特点能便于纹理数据的取样以及坐标系的变换，因为纹理坐标系和<code>webGL</code>的其他坐标系的特点不一样，如果需要将<strong>纹理映射到目标坐标系</strong>就需要进行坐标系变换了。</p>
<h2 id="单个纹理输入"><a class="markdownIt-Anchor" href="#单个纹理输入"></a> 单个纹理输入</h2>
<h3 id="2d纹理输入的一般流程"><a class="markdownIt-Anchor" href="#2d纹理输入的一般流程"></a> 2D纹理输入的一般流程</h3>
<ol start="0">
<li>
<p>加载纹理资源或创建纹理资源；</p>
</li>
<li>
<p><strong>创建纹理缓冲</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> textureBuffer = gl.<span class="title function_">createBuffer</span>()</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>激活相应的纹理通道</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">activeTexture</span>(gl.<span class="property">TEXTURE0</span> + textureID)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>将纹理缓冲绑定到相应的纹理通道上</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">bindTexture</span>(gl.<span class="property">TEXTURE_2D</span>, textureBuffer)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>将纹理通道号传递给纹理取样器属性</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">uniform1i</span>(pos, textureID) <span class="comment">// pos指的是纹理取样器属性的地址</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>绑定纹理数据</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_2D</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, value)</span><br></pre></td></tr></table></figure>
<p><strong>注</strong>：这里的<code>texImage2D()</code>方法参数仅是举例，实际上该方法有多种参数形式，需要根据具体情况来设置！</p>
</li>
<li>
<p><strong>设置纹理取样参数</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">texParameteri</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_WRAP_S</span>, gl.<span class="property">CLAMP_TO_EDGE</span>) <span class="comment">// 指定纹理S轴方向大小适应方式</span></span><br><span class="line">gl.<span class="title function_">texParameteri</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_WRAP_T</span>, gl.<span class="property">CLAMP_TO_EDGE</span>) <span class="comment">// 指定纹理T轴方向大小适应方式</span></span><br><span class="line">gl.<span class="title function_">texParameterf</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_MIN_FILTER</span>, gl.<span class="property">LINEAR</span>) <span class="comment">// 指定纹理缩小取样算法</span></span><br><span class="line">gl.<span class="title function_">texParameterf</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_MAG_FILTER</span>, gl.<span class="property">LINEAR</span>) <span class="comment">// 指定纹理放大取样算法</span></span><br></pre></td></tr></table></figure>
<p>举的例子是比较常见的取样参数设置。</p>
</li>
</ol>
<p>对于<strong>着色器</strong>而言，只需要设置一个纹理取样器属性用来接收纹理数据即可，然后使用<code>texture2D()</code>函数来进行取样：</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">uniform</span> <span class="type">sampler2D</span> u_Texture; <span class="comment">// 纹理取样器</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="type">void</span> main() &#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="type">vec4</span> textureColor = <span class="built_in">texture2D</span>(u_Texture, texturePos); <span class="comment">// 取样</span></span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不同类型的纹理资源的输入流程基本一致，只是在<strong>加载步骤</strong>以及<strong>绑定纹理数据</strong>的时候有所不同。</p>
<h3 id="不同类型纹理资源的加载流程"><a class="markdownIt-Anchor" href="#不同类型纹理资源的加载流程"></a> 不同类型纹理资源的加载流程</h3>
<h4 id="图片资源"><a class="markdownIt-Anchor" href="#图片资源"></a> 图片资源</h4>
<p><strong>注</strong>：这里的图片资源指的是<code>&lt;img&gt;</code>元素（即<code>HTMLImageElement</code>对象），既包<code>DOM</code>中本身存在的元素，也包括通过<code>Image()</code>构造函数手动创建的元素。</p>
<p>图片资源需要在<strong>加载完成后</strong>才能绑定到纹理缓冲上去，可以利用<code>HTMLImageElement</code>对象自带的<code>onload</code>方法就能监听到图片数据加载完成的事件：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>()</span><br><span class="line"></span><br><span class="line">img.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_2D</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, img)</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line">img.<span class="property">src</span> = <span class="string">&#x27;img_path.png&#x27;</span></span><br></pre></td></tr></table></figure>
<p>没错，<code>HTMLImageElement</code>本身可以直接传入<code>texImage2D()</code>方法中做参数！而在<code>DOM</code>中获取到的<code>&lt;img&gt;</code>结点和利用<code>base64</code>字符串构建的图片也是一样的，需要在<code>onload</code>回调中才进行纹理数据的传递！</p>
<h4 id="视频资源"><a class="markdownIt-Anchor" href="#视频资源"></a> 视频资源</h4>
<p><strong>注</strong>：这里的视频资源指的是<code>&lt;video&gt;</code>元素（即<code>HTMLVideoElement</code>对象），既包含<code>DOM</code>中存在的元素也包括<code>createElement()</code>方法创建的<code>&lt;video&gt;</code>元素（<code>&lt;video&gt;</code>元素没有对应的构造函数！）。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> video = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;video&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">videoLoaded</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    video.<span class="title function_">play</span>() <span class="comment">// 开始播放</span></span><br><span class="line">    gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_2D</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, video)</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    video.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;canplaythrough&#x27;</span>, videoLoaded) <span class="comment">// 事件触发后马上解绑事件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">video.<span class="title function_">addEventListener</span>(<span class="string">&#x27;canplaythrough&#x27;</span>, videoLoaded) <span class="comment">// 监听视频缓冲是否能够进行播放了</span></span><br><span class="line">video.<span class="property">muted</span> = <span class="literal">true</span> <span class="comment">// 静音</span></span><br><span class="line">video.<span class="property">preload</span> = <span class="string">&#x27;auto&#x27;</span> <span class="comment">// 开启预加载</span></span><br><span class="line">video.<span class="property">src</span> = <span class="string">&#x27;video_path.mp4&#x27;</span> <span class="comment">// 写入视频地址</span></span><br></pre></td></tr></table></figure>
<ul>
<li>
<p>同样，<code>HTMLVideoElement</code>对象能够直接传入<code>texImage2D()</code>方法中做参数！</p>
</li>
<li>
<p><code>canplaythrough</code>事件会在视频缓冲到一定长度且能够播放时进行触发，因此可以以此来作为<strong>视频资源可用</strong>的依据，在这个回调里进行纹理数据的传递等操作。不过需要注意的是，该事件在开启<code>loop</code>后，会在视频每一次循环的开始被触发，因此最好将回调事件设置成一次性的。</p>
</li>
<li>
<p>设置<code>preload</code>属性为<code>auto</code>可用使得视频优先被加载（即使在未播放的状态下）。</p>
</li>
<li>
<p>在不需要声音信息的情况下可以开启<code>muted</code>属性！</p>
</li>
<li>
<p>需要注意的是，视频纹理信息并不会实时更新（其实一次传递就相当于传了当时正在播放的<strong>视频帧图像</strong>而已），因此需要在<strong>帧更新函数</strong>（如<code>requestAnimationFrame()</code>函数）中不停地更新当前视频资源到纹理缓冲中！更新的操作流程跟第一次传入类似，只不过<font color=red><strong>不需要再重复创建纹理缓冲</strong></font>了！</p>
</li>
</ul>
<h4 id="imagedata对象"><a class="markdownIt-Anchor" href="#imagedata对象"></a> ImageData对象</h4>
<p><code>ImageData</code>对象是一个用于描述<code>canvas</code>区域像素数据的数据结构。它含有以下属性：</p>
<ul>
<li><code>data</code>：一个<code>Uint8ClampedArray</code>类型的数组，数组中的元素按照<code>RGBA</code>的顺序排序。</li>
<li><code>width</code>：像素区域的宽度。</li>
<li><code>height</code>：像素区域的高度。</li>
</ul>
<p><code>ImageData</code>对象的<strong>来源</strong>有：</p>
<ul>
<li>
<p><code>canvas</code>上下文对象的<code>createImageData()</code>和<code>getImageData()</code>方法；此外<code>putImageData()</code>方法可以将数据间接地写入<code>ImageData</code>对象。</p>
</li>
<li>
<p><code>ImageData()</code>构造函数：</p>
<blockquote>
<p>new ImageData(array, width, height);</p>
</blockquote>
<ul>
<li><code>array</code>：像素数据，<code>Uint8ClampedArray</code>类型的数组；</li>
<li><code>width</code>：像素区域宽度；</li>
<li><code>height</code>：像素区域高度；</li>
</ul>
</li>
</ul>
<p>从来源就可以看出，<code>ImageData</code>类型的纹理既可以取自<code>canvas</code>，也可以直接将数组转换成<code>ImageData</code>，即<font color=red><strong>可以手动生成纹理数据</strong></font>！</p>
<p>同样地，<code>ImageData</code>对象可以作为<strong>参数</strong>直接传入<code>texImage2D()</code>方法中！如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> img = <span class="keyword">new</span> <span class="title class_">ImageData</span>(</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Uint8ClampedArray</span>(<span class="keyword">new</span> <span class="title class_">Uint8Array</span>(pixelList), width, height),</span><br><span class="line">    width,</span><br><span class="line">    height</span><br><span class="line">)</span><br><span class="line">gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_2D</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, img)</span><br></pre></td></tr></table></figure>
<h4 id="帧缓冲"><a class="markdownIt-Anchor" href="#帧缓冲"></a> 帧缓冲</h4>
<p>帧缓冲可以看做等同于屏幕画面的帧，具有显示帧的一切绘制操作，除了不能直接显示。而通过将纹理缓冲绑定到帧缓冲上，可以直接利用<code>webGL</code>的绘制<code>API</code>（包括着色器）来绘制出想要的纹理，然后传递该纹理数据！</p>
<p><strong>详细步骤</strong>可以参考——<a href="https://note.xiexuefeng.cc/post/webgl-fbo-texture">利用FBO传送粒子数据 | snowdream</a>。</p>
<h3 id="天空盒纹理输入的一般流程"><a class="markdownIt-Anchor" href="#天空盒纹理输入的一般流程"></a> 天空盒纹理输入的一般流程</h3>
<p>不同于<code>2D</code>纹理，天空盒（<code>skybox</code>）纹理实际上是一个立方体纹理，即包含六个正方形的<code>2D</code>纹理，而取样则是从立方体内部（中心点）通过<strong>射线方向</strong>来取样。</p>
<p>因此，天空盒纹理实际上就是由<code>6</code>张<code>2D</code>纹理组成的，因此输入的一般流程跟<code>2D</code>类似：</p>
<ol start="0">
<li>
<p>加载纹理资源或创建纹理资源；</p>
</li>
<li>
<p><strong>创建纹理缓冲</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> textureBuffer = gl.<span class="title function_">createBuffer</span>()</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>激活相应的纹理通道</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">activeTexture</span>(gl.<span class="property">TEXTURE0</span> + textureID)</span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>将纹理缓冲绑定到相应的纹理通道上</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">bindTexture</span>(gl.<span class="property">TEXTURE_CUBE_MAP</span>, textureBuffer)</span><br></pre></td></tr></table></figure>
<p><font color=red><strong>注意</strong></font>：这里的纹理类型为<strong>TEXTURE_CUBE_MAP</strong>！</p>
</li>
<li>
<p><strong>将纹理通道号传递给纹理取样器属性</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">uniform1i</span>(pos, textureID) <span class="comment">// pos指的是纹理取样器属性的地址</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p><strong>绑定纹理数据</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_CUBE_MAP_POSITIVE_X</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, images[<span class="number">0</span>]) <span class="comment">// 右</span></span><br><span class="line">gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_CUBE_MAP_NEGATIVE_X</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, images[<span class="number">1</span>]) <span class="comment">// 左</span></span><br><span class="line">gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_CUBE_MAP_POSITIVE_Y</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, images[<span class="number">2</span>]) <span class="comment">// 上</span></span><br><span class="line">gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_CUBE_MAP_NEGATIVE_Y</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, images[<span class="number">3</span>]) <span class="comment">// 下</span></span><br><span class="line">gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_CUBE_MAP_POSITIVE_Z</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, images[<span class="number">4</span>]) <span class="comment">// 前</span></span><br><span class="line">gl.<span class="title function_">texImage2D</span>(gl.<span class="property">TEXTURE_CUBE_MAP_NEGATIVE_Z</span>, <span class="number">0</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">RGBA</span>, gl.<span class="property">UNSIGNED_BYTE</span>, images[<span class="number">5</span>]) <span class="comment">// 后</span></span><br></pre></td></tr></table></figure>
<p>可以看到，天空盒纹理在绑定纹理数据的时候要分别绑定<code>6</code>个<code>2D</code>纹理数据，每个纹理数据分别对应立方体的一个面，所以千万注意<font color=red><strong>不要把面的对应关系绑定错了</strong></font>！</p>
<ul>
<li><code>TEXTURE_CUBE_MAP_POSITIVE_X</code></li>
<li><code>TEXTURE_CUBE_MAP_NEGATIVE_X</code></li>
<li><code>TEXTURE_CUBE_MAP_POSITIVE_Y</code></li>
<li><code>TEXTURE_CUBE_MAP_NEGATIVE_Y</code></li>
<li><code>TEXTURE_CUBE_MAP_POSITIVE_Z</code></li>
<li><code>TEXTURE_CUBE_MAP_NEGATIVE_Z</code></li>
</ul>
</li>
<li>
<p><strong>设置纹理取样参数</strong>：</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">gl.<span class="title function_">texParameteri</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_WRAP_S</span>, gl.<span class="property">CLAMP_TO_EDGE</span>) <span class="comment">// 指定纹理S轴方向大小适应方式</span></span><br><span class="line">gl.<span class="title function_">texParameteri</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_WRAP_T</span>, gl.<span class="property">CLAMP_TO_EDGE</span>) <span class="comment">// 指定纹理T轴方向大小适应方式</span></span><br><span class="line">gl.<span class="title function_">texParameterf</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_MIN_FILTER</span>, gl.<span class="property">LINEAR</span>) <span class="comment">// 指定纹理缩小取样算法</span></span><br><span class="line">gl.<span class="title function_">texParameterf</span>(gl.<span class="property">TEXTURE_2D</span>, gl.<span class="property">TEXTURE_MAG_FILTER</span>, gl.<span class="property">LINEAR</span>) <span class="comment">// 指定纹理放大取样算法</span></span><br></pre></td></tr></table></figure>
<p>举的例子是比较常见的取样参数设置。</p>
</li>
</ol>
<p>从上面流程可以看到，除了绑定纹理缓冲和绑定纹理数据和<code>2D</code>纹理略有不同之外，其它基本一致。</p>
<h3 id="天空盒纹理资源的加载"><a class="markdownIt-Anchor" href="#天空盒纹理资源的加载"></a> 天空盒纹理资源的加载</h3>
<p>纹理资源的来源和类型同上面一致；而加载方式也一样，只是要多注意<font color=red><strong>多个不同资源加载时</strong></font>需要等待所有资源全都加载完后才进行数据传递等操作！</p>
<p>以六张不同的纹理图片资源为例：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> skybox = [</span><br><span class="line">    <span class="string">&#x27;1.png&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;2.png&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3.png&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4.png&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;5.png&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;6.png&#x27;</span></span><br><span class="line">] <span class="comment">// 6张纹理图片地址</span></span><br><span class="line"><span class="comment">// 加载纹理图片</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loadImages</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> i = <span class="number">0</span></span><br><span class="line">  <span class="keyword">let</span> skyList = [] <span class="comment">// 已加载成功的图片资源</span></span><br><span class="line">  skybox.<span class="title function_">forEach</span>(<span class="function"><span class="params">url</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>()</span><br><span class="line">    skyList.<span class="title function_">push</span>(img)</span><br><span class="line">    img.<span class="property">onload</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      i++</span><br><span class="line">      <span class="keyword">if</span> (i === <span class="number">6</span>) &#123; <span class="comment">// 所有纹理图片加载完后进行绘制</span></span><br><span class="line">        <span class="comment">// 在这里进行加载完成后的操作</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    img.<span class="property">src</span> = url</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面这种方法是<strong>通过闭包</strong>的方式来判断图片是否已全部加载完成；当然，也可以<font color=#36f>将一个图片加载完成过程封装成一个<code>Promise</code>对象</font>，然后利用<code>Promise.all()</code>方法来执行所有图片加载完成的回调。</p>
<p>其它类型的纹理资源也是同理的，不再赘述。</p>
<h2 id="多个纹理输入"><a class="markdownIt-Anchor" href="#多个纹理输入"></a> 多个纹理输入</h2>
<p>输入多个纹理资源，实际上每个纹理资源的<strong>加载和传递等步骤</strong>同单个纹理资源的是一样的，不同的是多个纹理资源需要额外注意纹理通道的分配和纹理缓冲的对应等问题。</p>
<h3 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h3>
<ol>
<li>
<p><strong>纹理通道的分配</strong>：因为每个着色器内的<font color=red><strong>取样器连接的地址就是纹理通道</strong></font>，当多个纹理缓冲共用一个通道时，那么就相当于这个通道连接的所有取样器实际上都是共用一个纹理缓冲（最近更新数据那个纹理缓冲）；这显然是不可行的。因此需要给同一个<code>webGL</code>上下文内的所有纹理缓冲进行编号，可以设定一个类似于<code>ID</code>的<strong>自增属性</strong>（从<code>0</code>开始），在<code>TEXTURE0</code>常量上加上这个自增属性即可得到对应的纹理通道。</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> textureID = <span class="number">0</span> <span class="comment">// 纹理通道的编号</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="keyword">let</span> textureBuffer = gl.<span class="title function_">createBuffer</span>()</span><br><span class="line">gl.<span class="title function_">activeTexture</span>(gl.<span class="property">TEXTURE0</span> + textureID)</span><br><span class="line">gl.<span class="title function_">bindTexture</span>(gl.<span class="property">TEXTURE_2D</span>)</span><br><span class="line">gl.<span class="title function_">uniform1i</span>(pos, textureID)</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">textureID++ <span class="comment">// 创建并绑定完相应的纹理缓冲后编号自增</span></span><br></pre></td></tr></table></figure>
<p><code>TEXTURE0</code>常量指的就是<code>0</code>号纹理通道的地址，后面的纹理通道地址都是在此基础上自增的；上面只是举了一个最简单的例子，实际上可以声明一个纹理资源信息的类，直接将得到纹理编号绑定到纹理资源上。</p>
</li>
<li>
<p><strong>纹理缓冲的绑定</strong>：当需要对多个纹理资源中的某个纹理数据进行更新时，最好是不要重复再创建纹理缓冲，应该使用首次数据传递时用的那个缓冲对象；因此建议同上面类似，在<strong>第一次创建好纹理缓冲后将缓冲对象绑定到纹理资源信息上</strong>。</p>
</li>
</ol>
<h2 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h2>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/WebGLRenderingContext/texImage2D">WebGLRenderingContext.texImage2D() - Web API 接口参考 | MDN</a></li>
<li><a href="https://learnopengl-cn.readthedocs.io/zh/latest/01%20Getting%20started/06%20Textures/">纹理 - LearnOpenGL-CN</a></li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/ImageData/ImageData">ImageData() - Web API 接口参考 | MDN</a></li>
<li><a href="https://webglfundamentals.org/webgl/lessons/webgl-2-textures.html">WebGL Using 2 or More Textures</a></li>
</ol>
]]></content>
      <categories>
        <category>探索</category>
      </categories>
      <tags>
        <tag>webGL</tag>
        <tag>纹理</tag>
      </tags>
  </entry>
  <entry>
    <title>基于worker实现excel报表导出下载</title>
    <url>/post/worker-and-excel-export/</url>
    <content><![CDATA[<h2 id="业务背景"><a class="markdownIt-Anchor" href="#业务背景"></a> 业务背景</h2>
<p>在前端对透视表数据导出为<code>excel</code>进行下载，透视表数据最高可到百万个单元格以上，因此在主线程内对大量数据进行<code>excel</code>导出时不可避免的会对主线程进行阻塞，而主线程阻塞对于用户感知来说就是<strong>页面卡顿</strong>；</p>
<p>显然，这种业务是一种典型的<code>CPU</code>密集型任务，如果可以放在主线程以外的线程进行执行那么就可以有效的避免对主线程的阻塞了；<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Worker">Worker</a> 正是为此而生，通过创建<code>worker</code>来新建线程，就可以有效的分担主线程的压力；</p>
<span id="more"></span>
<h2 id="关于-worker"><a class="markdownIt-Anchor" href="#关于-worker"></a> 关于 Worker</h2>
<p>至于<code>worker</code>的使用，可以参考这个——<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Workers_API/Using_web_workers">使用 Web Workers - Web API 接口参考 | MDN</a>，其实还挺简单的；更不用说像<code>vite</code>这种<code>dev server</code>还内置了<a href="https://cn.vitejs.dev/guide/features.html#import-with-query-suffixes"><code>worker-loader</code></a>，开箱即用（顺便说一句，<code>vite</code>也对<code>WASM</code>提供了开箱即用的加载，心动😁）。</p>
<p><code>worker</code>虽好，但是其运行上下文跟主线程还是不一样的，实际上是一个子集语法，因此<code>DOM</code>对象和很大一部分的<code>BOM</code>对象都不能访问和使用；具体限制可以参考——<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers">Web Workers 可以使用的函数和类 - Web API 接口参考 | MDN</a>。</p>
<h3 id="worker-的通信"><a class="markdownIt-Anchor" href="#worker-的通信"></a> Worker 的通信</h3>
<img src="http://pic.xiexuefeng.cc/markdown/image-20220806133601806.png?imageslim" alt="image-20220806133601806" style="zoom:50%;" />
<p>主线程和<code>Worker</code>实例之间都是通过<code>postMessage</code>方法来向对方发送消息，而又通过<code>onmessage</code>方法来注册各自的消息接收处理事件。</p>
<h2 id="如何在-worker-中实现-excel-的导出"><a class="markdownIt-Anchor" href="#如何在-worker-中实现-excel-的导出"></a> 如何在 Worker 中实现 excel 的导出</h2>
<p>前端有个著名的<code>excel</code>导出库——<code>sheetjs</code>，幸运的是这个库的<strong>大部分</strong>方法都能在<code>worker</code>中直接进行使用，因此基本上可以参照正常的导出逻辑搬到<code>worker</code>文件中即可。这里不会探讨<code>sheetjs</code>的具体使用细节（因为这种<code>API</code>使用文档网上太多了，就不赘述了），假设此时可以获取到对透视表表格本身的单元格二维数组（即以行为主导，每行里面的元素就是列），那么根据二维数组就能生成一个<code>WorkBook</code>对象。</p>
<img src="http://pic.xiexuefeng.cc/markdown/image-20220806140802237.png?imageslim" alt="image-20220806140802237" style="zoom:50%;" />
<p>而有了<code>WorkBook</code>对象，正常来说基于<code>XLSX.writeFile()</code>等方法就能直接进行<code>excel</code>下载操作了；一般现在的文件下载操作都是通过<code>a</code>标签来实现的，而<code>worker</code>本身是限制<code>DOM</code>访问的，因此不能通过上述方法在<code>worker</code>内实现下载操作，所以应该将下载操作放在主线程，而将必要的数据传送到主线程。</p>
<p>那么问题来了，应该选择传送什么样的数据到主线程？</p>
<h3 id="思路一传送-workbook-对象"><a class="markdownIt-Anchor" href="#思路一传送-workbook-对象"></a> 思路一：传送 WorkBook 对象</h3>
<p>从直觉上来说直接把<code>WorkBook</code>对象传送到主线程，然后让主线程继续接着<code>XLSX.writeFile()</code>方法的路子不就好了。但事实证明，这种思路有<strong>两个弊端</strong>：</p>
<ol>
<li><strong>线程间的通信成本</strong>：<code>WorkBook</code>对象本质上是一个包含大量数据的对象结构（包含单元格数据和单元格设置等），而线程间的通信成本会随着数据量加大而陡增（结构化克隆，序列化，反序列化等等）；当数据量较大时，主线程在接收来自<code>Worker</code>的消息依然会造成明显的阻塞。</li>
<li>从<code>WorkBook</code>对象到下载的成本：由于<code>WorkBook</code>对象本身不能直接进行下载，因此<code>XLSX.writeFile()</code>这类方法内部都需要先将<code>WorkBook</code>对象转为<code>Blob/File</code>对象，然后通过<code>URL.createObjectURL()</code>来创建一个可访问的<code>Blob URL</code>；但实际上将<code>WorkBook</code>对象转为<code>Blob/File</code>对象也是一个挺耗时的过程。</li>
</ol>
<p>这里可以看一个具体导出过程的用时统计即可看出上述弊端：</p>
<img src="http://pic.xiexuefeng.cc/markdown/image-20220806143254336.png" alt="image-20220806143254336" style="zoom:50%;" />
<p>综上，如果采用该方案，那么<code>worker</code>的使用效果就很尴尬😅了。</p>
<h3 id="思路二传送-blob-url"><a class="markdownIt-Anchor" href="#思路二传送-blob-url"></a> 思路二：传送 Blob URL</h3>
<p>幸运的是，<code>worker</code>内可以使用<code>URL.createObjectURL()</code>方法<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>，且创建的<code>Blob URL</code>可以被主线程访问<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>！</p>
<img src="http://pic.xiexuefeng.cc/markdown/image-20220806143536641.png?imageslim" alt="image-20220806143536641" style="zoom:50%;" />
<p>到此，剩下的问题就只有一个了——那就是如何将<code>WorkBook</code>对象转为<code>Blob</code>对象；事实上，<code>sheetjs</code>本身就提供了将<code>WorkBook</code>对象转为二进制数据（<code>Uint8Array</code>）的<code>API</code>——<a href="https://ame.cool/pages/44759a/#%E5%86%99%E5%85%A5%E5%87%BD%E6%95%B0">XLSX.write()</a>，所以这事就很简单了。</p>
<img src="http://pic.xiexuefeng.cc/markdown/image-20220806145214965.png?imageslim" alt="image-20220806145214965" style="zoom:50%;" />
<p>至此，只需要将<code>Blob URL</code>传送到主线程即可完成最后的下载步骤；显然，传送一个<code>URL</code>字符串的通信成本几乎为0，这样就可以把<code>excel</code>导出下载任务的绝大多数运算控制在<code>worker</code>内部了，最小可能的对主线程进行占用。</p>
<h3 id="如何将透视表数据转换为单元格二维数组"><a class="markdownIt-Anchor" href="#如何将透视表数据转换为单元格二维数组"></a> 如何将透视表数据转换为单元格二维数组</h3>
<p>这里渲染透视表采用的是<a href="https://github.com/antvis/S2">S2</a>这个库，这个库其实提供了一个将当前表格数据导出为<code>csv</code>字符串的<code>API</code><sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>（基于此字符串可以分割得到单元格二维数组）；而这个方法运行也是很耗时的，因此需要转移到<code>worker</code>内部进行执行。不过不幸的是这个实例方法本身并不能直接移植到<code>worker</code>（因为其依赖违反了限制），因此需要自行在<code>worker</code>实现一个将透视表数据转为单元格二维数组的方法。</p>
<p>这里已知的信息有：</p>
<ul>
<li>行维度信息</li>
<li>列维度信息</li>
<li>指标维度信息</li>
<li>按照行、列、指标维度拼接的对象数组（即数组元素里面是一个对象，该对象的<code>key</code>为行、列、指标维度，<code>value</code>就是该维度的值）</li>
</ul>
<p>根据上述信息可以构建出一个<strong>行头树结构</strong>和一个<strong>列头树结构</strong>：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/image-20220806161633512.png?imageslim" alt="image-20220806161633512" /></p>
<p>然后根据指标分布在行或列的不同，在行头或列头树结构中的叶结点再添加相应的<strong>指标结点</strong>作为真实的叶结点，最终构成一个完整的行头结构。而根据行头路径（路径指的是自顶向下到一个<strong>叶结点</strong>所经过的结点）、列头路径再加上对应的指标<code>key</code>就可以确定一个单元格的位置，所以基于此就可以构建出具体指标数据对应的单元格<strong>唯一</strong><code>key</code>；既然都知道每个单元格的数据分布在哪了，那么只需要根据行头和列头叶结点做**两层遍历（二维）**即可将所有数据单元格进行填充了。</p>
<h2 id="相关文档"><a class="markdownIt-Anchor" href="#相关文档"></a> 相关文档</h2>
<ul>
<li><a href="https://segmentfault.com/a/1190000041061339">纯前端生成Excel文件骚操作——WebAssembly &amp; web workers - SegmentFault 思否</a></li>
<li><a href="https://blog.cqhpoldi.com/?p=650">SheetJs + xlsx-style 导出附带样式的excel – cqh</a></li>
<li><a href="https://github.com/gitbrent/xlsx-js-style">gitbrent/xlsx-js-style: SheetJS Community Edition + Basic Cell Styles</a>：可以设置一些单元格样式</li>
<li><a href="https://blog.csdn.net/qq_42204238/article/details/104731632">数字转换成26进制字母EXCEL列号（js实现）_const菜鸡的博客-CSDN博客</a></li>
<li><a href="https://www.liyangzone.com/article/2020-02-27-export-multi-level-excel-with-js-xlsx/">使用js-xlsx插件导出多级表头excel | liyang’s blog</a></li>
<li><a href="https://juejin.cn/post/6989437152341786655">https://juejin.cn/post/6989437152341786655</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/141328581">SheetJS（js-xlsx、XLSX）横向纵向合并单元格 - 知乎</a></li>
<li><a href="https://www.cnblogs.com/yangzhou33/p/12484271.html">前端 sheetjs 导出 excel 设置百分比格式</a></li>
<li><a href="https://ame.cool/pages/44759a/#%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BF%9D%E5%AD%98%E6%96%87%E4%BB%B6-%E5%85%BC%E5%AE%B9%E6%80%A7">SheetJS js-xlsx文档 | Ame’s blog</a></li>
<li><a href="https://stackoverflow.com/questions/280389/how-do-you-find-out-the-caller-function-in-javascript%EF%BC%9A%E4%BD%BF%E7%94%A8%60console.trace()%60%E6%96%B9%E6%B3%95%E5%8F%AF%E4%BB%A5%E5%BE%88%E5%A5%BD%E7%9A%84%E6%89%93%E5%8D%B0%E5%87%BA%E5%BD%93%E5%89%8D%E8%B0%83%E7%94%A8%E6%A0%88%EF%BC%8C%E6%AF%94%60caller%60%E5%A5%BD%E7%94%A8">https://stackoverflow.com/questions/280389/how-do-you-find-out-the-caller-function-in-javascript：使用`console.trace()`方法可以很好的打印出当前调用栈，比`caller`好用</a></li>
<li><a href="https://stackoverflow.com/questions/67687036/sheetjs-convert-workbook-back-to-arraybuffer">javascript - SheetJs Convert workbook back to arraybuffer - Stack Overflow</a></li>
<li><a href="https://stackoverflow.com/questions/34993292/how-to-save-xlsx-data-to-file-as-a-blob">javascript - How to save .xlsx data to file as a blob - Stack Overflow</a></li>
<li>js有办法可以catch stack overflow（cpu 100%占用）吗？</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers">https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://stackoverflow.com/questions/36436075/is-it-possible-to-save-a-file-directly-from-a-web-worker">https://stackoverflow.com/questions/36436075/is-it-possible-to-save-a-file-directly-from-a-web-worker</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://s2.antv.vision/zh/docs/common/export/#copydata">https://s2.antv.vision/zh/docs/common/export/#copydata</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>业务</category>
      </categories>
      <tags>
        <tag>worker</tag>
        <tag>excel</tag>
      </tags>
  </entry>
  <entry>
    <title>利用coding.net搭建小程序的合法request域名</title>
    <url>/post/weixin-https/</url>
    <content><![CDATA[<h2 id="问题由来"><a class="markdownIt-Anchor" href="#问题由来"></a> 问题由来</h2>
<p>由于微信小程序的网络请求不能通过<code>XMLHTTPRequest</code>对象或是通常的一些封装好的网络请求库（如<code>axios</code>，<code>fetch</code>，<code>jquery</code>等等），只能使用微信小程序运行环境提供的<code>wx.request()</code>方法进行网络请求；然而该方法只能接受<code>https</code>协议的域名作为合法请求域名，所以首先必须要有<code>SSL</code>证书以及可以配置<code>SSL</code>证书的主机。</p>
<p>所以问题来了，<font color=red><strong>阿里云所有的虚拟主机</strong></font>都不能对服务器端配置进行修改，所以即便申请到了<code>SSL</code>密钥也没法进行配置，因此只能间接配置；</p>
<span id="more"></span>
<h2 id="解决方案一cdn"><a class="markdownIt-Anchor" href="#解决方案一cdn"></a> 解决方案一：CDN</h2>
<p>从网上搜了很多答案，几乎都提到了直接利用CDN加速服务，将流量转换成<code>https</code>，手动配置好申请的<code>SSL</code>证书即可。</p>
<p>然而，我在腾讯云上配置好CDN和<code>SSL</code>证书后，使用<code>https</code>对域名进行访问会报错，所以也不知道哪一步弄错了，心累……</p>
<h2 id="解决方案二codingnet"><a class="markdownIt-Anchor" href="#解决方案二codingnet"></a> 解决方案二：<a href="http://coding.net">coding.net</a></h2>
<p>突然想到<code>github</code>提供了一个支持<code>https</code>访问的个人域名<code>https://username.github.io</code>，然而这只是静态页面，无法对api请求做出反应。</p>
<p>不过，好在国内也有一个不错的<code>git</code>代码托管网站——<a href="https://coding.net/">https://coding.net/</a>，不仅支持静态page，而且前不久还开放了动态page（支持PHP），而且默认提供<code>https</code>支持，简直太慷慨了……、</p>
<h3 id="codingnet的动态page"><a class="markdownIt-Anchor" href="#codingnet的动态page"></a> coding.net的动态page</h3>
<p>直接对某个<code>git</code>项目设置为动态page后，就能得到一个随机分配的<code>https</code>域名，由于被滥用，微信貌似对这类域名进行了屏蔽（果然很多人早就开始利用这个了），不过好在还可以进行自定义域名绑定，用自己备案好的域名绑定就可以了。</p>
<p>真是帮了大忙，把php文件上传进去就可以在微信小程序进行API访问了！</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/180417/CiBbE7gbm2.png?imageslim" alt="coding" /></p>
<h2 id="后话"><a class="markdownIt-Anchor" href="#后话"></a> 后话</h2>
<p>所以还是要好好支持一下<code>coding.net</code>，功能确实强大；除了动态page，webIDE也是很不错的！</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>基于XState对复杂交互进行状态机的构建</title>
    <url>/post/xstate-based-complex-interaction-state-machine-building/</url>
    <content><![CDATA[<h1 id="为什么要使用状态机"><a class="markdownIt-Anchor" href="#为什么要使用状态机"></a> 为什么要使用状态机？</h1>
<p>如果一个交互只简单地涉及到布尔状态或者是多选一，这类只通过一个状态变量即可确认当前状态的场景确实没必要使用状态机，毕竟无非只是使用if/switch就能简单切换状态。如果一个交互逻辑复杂到需要使用多个状态变量来共同确认具体的状态节点，那么在涉及到状态切换时，对于<strong>判断当前具体状态节点</strong>的相关工作量就会呈现指数级的增长；</p>
<span id="more"></span>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240319154440.png?imageslim" alt="image.png" /></p>
<p>如上图所示，在处理复杂状态下的状态转换时，如果使用松散即扁平的结构对状态进行管理时，会在状态节点的判断上要花费大量的工作，且由于关系复杂无法一眼看出节点之间的联系，在实际工作中很容易把自己绕晕，形成bug；那么基于状态机对复杂状态之间的关系建模会是什么样子？</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240319155913.png?imageslim" alt="image.png" /><br />
如上图所示，在建立状态机之后，我们只需要关注<strong>具体状态节点之间的转换处理逻辑</strong>即可；如果把这种结构看成是图结构，那么其中的每一条有向边都是一个状态转换函数，这样对于实际逻辑处理流程也看的很清晰。</p>
<p>关于状态机概念的介绍也可以看看 <code>XState</code>文档里的文章——<a href="https://stately.ai/docs/state-machines-and-statecharts">What are state machines and statecharts? | Stately</a>；</p>
<h1 id="基于xstate构建状态机"><a class="markdownIt-Anchor" href="#基于xstate构建状态机"></a> 基于XState构建状态机</h1>
<p><a href="https://xstate.js.org/">XState</a>就是一个状态机相关的工具库。</p>
<h2 id="构建状态机"><a class="markdownIt-Anchor" href="#构建状态机"></a> 构建状态机</h2>
<p>在理解了状态机的概念之后，构建状态机的关键就在于把复杂的任务拆解成一个清晰的流程，流程中的每一个节点就是状态节点，而流程的走向就是状态节点的转换（或者说联系）；</p>
<p><code>XState</code>中通过<a href="https://www.jsdocs.io/package/xstate#createMachine">createMachine</a>函数来创建状态机，其中的配置参数结构可以理解为一个树（即嵌套的），其中每层结构中常用的字段有：</p>
<ul>
<li><code>id</code>：标记当前状态节点的 <code>ID</code>标识，一般用于更方便地进行状态的切换；</li>
<li><code>states</code>：可以理解为当前状态节点下的子状态机映射；<code>key</code>为 <code>name</code>，但跟 <code>id</code>字段不同，<code>key</code>只能用于<strong>同层状态节点</strong>之间的切换，<code>value</code>就是子状态机配置；</li>
<li><code>initial</code>：当 <code>states</code>字段不为空时，该字段表示当前状态机的默认状态节点为指定的 <code>key</code>；</li>
</ul>
<p>只要掌握了以上几个字段的用法，也就能够构建出状态机中所有的状态节点了；不过光有状态节点还不能构成状态机，还需要构建状态节点之间的转换，配置中使用on字段来控制状态节点之间可以发生的转换，以及转换时需要做的事情，不过on字段本质上只是该状态节点的事件映射（即触发事件时不一定要发生节点的转换），其中key为事件的name，value是一个事件配置，常用的字段如下：</p>
<ul>
<li><code>target</code>：要切换到的状态节点，没有值则表示事件不会切换状态节点；如果是同层状态节点，可以用那个节点的 <code>key</code>，如果不是同层状态节点就要细分目标节点与当前节点的关系<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>：
<ul>
<li>同层节点的后代节点： <code>&#123; target: 'sibling.child.grandchild' &#125;</code></li>
<li>后代节点: <code>&#123; target: '.child.grandchild' &#125;</code></li>
<li>直接指定ID： <code>&#123; target: '#specificState' &#125;</code></li>
</ul>
</li>
<li><code>actions</code>: 事件回调函数；</li>
</ul>
<blockquote>
<p>当事件只是简单的切换状态节点并不涉及回调时，可以简化为 <code>value</code>就是 <code>target</code>的形式；</p>
</blockquote>
<p>掌握了这些就可以构建出状态机的基础形式了，如<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createMachine, createActor &#125; <span class="keyword">from</span> <span class="string">&#x27;xstate&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> textMachine = <span class="title function_">createMachine</span>(&#123;</span><br><span class="line">  <span class="attr">context</span>: &#123;</span><br><span class="line">    <span class="attr">committedValue</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">initial</span>: <span class="string">&#x27;reading&#x27;</span>,</span><br><span class="line">  <span class="attr">states</span>: &#123;</span><br><span class="line">    <span class="attr">reading</span>: &#123;</span><br><span class="line">      <span class="attr">on</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;text.edit&#x27;</span>: &#123; <span class="attr">target</span>: <span class="string">&#x27;editing&#x27;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">editing</span>: &#123;</span><br><span class="line">      <span class="attr">on</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;text.change&#x27;</span>: &#123;</span><br><span class="line">          <span class="attr">actions</span>: <span class="title function_">assign</span>(&#123;</span><br><span class="line">            <span class="attr">value</span>: <span class="function">(<span class="params">&#123; event &#125;</span>) =&gt;</span> event.<span class="property">value</span>,</span><br><span class="line">          &#125;),</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;text.commit&#x27;</span>: &#123;</span><br><span class="line">          <span class="attr">actions</span>: <span class="title function_">assign</span>(&#123;</span><br><span class="line">            <span class="attr">committedValue</span>: <span class="function">(<span class="params">&#123; context &#125;</span>) =&gt;</span> context.<span class="property">value</span>,</span><br><span class="line">          &#125;),</span><br><span class="line">          <span class="attr">target</span>: <span class="string">&#x27;reading&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;text.cancel&#x27;</span>: &#123;</span><br><span class="line">          <span class="attr">actions</span>: <span class="title function_">assign</span>(&#123;</span><br><span class="line">            <span class="attr">value</span>: <span class="function">(<span class="params">&#123; context &#125;</span>) =&gt;</span> context.<span class="property">committedValue</span>,</span><br><span class="line">          &#125;),</span><br><span class="line">          <span class="attr">target</span>: <span class="string">&#x27;reading&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>以上状态机可视化结果为：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240320104436.png?imageslim" alt="image.png" /></p>
<h2 id="改变状态"><a class="markdownIt-Anchor" href="#改变状态"></a> 改变状态</h2>
<p><code>XState</code>是基于<a href="https://zh.wikipedia.org/wiki/%E6%BC%94%E5%91%98%E6%A8%A1%E5%9E%8B">Actor model</a>进行设计的，因此状态的改变都是基于 <code>actor</code>，使用 <code>createActor</code>函数进行创建：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> textActor = <span class="title function_">createActor</span>(textMachine);</span><br></pre></td></tr></table></figure>
<p>创建 <code>actor</code>后，需要调用 <code>start</code>方法启动状态机，进入<strong>初始状态</strong>：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">textActor.<span class="title function_">start</span>(); <span class="comment">// 进入初始状态，即reading</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240320120236.png?imageslim" alt="image.png" /></p>
<p>而要切换到具体的状态节点，则需要使用 <code>send</code>方法触发状态机中指定了 <code>target</code>的那些事件：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">textActor.<span class="title function_">send</span>(&#123; <span class="attr">type</span>: <span class="string">&#x27;text.edit&#x27;</span> &#125;); <span class="comment">// 触发text.edit事件，进入editing</span></span><br></pre></td></tr></table></figure>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240320120319.png?imageslim" alt="image.png" /></p>
<p>不过如果 <code>send</code>方法传入的事件并不是<strong>当前状态节点</strong>中声明的事件（即 <code>on</code>字段中配置的事件），那么该事件则并不会触发。</p>
<h2 id="状态节点的变化监听"><a class="markdownIt-Anchor" href="#状态节点的变化监听"></a> 状态节点的变化监听</h2>
<h3 id="全局监听"><a class="markdownIt-Anchor" href="#全局监听"></a> 全局监听</h3>
<p>当状态节点发生变化时，可以基于 <code>actor</code>的 <code>subscribe</code>方法注册回调进行全局的监听：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line">textActor.<span class="title function_">subscribe</span>(<span class="function">(<span class="params">state</span>) =&gt;</span> &#123;  </span><br><span class="line">	<span class="variable language_">console</span>.<span class="title function_">log</span>(state.<span class="property">context</span>.<span class="property">value</span>);  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="具体状态节点的监听"><a class="markdownIt-Anchor" href="#具体状态节点的监听"></a> 具体状态节点的监听</h3>
<p>在实际业务中，针对具体状态节点的变化才更有用，一般关注的就是当进入和离开某个状态节点时；而 <code>XState</code>在创建状态机的配置中正好提供了两种回调：</p>
<ul>
<li><code>entry</code>：进入该状态节点后的回调；</li>
<li><code>exit</code>：离开该状态节点后的回调；</li>
</ul>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createMachine &#125; <span class="keyword">from</span> <span class="string">&#x27;xstate&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> machine = <span class="title function_">createMachine</span>(&#123;</span><br><span class="line">  <span class="attr">initial</span>: <span class="string">&#x27;someState&#x27;</span>,</span><br><span class="line">  <span class="attr">states</span>: &#123;</span><br><span class="line">    <span class="attr">someState</span>: &#123;</span><br><span class="line">      <span class="attr">entry</span>: <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;someState entered&#x27;</span>), <span class="comment">// 进入该状态后触发</span></span><br><span class="line">      <span class="attr">exit</span>: <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;someState exited&#x27;</span>), <span class="comment">// 离开该状态后触发</span></span><br><span class="line">      <span class="attr">on</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;event.normal&#x27;</span>: &#123;</span><br><span class="line">          <span class="attr">target</span>: <span class="string">&#x27;someState&#x27;</span>, <span class="comment">// or no target</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;event.thatReenters&#x27;</span>: &#123;</span><br><span class="line">          <span class="attr">target</span>: <span class="string">&#x27;someState&#x27;</span>, <span class="comment">// or no target</span></span><br><span class="line">          <span class="attr">reenter</span>: <span class="literal">true</span>,</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="状态机的可视化"><a class="markdownIt-Anchor" href="#状态机的可视化"></a> 状态机的可视化</h2>
<p>其实如果状态机稍微复杂一点，写完状态机的配置后也不见得马上就能清楚的得到状态机的整个流程，因此如果能够把写的状态机逻辑可视化成一个流程图就能加快理解了和后续调整及维护了；</p>
<p>好在XState正好提供了官方的可视化工具：</p>
<ul>
<li><a href="https://stately.ai/viz">XState Visualizer</a>：直接把创建状态机的相关代码粘贴进去就能查看<br />
<img src="https://pic.xiexuefeng.cc/markdown/20240320123209.png?imageslim" alt="image.png" /></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=statelyai.stately-vscode">XState VSCode - Visual Studio Marketplace</a>：<code>XState</code>官方正好提供了 <code>VSCode</code>插件，不仅可以直接查看状态机的流程图，还可以直接在可视化状态下编辑状态机，强烈推荐安装</li>
</ul>
<h2 id="关于状态机的上下文"><a class="markdownIt-Anchor" href="#关于状态机的上下文"></a> 关于状态机的上下文</h2>
<p>通常，状态机会有一些相关的数据在各种状态切换逻辑或事件中使用；而XState在构建状态机时也提供了上下文的配置，以便更直观地在各种事件中对数据进行操作和使用；如<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>：</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createMachine, assign &#125; <span class="keyword">from</span> <span class="string">&#x27;xstate&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> feedbackMachine = <span class="title function_">createMachine</span>(&#123;</span><br><span class="line">  <span class="attr">context</span>: &#123;</span><br><span class="line">    <span class="attr">feedback</span>: <span class="string">&#x27;Some feedback&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">on</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;feedback.update&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">actions</span>: <span class="title function_">assign</span>(&#123;</span><br><span class="line">        <span class="attr">feedback</span>: <span class="function">(<span class="params">&#123; event &#125;</span>) =&gt;</span> event.<span class="property">feedback</span>,</span><br><span class="line">      &#125;),</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> feedbackActor = <span class="title function_">createActor</span>(feedbackMachine);</span><br><span class="line"></span><br><span class="line">feedbackActor.<span class="title function_">subscribe</span>(<span class="function">(<span class="params">state</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(state.<span class="property">context</span>.<span class="property">feedback</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">feedbackActor.<span class="title function_">start</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// logs &#x27;Some feedback&#x27;</span></span><br><span class="line"></span><br><span class="line">feedbackActor.<span class="title function_">send</span>(&#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="string">&#x27;feedback.update&#x27;</span>,</span><br><span class="line">  <span class="attr">feedback</span>: <span class="string">&#x27;Some other feedback&#x27;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// logs &#x27;Some other feedback&#x27;</span></span><br></pre></td></tr></table></figure>
<p>如果用过 <code>Vue</code>相关的状态管理库 <code>Vuex</code>，就会对这种管理数据的 <code>API</code>和方式不陌生了；不过我个人认为不一定非要选择 <code>XState</code>自带的上下文来管理状态机相关数据，其实使用更贴近前端框架的数据形式会更好一点，比如直接选择使用 <code>Vue3</code>的Ref类型数据或者<a href="https://pinia.vuejs.org/">Pinia</a>来管理。</p>
<p>其实 <code>XState</code>也对相应的前端框架（<code>React/Vue</code>等）提供了框架相关的工具支持<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>，不过看了一下 <code>API</code>，涉及到的面还是挺少的。</p>
<h2 id="一些注意事项"><a class="markdownIt-Anchor" href="#一些注意事项"></a> 一些注意事项</h2>
<h3 id="ts类型推断"><a class="markdownIt-Anchor" href="#ts类型推断"></a> TS类型推断</h3>
<p>目前遇到的比较大的槽点就在于 <code>XState</code>对于 <code>TS</code>的类型推断其实做得并不好，很多类型相关的参数并不能直接从配置对象中去推断，而是要自己去手动标注类型<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup>……</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240320130559.png?imageslim" alt="image.png" /></p>
<p>所以在实际使用 <code>actor</code>的 <code>send</code>发送事件时，<code>type</code>就是个粗暴的 <code>string</code>类型：</p>
<p><img src="https://pic.xiexuefeng.cc/markdown/20240320131056.png?imageslim" alt="image.png" /><br />
不过这种情况也可以通过定义事件类型的枚举来解决一下。</p>
<h3 id="actor不能重启"><a class="markdownIt-Anchor" href="#actor不能重启"></a> Actor不能重启</h3>
<p>一旦状态机进入<a href="https://stately.ai/docs/final-states">结束状态</a>或者被手动停止（调用 <code>stop</code>方法）时，就无法通过 <code>start</code>方法重新启动进入状态机了，就只能新建一个 <code>Actor</code>了，不知道这算是 <code>bug</code>还是 <code>feature</code>🤔？</p>
<h2 id="更多"><a class="markdownIt-Anchor" href="#更多"></a> 更多</h2>
<p>其实我这里提到的状态机相关的功能只是 <code>XState</code>中很基础的部分，<code>XState</code>还提供了很多更高阶的功能，建议多看看他们的官方文档——<a href="https://stately.ai/docs">Stately + XState docs | Stately</a>。</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><a href="https://stately.ai/docs/transitions#transitions-to-any-state">https://stately.ai/docs/transitions#transitions-to-any-state</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p><a href="https://stately.ai/docs/xstate#create-a-more-complex-machine">https://stately.ai/docs/xstate#create-a-more-complex-machine</a> <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p><a href="https://stately.ai/docs/context#updating-context-with-assign">https://stately.ai/docs/context#updating-context-with-assign</a> <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p><a href="https://stately.ai/docs/xstate-react">https://stately.ai/docs/xstate-react</a> <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn5" class="footnote-item"><p><a href="https://stately.ai/docs/actors#actors-and-typescript">https://stately.ai/docs/actors#actors-and-typescript</a> <a href="#fnref5" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>交互</tag>
        <tag>状态机</tag>
      </tags>
  </entry>
</search>
